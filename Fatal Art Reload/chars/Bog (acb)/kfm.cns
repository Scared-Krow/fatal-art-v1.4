;★ Bog's constants and state file
;All Fatal Art characters were created out of a base of KFM
;There are comments scattered throughout these files
;Enjoy!
[Data]
;Amount of life to start with
life = 1000
;attack power (more is stronger)
attack = 100
;defensive power (more is stronger)
defence = 100
;Percentage to increase defense everytime player is knocked down
fall.defence_up = 0
;Time which player lies down for, before getting up
liedown.time = 5
;Default hit spark number for HitDefs
sparkno = 2
;Default guard spark number
guard.sparkno = 40
;1 to enable echo on KO
KO.echo = 1
;Volume offset (negative for softer)
volume = 0
;Variables with this index and above will not have their values
;reset to 0 between rounds or matches. There are 60 int variables,
;indexed from 0 to 59, and 40 float variables, indexed from 0 to 39.
;If omitted, then it defaults to 60 and 40 for integer and float
;variables repectively, meaning that none are persistent, i.e. all
;are reset. If you want your variables to persist between matches,
;you need to override state 5900 from common1.cns.
IntPersistIndex = 0
FloatPersistIndex = 0

[Size]
xscale = 0.30           ;Horizontal scaling factor.
yscale = 0.30         ;Vertical scaling factor.
ground.back = 20    ;Player width (back, ground)
ground.front = 20    ;Player width (front, ground)
air.back = 12        ;Player width (back, air)
air.front = 12       ;Player width (front, air)
height = 60          ;Height of player (for opponent to jump over)
attack.dist = 100    ;Default attack distance
proj.attack.dist = 90 ;Default attack distance for projectiles
proj.doscale = 0     ;Set to 1 to scale projectiles too
head.pos = 5, -90   ;Approximate position of head
mid.pos = -5, -70    ;Approximate position of midsection
shadowoffset = 0     ;Number of pixels to vertically offset the shadow
draw.offset = 0,0    ;Player drawing offset in pixels (x, y). Recommended 0,0

[Velocity]
walk.fwd  = 1.3      ;Walk forward
walk.back = -1.3     ;Walk backward
run.fwd  = 4.5, 0    ;Run forward (x, y)
run.back = -4.5,-0.5 ;Hop backward (x, y)
jump.neu = 0,-8.4    ;Neutral jumping velocity (x, y)
jump.back = -2.55    ;Jump back Speed (x, y)
jump.fwd = 2.5       ;Jump forward Speed (x, y)
runjump.back = -2.55,-8.1 ;Running jump speeds (opt)
runjump.fwd = 4,-8.1      ;.
airjump.neu = 0,-8.1      ;.
airjump.back = -2.55      ;Air jump speeds (opt)
airjump.fwd = 2.5         ;.
air.gethit.groundrecover = -.15,-3.5  ;Velocity for ground recovery state (x, y) **MUGEN 1.0**
air.gethit.airrecover.mul = .5,.2     ;Multiplier for air recovery velocity (x, y) **MUGEN 1.0**
air.gethit.airrecover.add = 0,-4.5    ;Velocity offset for air recovery (x, y) **MUGEN 1.0**
air.gethit.airrecover.back = -1       ;Extra x-velocity for holding back during air recovery **MUGEN 1.0**
air.gethit.airrecover.fwd = 0         ;Extra x-velocity for holding forward during air recovery **MUGEN 1.0**
air.gethit.airrecover.up = -2         ;Extra y-velocity for holding up during air recovery **MUGEN 1.0**
air.gethit.airrecover.down = 1.5      ;Extra y-velocity for holding down during air recovery **MUGEN 1.0**

[Movement]
airjump.num = 0       ;Number of air jumps allowed (opt)
airjump.height = 35   ;Minimum distance from ground before you can air jump (opt)
yaccel = .44          ;Vertical acceleration
stand.friction = .85  ;Friction coefficient when standing
crouch.friction = .82 ;Friction coefficient when crouching
stand.friction.threshold = 2          ;If player's speed drops below this threshold while standing, stop his movement **MUGEN 1.0**
crouch.friction.threshold = .05       ;If player's speed drops below this threshold while crouching, stop his movement **MUGEN 1.0**
air.gethit.groundlevel = 25           ;Y-position at which a falling player is considered to hit the ground **MUGEN 1.0**
air.gethit.groundrecover.ground.threshold = -20 ;Y-position below which falling player can use the recovery command **MUGEN 1.0**
air.gethit.groundrecover.groundlevel = 10   ;Y-position at which player in the ground recovery state touches the ground **MUGEN 1.0**
air.gethit.airrecover.threshold = -1  ;Y-velocity above which player may use the air recovery command **MUGEN 1.0**
air.gethit.airrecover.yaccel = .35    ;Vertical acceleration for player in the air recovery state **MUGEN 1.0**
air.gethit.trip.groundlevel = 15      ;Y-position at which player in the tripped state touches the ground **MUGEN 1.0**
down.bounce.offset = 0, 20            ;Offset for player bouncing off the ground (x, y) **MUGEN 1.0**
down.bounce.yaccel = .4               ;Vertical acceleration for player bouncing off the ground **MUGEN 1.0**
down.bounce.groundlevel = 12          ;Y-position at which player bouncing off the ground touches the ground again **MUGEN 1.0**
down.friction.threshold = .05         ;If the player's speed drops below this threshold while lying down, stop his movement **MUGEN 1.0**

;Default language victory quotes (optional).  **MUGEN 1.0**
;If this section is included, the default language victory quotes must be in English.
[Quotes]
; Up to 100 victory quotes can be specified per language (victory0 - victory99)
victory1 = "THEY'RE GONNA EAT YOUR FACE."
victory2 = "Please let me go."
victory3 = "Have you seen me?"
victory4 = "..."
victory5 = "...they're going to kill you."
victory6 = "..."
victory7 = "..."

;Alternate language victory quotes (optional).
;0 or more alternate language sections may be added, preceded by the
;ISO 639-1 code followed by a ".", e.g. "[ja.Quotes]".
;See language setting in mugen.cfg.
[ja.Quotes]
victory1 = "カンフー突き手を破らぬ限り、お前に勝ち目はない！"
victory2 = "十年早いんだぞ"
victory3 = "お前は見覚えがあるな。テレビにでも…？"
victory4 = "お前の動きは見破りやすすぎる。　なに、カンフー突き手が覚えたいんだと？　素人には無理だぞ"
victory5 = "ふー。　いい汗だった"
victory6 = "もっと強い相手に挑戦したい"
victory7 = "なんだと！彼女はここにもいないと？"

;---------------------------------------------------------------------------
; Variable usage:
; This is a record of the variables that KFM uses. Keeping a record of your
; variable usage helps you avoid careless mistakes later.
; var(1)  - Used in kfm.cmd for combo condition (updated every tick)
; var(2)  - Used in Kung Fu Throw (state 800) to remember if fwd was being
;           held (remembered from state 800 through state 810).



[Statedef 9001]
type    = S
movetype= I
physics = S
juggle  = 0
poweradd= 0
ctrl = 0
velset = -9,0
anim = 105
sprpriority = 2

[State 200, 2]
type = PlaySnd
trigger1 = Time = 1
value = 0,1

[State 0, Explod]
type = Explod
trigger1 = TIME = 1
anim = 6442
ID = 673
pos = 20,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.4,0.4
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 240, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


[Statedef 9002]
type    = S
movetype= I
physics = S
juggle  = 0
poweradd= 0
ctrl = 0
velset = -4,0
anim = 105
sprpriority = 2

[State 200, 2]
type = PlaySnd
trigger1 = Time = 1
value = 0,1

[State 0, Explod]
type = Explod
trigger1 = TIME = 1
anim = 6442
ID = 673
pos = 20,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.4,0.4
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 240, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

; NEW BREAKER
[Statedef 300]
type    = S
movetype= A
physics = S
ctrl = 0
velset = 0,0
anim = 300
juggle = 0
poweradd = -2000

[State 0, Helper]
type = Helper
trigger1 = time = 0
name = "BREAKER HITBOX"
stateno = 301
pos = 0,0
postype = p2    ;p2,front,back,left,right
ownpal = 0
 
[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA

 [State 1200, Shake Screen]
type = EnvShake
trigger1 = animelem = 2
time = 45     ;Time to shake screen
ampl = 5     ;Amount to shake
freq = 100   ;A frequency of 180 shakes the screen rapidly
[State 0, VelSet]
type = VelSet
trigger1 = time = 0 
x = -9
[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = unguardable
flag2 = nomusic
flag3 = timerfreeze
[State 0, Pause]
type = Pause
trigger1 = time = 1
time = 20
movetime = 1
;endcmdbuftime = 0
pausebg = 1
;ignorehitpause = 
;persistent = 
[State 210, 1]
type = PlaySnd
trigger1 = animelem = 2
value = 9174,0
[State 210, 1]
type = PlaySnd
trigger1 = time = 0
value = 9174,1
[State 0, Explod]
type = Explod
trigger1 = animelem = 2
anim = 13005
ID = 13005
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 1,1
sprpriority = -2
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 =time = 0
anim = 13004
ID = 13004
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 1,1
sprpriority = -2
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0



[State 210, 1]
type = PlaySnd
trigger1 = time = 0
value = 6345, 0

[State 210, 1]
type = PlaySnd
trigger1 = time = 5
value = 6345, 1
 
 
[State 210, 50]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;BREAKER HITBOX
[Statedef 301]
type    = S
movetype= A
physics = S
ctrl = 0
velset = 0,0
anim = 301
juggle = 0
poweradd = 0

[State -2, Explod];P1 Side.
type = Explod
trigger1 = time = 1 && numexplod(13002)=0 && teamside = 1
anim = 13002
pos = 50,ifelse(numexplod(13002),200,200)
postype = left  ;p2,front,back,left,right
removetime = -2
supermove = 1
scale = 0.5,0.5
sprpriority = 0
id = 13002
bindtime = -1
ontop = 1
ownpal = 1
ignorehitpause = 1
pausemovetime = -1
persistent = 0
[State -2, Explod];P2 Side.
type = Explod
trigger1 =  time = 1 && numexplod(13003)=0 && teamside = 2
anim = 13003
pos = -50,ifelse(numexplod(13003),200,200)
postype = right  ;p2,front,back,left,right
removetime = -2
supermove = 1
scale = 0.5,0.5
sprpriority = 0
id = 13003
bindtime = -1
ontop = 1
ownpal = 1
ignorehitpause = 1
pausemovetime = -1
persistent = 0
[State 210, 0]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage    = 0, 0
guardflag = MAF
pausetime = 12, 12
priority = 7, Hit
sparkno = 3
sparkxy = 0,-50
guard.sparkno = 2
hitsound   = S1, 3
guardsound = 5,2
ground.type = High
ground.slidetime = 12
ground.hittime  = 12
ground.velocity = 9, -4
air.type = High
air.velocity = 9, -4
fall = 1
fall.recover = 0
getpower = 0, 0
givepower = 0, 0
envshake.time = 30
envshake.freq = 80
envshake.ampl = -4
ID = 300
p2stateno = 1040

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = unguardable
flag2 = nomusic
flag3 = timerfreeze


[State 0, DestroySelf]
type = DestroySelf
trigger1 = animelem = 2
persistent = 0

; NEW airBREAKER
[Statedef 302]
type    = A
movetype= A
physics = A
ctrl = 0
velset = 0,0
anim = 302
juggle = 0
poweradd = -2000

[State 0, Helper]
type = Helper
trigger1 = time = 0
name = "BREAKER HITBOX"
stateno = 303
pos = 0,0
postype = p2    ;p2,front,back,left,right
ownpal = 0
[State 0, Pause]
type = Pause
trigger1 = time = 1
time = 20
movetime = 1
;endcmdbuftime = 0
pausebg = 1
;ignorehitpause = 
;persistent = 
[State 210, 1]
type = PlaySnd
trigger1 = animelem = 2
value = 9174,0
[State 210, 1]
type = PlaySnd
trigger1 = time = 0
value = 9174,1
[State 0, Explod]
type = Explod
trigger1 = animelem = 2
anim = 13005
ID = 13005
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 1,1
sprpriority = -2
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 =time = 0
anim = 13004
ID = 13004
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 1,1
sprpriority = -2
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
 
[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA


 [State 1200, Shake Screen]
type = EnvShake
trigger1 = animelem = 2
time = 45     ;Time to shake screen
ampl = 5     ;Amount to shake
freq = 100   ;A frequency of 180 shakes the screen rapidly

 
[State 0, VelSet]
type = VelSet
trigger1 = time = 0 
x = -9

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = unguardable
flag2 = nomusic
flag3 = timerfreeze






[State 210, 1]
type = PlaySnd
trigger1 = time = 0
value = 6345, 0

[State 210, 1]
type = PlaySnd
trigger1 = time = 5
value = 6345, 1
 
 
[State 210, 50]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;BREAKER HITBOX
[Statedef 303]
type    = S
movetype= A
physics = S
ctrl = 0
velset = 0,0
anim = 301
juggle = 0
poweradd = 0

[State -2, Explod];P1 Side.
type = Explod
trigger1 = time = 1 && numexplod(13002)=0 && teamside = 1
anim = 13002
pos = 50,ifelse(numexplod(13002),200,200)
postype = left  ;p2,front,back,left,right
removetime = -2
supermove = 1
scale = 0.5,0.5
sprpriority = 0
id = 13002
bindtime = -1
ontop = 1
ownpal = 1
ignorehitpause = 1
pausemovetime = -1
persistent = 0
[State -2, Explod];P2 Side.
type = Explod
trigger1 =  time = 1 && numexplod(13003)=0 && teamside = 2
anim = 13003
pos = -50,ifelse(numexplod(13003),200,200)
postype = right  ;p2,front,back,left,right
removetime = -2
supermove = 1
scale = 0.5,0.5
sprpriority = 0
id = 13003
bindtime = -1
ontop = 1
ownpal = 1
ignorehitpause = 1
pausemovetime = -1
persistent = 0

[State 210, 0]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage    = 0, 0
guardflag = MAF
pausetime = 12, 12
priority = 7, Hit
sparkno = 3
sparkxy = 0,-50
guard.sparkno = 2
hitsound   = S1, 3
guardsound = 5,2
ground.type = High
ground.slidetime = 24
ground.hittime  = 12
ground.velocity = 9, 22
air.type = High
air.velocity = 9, 22
fall = 1
fall.recover = 0
getpower = 0, 0
givepower = 0, 0
envshake.time = 30
envshake.freq = 80
envshake.ampl = -4
ID = 300
p2stateno = 1040
[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = unguardable
flag2 = nomusic
flag3 = timerfreeze

[State 0, DestroySelf]
type = DestroySelf
trigger1 = animelem = 2
persistent = 0

;----------------------------------------------------------
;hit by breaker (pause)
[statedef 1040]
type    = A
movetype= H
physics = N

[State 1040, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 1

[State 1040, Anim] ;Custom animation
type = ChangeAnim2
trigger1 = 1
value = 1040

[State 1040, State]
type = ChangeState
trigger1 = HitShakeOver = 1
value = 1041

;----------------------------------------------------------
;hit by breaker (fall)
[statedef 1041]
type    = A
movetype= H
physics = N

[State 1041, VelSet]
type = VelSet
trigger1 = time = 0
x = -6
y = 4
[State 1041, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 1
[State 1041, 1] ;Change anim when done with transition
type = ChangeAnim
trigger1 = AnimTime = 0
trigger1 = Anim = 5035
trigger2 = Time = 0     ;If no transition anim
trigger2 = Anim != 5035
trigger2 = (Anim != [5051, 5059]) && (Anim != [5061, 5069])
trigger2 = Anim != 5090 ;Not if hit off ground anim
value = 5050

[State 1041, 2] ;Coming down anim
type = ChangeAnim
trigger1 = anim = [5050,5059]
trigger1 = Vel Y >= ifelse(anim = 5050, Const720p(4), Const720p(-8))
trigger1 = SelfAnimExist(anim+10)
value = anim+10
persistent = 0

[State 1041, 3] ;Gravity
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)


[State 1041, 6]
type = ChangeState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= ifelse((anim = [5051,5059]) || (anim = [5061,5069]), 0, Const(movement.air.gethit.groundlevel))
value = 1042 ;Downed get-hit (hit ground from fall)
;--------------------------------
;hit by breaker (bounce)
[statedef 1042]
type    = L
movetype= H
physics = N

[State 1042, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 1

[State 1042, Anim 5160] ;Coming hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim != [5101,5109]
trigger2 = !SelfAnimExist(5160 + (anim % 10))
value = 5160

[State 1042, Anim 5160] ;Coming hit ground anim (for hit up)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim = [5101,5109]
trigger1 = SelfAnimExist(5160 + (anim % 10))
value = 5160 + (anim % 10)

[State 1042, 3]
type = HitFallVel
trigger1 = Time = 0

[State 1042, 4]
type = PosSet
trigger1 = Time = 0
y = Const(movement.down.bounce.offset.y)

[State 1042, 5]
type = PosAdd
trigger1 = Time = 0
x = Const(movement.down.bounce.offset.x)

[State 1042, 6] ;Acceleration
type = VelAdd
trigger1 = 1
y = Const(movement.down.bounce.yaccel)

[State 1042, 7] ;Hit ground
trigger1 = Vel Y > 0
trigger1 = Pos Y >= Const(movement.down.bounce.groundlevel)
type = Selfstate
value = 5110
;---------------------------------------------------------------------------
; Lose by Time Over
; CNS difficulty: basic
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win state decider
; CNS difficulty: basic
[Statedef 180]
type = S

[State 180, 1]
type = ChangeState
trigger1 = Time = 0
value = 181

;---------------------------------------------------------------------------
; Win pose 1 - Bow
; CNS difficulty: basic
[Statedef 181]
type = S
ctrl = 0
anim = 8974
velset = 0,0

[State 181, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1
[State 0, PlaySnd]
type = PlaySnd
trigger1 = TIME = 1
value = 5762,0
[State -2, Explod];P1 Side.
type = Explod
trigger1 = time = 1 
anim = 57622
pos = 160,80
postype = left  ;p2,front,back,left,right
removetime = -2
supermove = 1
scale = 0.5,0.5
sprpriority = 0
id = 13100
bindtime = -1
ontop = 1
ownpal = 1
ignorehitpause = 1
pausemovetime = -1
persistent = 0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 31
value = 900,10

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 31
value = 900,11

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 31
value = 900,12

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 5
value = 6666,15

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 3
value = 0,3

[State 0, Explod]
type = Explod
trigger1 = animelem = 31
anim = 1002
ID = 673
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.4,0.4
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 1200, Shake Screen]
type = EnvShake
trigger1 = animelem = 13
time = 25     ;Time to shake screen
ampl = 8     ;Amount to shake
freq = 190   ;A frequency of 180 shakes the screen rapidly

[State 1200, Shake Screen]
type = EnvShake
trigger1 = animelem = 31
time = 14     ;Time to shake screen
ampl = 15     ;Amount to shake
freq = 190   ;A frequency of 180 shakes the screen rapidly
;---------------------------------------------------------------------------
;Bog's Cave introduction
[Statedef 190]
type = S
ctrl = 0
anim = 190
velset = 0,0

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = nomusic
flag2 = intro

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 3
value = 900,0+(random%8)
volume = 1000

[State 191, 1] ;Freeze animation until PreIntro is over
type = ChangeAnim
trigger1 = RoundState = 0
value = 190

[State 191, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

[State 191, 3] ;Change to stand state when done
type = ChangeState
trigger1 = AnimTime = 0
value = 0
;---------------------------------------------------------------------------
; Introduction
; CNS difficulty: basic
[Statedef 191]
type = S
ctrl = 0
anim = 9875
velset = 0,0

[State 191, 3]
type = ChangeState
triggerall = StageVar(info.name) = "Bog's Cave"
trigger1 = time = 0
value = 190

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = nomusic
flag2 = intro


[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 61
value = 666,0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 3
value = 7000,0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 31
value = 7000,1

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 21
value = 7000,2

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 8
value = 7000,3

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 30
value = 41,0
[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 23
value = 41,1

[State 191, 1] ;Freeze animation until PreIntro is over
type = ChangeAnim
trigger1 = RoundState = 0
value = 9875

[State 191, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

[State 0, VarSet]
type = VarSet
trigger1 = 1
v = 5
value = 1000

[State 191, 3] ;Change to stand state when done
type = ChangeState
trigger1 = AnimTime = 0
value = 0

;---------------------------------------------------------------------------
; Taunt
; CNS difficulty: easy
[Statedef 195]
type = S
ctrl = 0
anim = 195
velset = 0,0
movetype = I
physics = S
sprpriority = 2

[State 195, 1]
type = CtrlSet
trigger1 = Time = 40
value = 1

[State 220, Sound]
type = PlaySnd
trigger1 = animelem = 5
value = 6666,16

[State 195, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; L Frantic
; CNS difficulty: easy
[Statedef 1008]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 0                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 1008                      ;Change animation (Def: no change)
poweradd = 30                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)
[State 4000, NotHitBy]
type = NotHitBy
trigger1 = !time &&  prevstateno=5120 
value = SCA
time = 11
[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 10
x = 6

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 9
value = 6666, 21

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 9
value = 6666, 21

[State 1200, Shake Screen]
type = EnvShake
trigger1 = AnimElem = 10
time = 4     ;Time to shake screen
ampl = 3     ;Amount to shake
freq = 180   ;A frequency of 180 shakes the screen rapidly

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 9
value = 0,5


[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 2
value = 0,7


[State 200, 1]
type = HitDef
trigger1 = AnimElem = 10
attr = S, SA                     ;Attribute: Standing, Normal Attack
getpower = 50
damage = ceil(ifElse(fvar(11) * 85 < 10, 10, fvar(11) * 85)), 12                   ;Damage that move inflicts, guard damage
animtype = Hard                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 5, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 16, 16                 ;Time attacker pauses, time opponent shakes
guard.pausetime = 18, 18
sparkno = 2                    ;Spark anim no (Def: set above)
sparkxy = -50, -80            ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 3                  ;Sound to play on hit
guardsound = 6, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 8             ;Time that the opponent slides back
ground.hittime  = 11             ;Time opponent is in hit state
guard.slidetime = 9
ground.velocity = -8,-3 
guard.velocity = -12           ;Velocity at which opponent is pushed
airguard.velocity = -7,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -8,-3        ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 15                 ;Time before opponent regains control in air
fall = 1
envshake.time = 16
envshake.freq = 110
envshake.ampl = 4
p2facing =1
[State 200, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Super punch
; CNS difficulty: easy
[Statedef 6660]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 1008                      ;Change animation (Def: no change)
poweradd = 10                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 10
x = 6

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 9
value = 6666, 19

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 9
value = 6666, 19

[State 1200, Shake Screen]
type = EnvShake
trigger1 = AnimElem = 10
time = 4     ;Time to shake screen
ampl = 3     ;Amount to shake
freq = 180   ;A frequency of 180 shakes the screen rapidly

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 9
value = 0,5


[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 2
value = 0,7

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 1
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 0, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 5, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 6, 50                ;Time attacker pauses, time opponent shakes
sparkno = -1                    ;Spark anim no (Def: set above)
sparkxy = -50, -80            ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = -1                  ;Sound to play on hit
guardsound = 6, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 8             ;Time that the opponent slides back
ground.hittime  = 250             ;Time opponent is in hit state
ground.velocity = -1,-3 
guard.velocity = -16           ;Velocity at which opponent is pushed
airguard.velocity = -7,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1,-3        ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 250                    ;Time before opponent regains control in air
fall = 1


[State 200, 1]
type = HitDef
trigger1 = AnimElem = 10
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 100, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 16, 16                 ;Time attacker pauses, time opponent shakes
sparkno = 3                    ;Spark anim no (Def: set above)
sparkxy = -50, -80            ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 3                  ;Sound to play on hit
guardsound = 6, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 8             ;Time that the opponent slides back
ground.hittime  = 11             ;Time opponent is in hit state
ground.velocity = -8,-3 
guard.velocity = -16           ;Velocity at which opponent is pushed
airguard.velocity = -7,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -8,-3        ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 15                 ;Time before opponent regains control in air
fall = 1


[State 200, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; OVERHEAD
[Statedef 667]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 0                      ;Number of air juggle points move takes
;Commonly-used controllers:
;velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 1007                       ;Change animation (Def: no change)
poweradd= 0                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)
[State 410, Hard Hit] ;Win
type = PlaySnd
trigger1 = movehit = 1
value = 5764, (0+(Random%20))



[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 3
value = S0,1

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 4
value = 6666, 0

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 5
attr = S, NA 
getpower = 10                   ;Attribute: Standing, Normal Attack
damage = ceil(ifElse(fvar(11) * 45 < 3, 3, fvar(11) * 45)), 0                  ;Damage that move inflicts, guard damage
animtype = hard                ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = H                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 12,12               ;Time attacker pauses, time opponent shakes
guard.pausetime = 14,14
sparkno = 0                      ;Spark anim no (Def: set above)
sparkxy = -10, -76               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 3                  ;Sound to play on hit
guardsound = 6, 1                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 13             ;Time that the opponent slides back
ground.hittime  = 20             ;Time opponent is in hit state
ground.velocity = -3.3             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 29                 ;Time before opponent regains control in air
forcenofall = 1
p2facing =1

[State 200, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
; LAUNCHER
; CNS difficulty: easy
[Statedef 542]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 0                     ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 1006                       ;Change animation (Def: no change)
poweradd= 0                    ;Power to add (Def: 0)
sprpriority = 2 
                 ;Set p1's sprite layering priority to 2 (in front)
[State 8000, Varadd]
type = VarAdd
trigger1 = time = 1
v = 34    ;fv = 10
value = var(34)+2
;ignorehitpause = 1
persistent = 0

[State 0, PosAdd]
type = PosAdd
trigger1 = Animelem = 5
trigger2 = Animelem = 6
x = 5.7
y = 0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 5
value = S0,0

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 5
value = 6666, 9

[State 200, 1]
type = HitDef
trigger1 = time = 0
attr = S, NA   
hitflag = MAFD                  ;Attribute: Standing, Normal Attack
getpower = 10
animtype  = Up
damage    = ceil(ifElse(fvar(11) * 50 < 3, 3, fvar(11) * 50)), 0
priority  = 5
guardflag = MA
guard.pausetime = 13,17
pausetime = 12,12
guard.pausetime = 14,14
sparkxy = 0,-110
sparkno = 6
hitsound   = 5,2
guardsound = 6,2
ground.type = Low
ground.slidetime = 15
ground.hittime  = 20
ground.velocity = -0.6,-11.3
guard.velocity = -6
air.velocity = -0.6,-10.3
airguard.velocity = -4,-4.5
p2facing = 1
fall = 1                   ;Make p2 fall down
fall.recovertime = 40      ;40 ticks before p2 can recover from fall
yaccel = .4                ;p2 will accelerate down at .4 pixels/sec^2 when falling
fall.recover = 0

[State 1200, Shake Screen]
type = EnvShake
trigger1 = AnimElem = 5
time = 4     ;Time to shake screen
ampl = 3     ;Amount to shake
freq = 180   ;A frequency of 180 shakes the screen rapidly

[State 0, CtrlSet]
type = CtrlSet
trigger1 = animelem = 10 && movehit
value = 1

[State 200, 3]
type = ChangeState
trigger1 = movehit && command = "holdup"
value = 40
ctrl = 1

[State 200, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Stand Light Punch
; CNS difficulty: easy
[Statedef 200]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 0                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 200                       ;Change animation (Def: no change)
poweradd= 5                   ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 2
value = 6666, (1+(Random%2))

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA                     ;Attribute: Standing, Normal Attack
getpower = 10
hitflag = MAFD
damage = ceil(ifElse(fvar(11) * 23 < 3, 3, fvar(11) * 23)), 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAFD                    ;Flags of conditions that move can hit
priority = 2                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
guard.pausetime = 13,13
pausetime = 11, 11                 ;Time attacker pauses, time opponent shakes
sparkno = 4                      ;Spark anim no (Def: set above)
sparkxy = -10, -83               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
guard.slidetime = 14
ground.hittime  = 15             ;Time opponent is in hit state
ground.velocity = -1.4             ;Velocity at which opponent is pushed
guard.velocity = -2
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.1,-3           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 15                 ;Time before opponent regains control in air
p2facing = 1
air.cornerpush.veloff = -6

[State 200, 2]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 0, ChangeState]
type = ChangeState
trigger1 = movehit=1 && command = "x"
value = 201
ctrl = 0

[State 200, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Stand Light Punch2
; CNS difficulty: easy
[Statedef 201]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 0                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 201                       ;Change animation (Def: no change)
poweradd= 5                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 4
value = 6666, 10

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 3 
x = 3
y = 0

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 4 
x = 1.5
y = 0

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 4
attr = S, NA                     ;Attribute: Standing, Normal Attack
getpower = 10
damage = ceil(ifElse(fvar(11) * 23 < 3, 3, fvar(11) * 23)), 0                   ;Damage that move inflicts, guard damage
animtype = medium                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAFD                    ;Flags of conditions that move can hit
priority = 3               ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
guard.pausetime = 14,14
pausetime = 12,12                 ;Time attacker pauses, time opponent shakes
sparkno = 4                      ;Spark anim no (Def: set above)
sparkxy = -10, -83               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 1                  ;Sound to play on hit
guardsound = 6, 1                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
guard.slidetime = 12
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 15             ;Time opponent is in hit state
ground.velocity = -1.4             ;Velocity at which opponent is pushed
guard.velocity = -2
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.1,-2.6           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 15                 ;Time before opponent regains control in air
p2facing =1
air.cornerpush.veloff = -6
[State 200, 2]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 0, ChangeState]
type = ChangeState
trigger1 = movehit=1 && command = "x"
value = 202
ctrl = 0

[State 200, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Stand Light Punch3
; CNS difficulty: easy
[Statedef 202]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 0                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 2,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 202                       ;Change animation (Def: no change)
poweradd= 5                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 6
value = 6666, 18

;[State 0, PosAdd]
;type = PosAdd
;trigger1 = animelem = 3
;x = 3
;y = 0

;[State 0, PosAdd]
;type = PosAdd
;trigger1 = animelem = 6 
;x = 1.7
;y = 0

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 6
getpower = 10
attr = S, NA      
guard.pausetime = 15,15               ;Attribute: Standing, Normal Attack
damage = ceil(ifElse(fvar(11) * 25 < 3, 3, fvar(11) * 25)), 0                   ;Damage that move inflicts, guard damage
animtype = Hard                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAFD                    ;Flags of conditions that move can hit
priority = 4, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 13,13                 ;Time attacker pauses, time opponent shakes
guard.pausetime = 15,15
sparkno = 5                      ;Spark anim no (Def: set above)
sparkxy = -10, -40               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 2                  ;Sound to play on hit
guardsound = 6, 2                ;Sound to play on guard
ground.type = low               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
guard.slidetime = 13
ground.hittime  = 16             ;Time opponent is in hit state
ground.velocity = -3             ;Velocity at which opponent is pushed
guard.velocity = -4
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = low                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 15                 ;Time before opponent regains control in air
envshake.time = 6
envshake.freq = 10
envshake.ampl = 1
p2facing =1
[State 200, 2]
type = PlaySnd
trigger1 = animelem = 5
value = 0, 0

[State 200, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; ex ush thing
; CNS difficulty: easy
[Statedef 1009]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 9876                       ;Change animation (Def: no change)
poweradd = -1000                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)
[State 410, Hard Hit] ;Win
type = PlaySnd
trigger1 = movehit = 1
value = 5764, (0+(Random%20))

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 4
trigger2 = animelem = 20
value = 6666,1

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 9
value = 6666,2

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 15
value = 6666,0

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 58
value = 6666,15

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 3
trigger2 = animelem = 8
value = 0,0

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 14
value = 0,1

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 19
trigger2 = animelem = 27
value = 0,2

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 31
trigger2 = animelem = 36
value = 0,1

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 42
trigger2 = animelem = 47
value = 0,0

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 51
value = 0,2

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 57
value = 0,3

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 18
trigger2 = animelem = 19
trigger3 = animelem = 20
x = 6

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 21
x = 3

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 24
trigger2 = animelem = 25
trigger3 = animelem = 26
x = 6

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 13, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 3, 3                 ;Time attacker pauses, time opponent shakes
sparkno = 0                      ;Spark anim no (Def: set above)
sparkxy = -10, -76               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 30             ;Time opponent is in hit state
ground.velocity = -1             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1,-3          ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 30                ;Time before opponent regains control in air

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 9
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 13, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 3, 3                 ;Time attacker pauses, time opponent shakes
sparkno = 0                      ;Spark anim no (Def: set above)
sparkxy = -10, -60              ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = low               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 30             ;Time opponent is in hit state
ground.velocity = -5             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1,-3           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 30 

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 15
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 13, 0                   ;Damage that move inflicts, guard damage
animtype = medium                ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 6,6                 ;Time attacker pauses, time opponent shakes
sparkno = 2                      ;Spark anim no (Def: set above)
sparkxy = -10, -76               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 2                  ;Sound to play on hit
guardsound = 6, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 30             ;Time opponent is in hit state
ground.velocity = -5             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1,-3           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 30  

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 20
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 13, 0                   ;Damage that move inflicts, guard damage
animtype = medium                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 3, 3                 ;Time attacker pauses, time opponent shakes
sparkno = 0                      ;Spark anim no (Def: set above)
sparkxy = -10, -76               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 30             ;Time opponent is in hit state
ground.velocity = -5             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1,-1           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 30 

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 28
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 13, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 3, 3                 ;Time attacker pauses, time opponent shakes
sparkno = 0                      ;Spark anim no (Def: set above)
sparkxy = -10, -76               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 30             ;Time opponent is in hit state
ground.velocity = -2             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1,-1           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 30 

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 32
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 13, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 3, 3                 ;Time attacker pauses, time opponent shakes
sparkno = 1                      ;Spark anim no (Def: set above)
sparkxy = -10, -76               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 1                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 30             ;Time opponent is in hit state
ground.velocity = -2             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1,-1           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 30  

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 37
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 13, 0                   ;Damage that move inflicts, guard damage
animtype = medium                ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 3, 3                 ;Time attacker pauses, time opponent shakes
sparkno = 0                      ;Spark anim no (Def: set above)
sparkxy = -10, -76               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 30             ;Time opponent is in hit state
ground.velocity = -2             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1,-1           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 30  

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 43
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 13, 0                   ;Damage that move inflicts, guard damage
animtype = hard                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 3, 3                 ;Time attacker pauses, time opponent shakes
sparkno = 1                      ;Spark anim no (Def: set above)
sparkxy = -10, -80               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 1                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 30             ;Time opponent is in hit state
ground.velocity = -2             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1,-1           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 30  

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 48
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 13, 0                   ;Damage that move inflicts, guard damage
animtype = medium                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 3, 3                 ;Time attacker pauses, time opponent shakes
sparkno = 0                      ;Spark anim no (Def: set above)
sparkxy = -10, -30               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = low               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 30             ;Time opponent is in hit state
ground.velocity = -1             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1,-1           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 30

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 54
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 13, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 6, 6                 ;Time attacker pauses, time opponent shakes
sparkno = 2                      ;Spark anim no (Def: set above)
sparkxy = -10, -80               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 2                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 30             ;Time opponent is in hit state
ground.velocity = -2             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1,-0.1           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 30    

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 58
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 13, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8                 ;Time attacker pauses, time opponent shakes
sparkno = 3                      ;Spark anim no (Def: set above)
sparkxy = -10, -70               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 3                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 30             ;Time opponent is in hit state
ground.velocity = -0.1,999             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -0.1,999           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 30 
fall = 1 

[State 1000, 5] ;Opponent near
type = HitDef
trigger1 = AnimElem = 60
attr = S, SA
animtype  = Up
damage    = 20, 4
guard.pausetime = 30,-10
priority  = 5
hitflag = MAFD
guardflag = L
pausetime = 0,0
envshake.time=10
envshake.freq=10
envshake.ampl=3
sparkxy = 0,0
sparkno = -1
hitsound   = S800,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 15
ground.hittime  = 30
ground.velocity = -1,-13.5
guard.velocity = -6
air.velocity = -1,-13
airguard.velocity = -4,-4.5
p2facing = 1
fall = 1                   ;Make p2 fall down
fall.recovertime = 40      ;40 ticks before p2 can recover from fall
yaccel = .4                ;p2 will accelerate down at .4 pixels/sec^2 when falling 

[State 200, 2]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 200, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing strong punch
[Statedef 210]
type    = S
movetype= A
physics = S
juggle  = 0
poweradd= 10
ctrl = 0
velset = 0,0
anim = 210
sprpriority = -1

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 5
value = 6666, (3+(Random%6))

[State 210, 1]
type = PlaySnd
trigger1 = animelem = 5
value = 0, 4

[State 210, 2]
type = HitDef
trigger1 = AnimElem = 5
attr = S, NA
hitflag = MAFD
getpower = 15
animtype  = Medium
damage    = ceil(ifElse(fvar(11) * 40 < 3, 3, fvar(11) * 40)), 0
guardflag = MA
guard.pausetime = 18,18
pausetime = 16,16
sparkno = 5
sparkxy = -10,-65
hitsound   = 5,2
guardsound = 6,2
ground.type = High
ground.slidetime = 12
guard.slidetime = 20
ground.hittime  = 25
ground.velocity = -4
guard.velocity = -6
air.velocity = -2.5,-4
priority = 4, Hit  
envshake.time = 6
envshake.freq = 10
envshake.ampl = 3
p2facing =1
[State 210, 4]
type = SprPriority
trigger1 = AnimElem = 5
value = 2

[State 210, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing light kick
; CNS difficulty: easy
[Statedef 230]
type    = S
movetype= A
physics = S
juggle  = 0
poweradd= 5
ctrl = 0
velset = 0,0
anim = 230
sprpriority = 2

[State 230, 1]
type = PlaySnd
trigger1 = Time = 2
value = 0, 1

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = time = 2
value = 6666, (1+(Random%2))

[State 230, 2]
type = HitDef
trigger1 = Time = 0
attr = S, NA
getpower = 10
animtype  = Medium
damage    = ceil(ifElse(fvar(11) * 26 < 3, 3, fvar(11) * 26)), 0
guardflag = MA
hitflag = MAFD
pausetime = 12,12
guard.pausetime = 14,14
sparkno = 5
sparkxy = -19,-20
hitsound   = 5,1
guardsound = 6,0
ground.type = Low
ground.slidetime = 10
ground.hittime  = 14
ground.velocity = -2
guard.velocity = -3
air.velocity = -2.5,-2
forcenofall = 0
priority = 2  
p2facing = 1
air.cornerpush.veloff = -6

[State 230, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing strong kick
; CNS difficulty: easy
[Statedef 240]
type    = S
movetype= A
physics = S
juggle  = 0
poweradd= 10
ctrl = 0
velset = 0,0
anim = 240
sprpriority = 2

[State 240, 1]
type = PlaySnd
trigger1 = animelem = 4
value = 0, 1

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 4
value = 6666, 9

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 5
x = 3.2
y = 0

[State 0, VarAdd]
type = VarAdd
trigger1 = time = 1
v = 7    
value = var(7)+1 && 2 && 3 && 4



;This is the first hit, triggered on the 3rd element of animation.
[State 410, 2]
type = HitDef
trigger1 = p2statetype = S
trigger1 = !var(7)
trigger1 = Time = 0
attr = S, NA
getpower = 15
animtype  = hard
damage    = ceil(ifElse(fvar(11) * 50 < 3, 3, fvar(11) * 50)), 0
guardflag = MA
hitflag = MAFD
pausetime = 13,13
guard.pausetime = 14,14
sparkno = 6
sparkxy = -16,-90
hitsound   = 5,2
guardsound = 6,2
air.hittime = 32
ground.type = high
guard.ctrltime = 20
guard.hittime = 20
ground.slidetime = 12
guard.slidetime = 12
ground.hittime  = 24
ground.velocity = -5.6
air.velocity = -2,-7
air.cornerpush.veloff = -16
p2facing =1
priority = 3, Hit  
envshake.time = 6
envshake.freq = 10
envshake.ampl = 3

[State 410, 2]
type = HitDef
trigger1 = p2statetype = C
trigger1 = !var(7)
trigger1 = Time = 0
attr = S, NA
getpower = 15
animtype  = hard
damage    = ceil(ifElse(fvar(11) * 50 < 3, 3, fvar(11) * 50)), 0
guardflag = MA
hitflag = MAFD
pausetime = 13,13
guard.pausetime = 15,15
sparkno = 6
sparkxy = -16,-90
hitsound   = 5,2
guardsound = 6,2
air.hittime = 32
ground.type = high
ground.slidetime = 12
guard.slidetime = 12
ground.hittime  = 24
ground.velocity = -5.6
air.velocity = -2,-7
air.cornerpush.veloff = -16
p2facing =1
priority = 3, Hit  
envshake.time = 6
envshake.freq = 10
envshake.ampl = 3

[State 410, 2]
type = HitDef
trigger1 = p2statetype = A 
trigger1 = var(7) = 0
trigger1 = Time = 0
attr = S, NA
getpower = 15
animtype  = hard
damage    = ceil(ifElse(fvar(11) * 50 < 3, 3, fvar(11) * 50)), 0
guardflag = MA
hitflag = MAFD
pausetime = 13,13
guard.pausetime = 15,15
sparkno = 6
sparkxy = -16,-90
hitsound   = 5,2
guardsound = 6,2
air.hittime = 32
ground.type = high
ground.slidetime = 12
guard.slidetime = 19
ground.hittime  = 24
ground.velocity = -5.6
air.velocity = -2,-7
air.cornerpush.veloff = -16
p2facing =1
priority = 3, Hit  
envshake.time = 6
envshake.freq = 10
envshake.ampl = 3

[State 410, 2]
type = HitDef
trigger1 = p2statetype = A 
trigger1 = var(7) = 1
trigger1 = Time = 0
attr = S, NA
getpower = 15
animtype  = hard
damage    = ceil(ifElse(fvar(11) * 50 < 3, 3, fvar(11) * 50)), 0
guardflag = MA
hitflag = MAFD
pausetime = 13,13
guard.pausetime = 15,15
sparkno = 6
sparkxy = -16,-90
hitsound   = 5,2
guardsound = 6,2
air.hittime = 32
ground.type = high
ground.slidetime = 12
guard.slidetime = 19
ground.hittime  = 24
ground.velocity = -5.6
air.velocity = -2,-6.5
air.cornerpush.veloff = -16
p2facing =1
priority = 3, Hit  
envshake.time = 6
envshake.freq = 10
envshake.ampl = 3

[State 410, 2]
type = HitDef
trigger1 = p2statetype = A 
trigger1 = var(7) = 2
trigger1 = Time = 0
attr = S, NA
getpower = 15
animtype  = hard
damage    = ceil(ifElse(fvar(11) * 50 < 3, 3, fvar(11) * 50)), 0
guardflag = MA
hitflag = MAFD
pausetime = 13,13
guard.pausetime = 15,15
sparkno = 6
sparkxy = -16,-90
hitsound   = 5,2
guardsound = 6,2
air.hittime = 32
ground.type = high
ground.slidetime = 12
guard.slidetime = 19
ground.hittime  = 24
ground.velocity = -5.6
air.velocity = -2,-6
air.cornerpush.veloff = -16
p2facing =1
priority = 3, Hit  
envshake.time = 6
envshake.freq = 10
envshake.ampl = 3

[State 410, 2]
type = HitDef
trigger1 = p2statetype = A 
trigger1 = var(7) = 3
trigger1 = Time = 0
attr = S, NA
getpower = 15
animtype  = hard
damage    = ceil(ifElse(fvar(11) * 50 < 3, 3, fvar(11) * 50)), 0
guardflag = MA
hitflag = MAFD
pausetime = 13,13
guard.pausetime = 15,15
sparkno = 6
sparkxy = -16,-90
hitsound   = 5,2
guardsound = 6,2
air.hittime = 32
ground.type = high
ground.slidetime = 12
guard.slidetime = 19
ground.hittime  = 24
ground.velocity = -5.6
air.velocity = -2,-5
air.cornerpush.veloff = -16
p2facing =1
priority = 3, Hit  
envshake.time = 6
envshake.freq = 10
envshake.ampl = 3

[State 240, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;Crouching light punch
; CNS difficulty: easy
; Description: Simple crouching attack. The HitDef's guardflag parameter
;     is set to "L", meaning that the move can only be guarded low
;     (crouching), and not by standing or jumping opponents.
;     Like for all light attacks, it's a good idea to keep the slidetime
;     and hittime parameters at a smaller number, so the opponent isn't
;     stunned for too long. For all crouching attacks you have to
;     remember to set the attr parameter to indicate that it is crouching
;     attack. In this case, "C, NA" stands for "crouching, normal attack".
;     The HitDef's priority is set at 3, instead of the default of 4,
;     so this attack has a lower priority than most others, meaning
;     KFM will get hit instead of trading hits with his opponent if
;     their attack collision boxes (Clsn1) intersect each other's Clsn2
;     boxes at the same time.
[Statedef 400]
type    = C
movetype= A
physics = C
juggle  = 0
poweradd= 5
ctrl = 0
anim = 400
sprpriority = 2

[State 400, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 2
value = 6666, (1+(Random%2))


[State 400, 2]
type = HitDef
trigger1 = Time = 0
attr = CS, NA
getpower = 10
damage    = ceil(ifElse(fvar(11) * 23 < 3, 3, fvar(11) * 23)), 0
priority  = 2
animtype  = Light
hitflag = MAF
guardflag = MA
pausetime = 10,10
guard.pausetime = 12,12
sparkno = 0
sparkxy = -10,-42
hitsound   = 5,0
guardsound = 6,0
ground.type = Low
ground.slidetime = 4
guard.slidetime = 11
guard.velocity = -4
ground.hittime  = 13
guard.hittime  = 7
ground.velocity = -2
air.velocity = -1.5,-3
p2facing =1


[State 400, 3]
type = CtrlSet
trigger1 = Time = 14
value = 1

[State 400, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 11

;---------------------------------------------------------------------------
;Crouching strong punch
; CNS difficulty: easy
; Description: This is a 2-hit move. It is done by having two HitDefs
;     triggered, one for each frame of animation that hits.
;     Notice how the first hit cannot be guarded by an opponent in the
;     air, because of the "M" in the guardflag, meaning it can only
;     be guarded "middle". The second hit has an "MA" guardflag, so
;     it can be guarded both on the ground and in the air.
[Statedef 410]
type    = C
movetype= A
physics = C
juggle  = 0
poweradd= 10
ctrl = 0
anim = 410
sprpriority = 2

[State 410, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 2
value = 6666, (1+(Random%2))

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 3
trigger2 = animelem = 4
x = 3
y = 0
;ignorehitpause = 
;persistent = 

;This is the first hit, triggered on the 3rd element of animation.
[State 410, 2]
type = HitDef
trigger1 = AnimElem = 3
attr = CS, NA
getpower = 5
damage    = ceil(ifElse(fvar(11) * 25 < 3, 3, fvar(11) * 25)), 0
animtype  = Medium
hitflag = MAF
guardflag = MA
pausetime = 12,12
guard.pausetime = 14,14
sparkno = 0
sparkxy = -10,-45
hitsound   = 5,0
guardsound = 6,1
ground.type = Low
ground.slidetime = 12
guard.slidetime = 6
ground.hittime  = 17
ground.velocity = -2
air.velocity = -1,-4
p2facing =1
;This is the second hit, triggered on the 4th element of animation.
[State 410, 3]
type = HitDef
trigger1 = AnimElem = 4
attr = CS, NA
getpower = 10
damage    = ceil(ifElse(fvar(11) * 25 < 3, 3, fvar(11) * 25)), 0
animtype  = Medium
hitflag = MAF
guardflag = L
pausetime = 12,12
guard.pausetime = 14,14
sparkxy = -10,-45
sparkno = 0
hitsound   = 5,0
guardsound = 6,0
ground.type = High
ground.slidetime = 12
ground.hittime  = 8
guard.hittime  = 5
ground.velocity = -2
air.velocity = -1,-2.5
priority = 3, Hit  
p2facing =1


[State 410, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
;Crouching light kick
; CNS difficulty: easy
[Statedef 430]
type    = C
movetype= A
physics = C
juggle  = 0
poweradd= 5
ctrl = 0
anim = 430
sprpriority = 2

[State 430, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 2
value = 6666, (1+(Random%2))


[State 430, 2]
type = HitDef
trigger1 = Time = 0
attr = C, NA
getpower = 10
damage    = ceil(ifElse(fvar(11) * 28 < 3, 3, fvar(11) * 28)), 0
animtype  = Light
hitflag = MAF
guardflag = L
guard.pausetime = 11,11
pausetime = 13,13
sparkno = 0
sparkxy = -10,-8
hitsound   = 5,1
guardsound = 6,0
ground.type = Low
ground.slidetime = 6
ground.hittime  = 11
guard.slidetime = 8
ground.velocity = -3
air.velocity = -2,-3
ground.cornerpush.veloff = -6
priority = 2  
p2facing =1
[State 430, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
;Crouch Strong Kick
; CNS difficulty: easy
; Description: This move uses "Trip" for the "ground.type" parameter in
;     its HitDef. It's a special type that puts the opponent in a tripped
;     animation as he falls. Also, the hitflag parameter in the HitDef
;     is set to "MAFD". The "D" indicates that a downed opponent can be
;     hit by the attack.
[Statedef 440]
type    = C
movetype= A
physics = C
juggle  = 0
poweradd= 10
ctrl = 0
anim = 440
velset = .6,0
sprpriority = 2

[State 440, 2]
type = PlaySnd
trigger1 = Time = 2
value = 0, 2

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 2
value = 6666, (3+(Random%6))

[State 440, 3]
type = HitDef
trigger1 = Time = 0
attr = C, NA
getpower = 15
damage    = ceil(ifElse(fvar(11) * 60 < 3, 3, fvar(11) * 60)), 0
hitflag = MAF
guardflag = L
pausetime = 12,12
guard.pausetime = 14,14
sparkno = 4
sparkxy = -5,-10
hitsound   = 5,2
guardsound = 6,2
ground.type = Trip
ground.slidetime = 5
guard.slidetime = 12
ground.hittime  = 25
ground.velocity = -1,-4
air.velocity = -1,-4
guard.velocity = -5
fall = 1
p2facing =1
[State 440, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
;Jump Light Punch
; CNS difficulty: easy
[Statedef 600]
type    = A
movetype= A
physics = A
juggle  = 0
poweradd= 5
ctrl = 0
anim = 600
sprpriority = 2

[State 600, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0




[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = time = 1
value = 6666, (1+(Random%2))


[State 600, 2]
type = HitDef
trigger1 = Time = 0
attr = A, NA
getpower = 10
damage    = ceil(ifElse(fvar(11) * 20 < 3, 3, fvar(11) * 20)), 0
guardflag = HA
hitflag = MAFD
priority = 3
pausetime = 12,12
guard.pausetime = 14,14
sparkno = 0
sparkxy = -10,-58
hitsound   = 5,0
guardsound = 6,0
ground.type = High
ground.slidetime = 5
ground.hittime  = 8
ground.velocity = -4
air.velocity = -1,-1
air.hittime = 20

[State 600, 3]
type = CtrlSet
trigger1 = Time = 17
value = 1

;---------------------------------------------------------------------------
;Jump Strong Punch
; CNS difficulty: easy
[Statedef 610]
type    = A
movetype= A
physics = A
juggle  = 0
poweradd= 10
ctrl = 0
anim = 610
sprpriority = 2

[State 610, 2]
type = PlaySnd
trigger1 = Time = 2
value = 0, 1


[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = time = 1
value = 6666, (3+(Random%6))

[State 610, 3]
type = HitDef
trigger1 = Time = 0
attr = A, NA
getpower = 15
damage = ceil(ifElse(fvar(11) * 50 < 3, 3, fvar(11) * 50)), 0
guardflag = HA
hitflag = MAFD
priority = 4
pausetime = 12,12
guard.pausetime = 14,14
sparkno = 1
sparkxy = -10,-55
hitsound   = 5,2
guardsound = 6,2
animtype = Med
ground.type = High
ground.slidetime = 12
ground.hittime  = 14
ground.velocity = -4.2
air.velocity = -1,-2.4
air.hittime = 20

;---------------------------------------------------------------------------
;Jump Light Kick
; CNS difficulty: easy
[Statedef 630]
type    = A
movetype= A
physics = A
juggle  = 0
poweradd= 5
ctrl = 0
anim = 630
sprpriority = 2

[State 630, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0



[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = time = 1
value = 6666, (1+(Random%2))
[State 630, 2]
type = HitDef
trigger1 = Time = 0
attr = A, NA
getpower = 10
damage = ceil(ifElse(fvar(11) * 26 < 3, 3, fvar(11) * 26)), 0
guardflag = HA
hitflag = MAFD
priority = 3
pausetime = 12,12
guard.pausetime = 14,14
sparkno = 1
sparkxy = -5,-35
hitsound   = 5,0
guardsound = 6,0
ground.type = High
ground.slidetime = 6
ground.hittime  = 20
ground.velocity = -4
air.velocity = -1,-1.6
air.hittime = 20
p2facing =1
;---------------------------------------------------------------------------
;Jump Strong Kick
; CNS difficulty: easy
[Statedef 640]
type    = A
movetype= A
physics = A
juggle  = 3
poweradd= 10
ctrl = 0
anim = 640
sprpriority = 2

[State 410, Hard Hit] ;Win
type = PlaySnd
trigger1 = movehit = 1
value = 5764, (0+(Random%20))

[State 640, 2]
type = PlaySnd
trigger1 = Time = 2
value = 0, 1

[State 0, Explod]
type = Explod
trigger1 = movehit = 1
anim = 9999
ID = 44021
removetime = -1

[State 0, posadd]
type = posadd
trigger1 = movehit
y = 5

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = time = 1
value = 6666, (3+(Random%6))

[State 640, 3]
type = HitDef
triggerall = numexplod(44021) <= 0
trigger1 = Time = 0
attr = A, NA
getpower = 15
damage    = ceil(ifElse(fvar(11) * 60 < 3, 3, fvar(11) * 60)), 0
guardflag = HA
hitflag = MAFD
priority = 4
pausetime = 15,15
guard.pausetime = 17,17
sparkno = 3
sparkxy = -10,-0
hitsound   = 5,3
guardsound = 6,2
animtype = Med
ground.type = High
ground.slidetime = 12
ground.hittime  = 18
ground.velocity = -1,90
air.velocity = -1,90
fall = 1
fall.yvelocity = -7.8
down.bounce = 6
air.hittime = 20
envshake.time = 15
envshake.freq = 90
envshake.ampl = -6
envshake.phase = 100
p2facing =1
p2stateno = 43211

[State 640, 3]
type = HitDef
triggerall = numexplod(44021) > 0
trigger1 = Time = 0
attr = A, NA
getpower = 15
damage    = ceil(ifElse(fvar(11) * 60 < 3, 3, fvar(11) * 60)), 0
guardflag = HA
hitflag = MAFD
priority = 4
pausetime = 15,15
guard.pausetime = 17,17
sparkno = 3
sparkxy = -10,-0
hitsound   = 5,3
guardsound = 6,2
animtype = Med
ground.type = High
ground.slidetime = 12
ground.hittime  = 18
ground.velocity = -1,90
air.velocity = -1,90
fall = 1
down.bounce = 1
air.hittime = 20
envshake.time = 15
envshake.freq = 90
envshake.ampl = -6
envshake.phase = 100
p2facing =1
;---------------------------------------------------------------------------
;Based Throw - Attempt
[Statedef 800]
type    = S
movetype= A
physics = S
juggle  = 0
velset = 0,0
ctrl = 0
anim = 800
sprpriority = 2

[State 800, 1]
type = HitDef
Trigger1 = Time = 0
attr = S, NT          ;Attributes: Standing, Normal Throw
hitflag = M-          ;Affect only ground people who are not being hit
priority = 1, Miss    ;Throw has low priority, must be miss or dodge type.
sparkno = -1          ;No spark
p1sprpriority = 1     ;Draw p1's sprite in front of p2
p1facing = 1
p2facing = 1          ;Force p2 to face KFM
p1stateno = 801
p2stateno = 812
guard.dist = 0        ;This prevents p2 from going into a guard state if close
fall = 1
;forcenofall = 1

[State 0, VelSet]
type = VelSet
trigger1 = (AnimElemTime (3) >= 0) && (AnimElemTime (7) < 0)
x = 2


[State 800, 2]
type = ChangeState
Trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;Based Throw - Success
[Statedef 801]
type    = S
movetype= A
physics = S
juggle  = 0
velset = 0,0
ctrl = 0
anim = 801
sprpriority = 2

[State 0, TargetState]
type = TargetState
trigger1 = time = 0
value = 812

[State 810, Bind 1]
type = TargetBind
trigger1 = time = 0
time = 6
pos = 20, 0

[State 0, SelfState]
type = TargetState
trigger1 = target, command = "x"
trigger1 = target, command = "a"
value = 802

[State 0, ChangeState]
type = ChangeState
trigger1 = target, command = "x"
trigger1 = target, command = "a"
value = 803
ctrl = 0

[State 0, ChangeState]
type = ChangeState
trigger1 = animtime = 0
value = 810
ctrl = 0

;---------------------------------------------------------------------------
;Based Throw - Tech
[Statedef 802]
type    = S
movetype= A
physics = S
juggle  = 0
velset = 0,0
ctrl = 0
anim = 140 ;Guard Stand animation, reused
sprpriority = 2

[State 0, VelSet]
type = VelSet
trigger1 = 1
x = -4

[State 0, ChangeState]
type = SelfState
trigger1 = time = 8
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;Based Throw - Tech + effects
[Statedef 803]
type    = S
movetype= A
physics = S
juggle  = 0
velset = 0,0
ctrl = 0
anim = 140 ;Guard Stand animation, reused
sprpriority = 2

[State 220, Sound]
type = PlaySnd
trigger1 = time = 0
value = 896,0

[State 0, Helper]
type = Helper
trigger1 = time = 0
helpertype = normal ;player
name = "Throw Tech"
ID = 830
stateno = 830
pos = 0,-70
postype = p1    ;p2,front,back,left,right
facing = 1
ownpal = 1
supermovetime = 0
pausemovetime = 0
size.xscale = .3
size.yscale = .3


[State 0, VelSet]
type = VelSet
trigger1 = 1
x = -4

[State 0, ChangeState]
type = SelfState
trigger1 = time = 8
value = 0
ctrl = 1
;---------------------------------------------------------------------------
;Throw Tech Helper
[Statedef 830]
type = S
movetype = I
physics = N
anim = 1302
sprpriority = 7

[State 0, AngleDraw]
type = AngleDraw
trigger1 = 1
scale = Facing,1

[State 0, DestroySelf]
type = DestroySelf
trigger1 = animtime = 0
;---------------------------------------------------------------------------
;Based Throw - Throwing the opponent
[Statedef 810]
type    = S
movetype= A
physics = N
anim = 810
poweradd = 0

[State 0, TargetState]
type = TargetState
trigger1 = time = 0
value = 5006

[State 0, Turn]
type = Turn
trigger1 = time = 0
trigger1 = command = "holdback"

[State 810, Grab Sound]
type = PlaySnd
trigger1 = AnimElem = 2
value = 1, 1

[State 810, Throw Sound]
type = PlaySnd
trigger1 = AnimElem = 7
value = 800, 0

[State 810, Bind 1]
type = TargetBind
trigger1 = AnimElem = 1
time = 9999
pos = 20, 0

[State 810, Bind 1]
type = TargetBind
trigger1 = AnimElem = 27
time = 1
pos = 20, 0

[State 810, 3]
type = HitDef
trigger1 = time = 0
attr = S, SA
damage = 90, 0
animtype = light
guardflag =
hitflag = MAFD
priority  = 5
pausetime = 8,8
hitsound   = 5,3
sparkxy = 0,0
sparkno = -1
hitsound   = S9000,0
guardsound = 6,2
ground.type = Low
ground.velocity = -5,-2
ground.hittime = 15
p2facing = 1
fall = 1

[State 810, State End]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;-----------------------------
;Grabbed p2 state
[Statedef 812]
type    = S
movetype= H
physics = N
juggle  = 0
poweradd= 0
ctrl = 0
velset = 0,0
sprpriority = 2

[State 0, Width]
type = Width
trigger1 = 1
edge = 0,0
player = 0,0 

[State 0, ChangeAnim2]
type = ChangeAnim
trigger1 = 1
value = 5017
elem = 1

[State 0, ChangeState]
type = SelfState
trigger1 = time = 90
value = 0 
ctrl = 1

;---------------------------------------------------------------------------
; L BLOOD RUSH
;   you HitDefs.
[Statedef 1000]
type    = S
movetype= I
physics = S
juggle  = 0
poweradd= 30
velset = 0,0
anim = 1012
ctrl = 0
sprpriority = 2

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 5
value = 1000, (0+(Random%8))

[State 0, VarAdd]
type = VarAdd
trigger1 = time = 1
v = 31    ;fv = 
value = var(31)+1
;ignorehitpause = 
;persistent = 


[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 5
value = 6666,9

[State 0, Helper]
type = Helper
trigger1 = animelem = 11
name = "L BLOOD BUG"
ID = 1001
stateno = 1001
pos = 0,0
postype = p1    ;p2,front,back,left,right
ownpal = 0



[State 1010, 8]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; L BLOOD BUG
; CNS difficulty: medium
; Description: This is like a standard attack, but with some differences.
;   There are two HitDefs in this attack. One is triggered when the
;   opponent is near (using a p2bodydist trigger), and the other
;   when the opponent is farther away. The main differences between
;   the near and far versions of the HitDefs is that the near version
;   has a "fall" parameter set to 1, causing the opponent to be knocked
;   down. Other minor differences are the damage, and the velocity to
;   give the opponent.
;   The line "attr = S, SA" line means this is a Standing, Special Attack.
;   It is important you have the attr parameter set correctly for all
;   you HitDefs.
[Statedef 1001]
type    = A
movetype= A
physics = N
juggle  = 0
poweradd= 0
velset = 0,0
anim = 1013
sprpriority = -1

[State 1200, Shake Screen]
type = EnvShake
trigger1 = animelem = 10
trigger2 = animelem = 15
trigger3 = animelem = 20
time = 3     ;Time to shake screen
ampl = 2     ;Amount to shake
freq = 130   ;A frequency of 180 shakes the screen rapidly



[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 7
trigger2 = animelem = 12
trigger3 = animelem = 17
value = 1001,0


[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 10
value = 1001,1
[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 15
value = 1001,2
[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 20
value = 1001,3

[State 1001, VarAdd]
type = ParentVarAdd
trigger1 = MoveHit = 1
fvar(13) = 1

[State 210, 2]
type = HitDef
trigger1 = animelem = 10
attr = S, SA
hitflag = MAFD
getpower = 10
animtype  = hard
damage    = ceil(ifElse(root,fvar(11) * 30 < 7, 7, root,fvar(11) *30)),10
guardflag = L
pausetime = 5,5
guard.pausetime = 6,1
guard.slidetime = 1
sparkno = 1
sparkxy = -10,-70
hitsound   = 5,0
guardsound = 6,0
ground.type = low
ground.slidetime = 12
ground.hittime  = 16
ground.velocity = -0.9
air.velocity = -0.5,-2
fall.recover = 0
ground.cornerpush.veloff = -9
p2facing =1


[State 210, 2]
type = HitDef
trigger1 = animelem = 15
attr = S, SA
hitflag = MAFD
getpower = 20
animtype  = up
damage    = ceil(ifElse(root,fvar(11) * 30 < 7, 7, root,fvar(11) *30)),5
guardflag = MA
pausetime = 5,5
guard.pausetime = 6,1
guard.slidetime = 1
envshake.time=10
envshake.freq=10
envshake.ampl=3
sparkxy = 0,-110
sparkno = 1
hitsound   = 5,1
guardsound = 6,1
ground.type = Low
ground.slidetime = 15
ground.hittime  = 20
ground.velocity = -0.9,-9.5
guard.velocity = -6
air.velocity = -1,-9
airguard.velocity = -4,-4.5
p2facing = 1
fall = 1                   ;Make p2 fall down
fall.recovertime = 40      ;40 ticks before p2 can recover from fall
yaccel = .4                ;p2 will accelerate down at .4 pixels/sec^2 when falling
fall.recover = 0
[State 210, 2]
type = HitDef
trigger1 = animelem = 20
attr = S, SA
hitflag = MAFD
getpower = 20
animtype  = hard
damage    = ceil(ifElse(root,fvar(11) * 30 < 7, 7, root,fvar(11) *30)),0
guardflag = MA
pausetime = 5,5
guard.pausetime = 6,1
guard.slidetime = 1
sparkno = 2
sparkxy = -5,-140
hitsound   = 5,2
guardsound = 6,2
ground.type = High
ground.slidetime = 12
ground.hittime  = 16
ground.velocity = 0.5,-4
air.velocity = 0.5,-5
forcenofall = 0
fall.recover = 0
p2facing =1
[State 0, Explod]
type = Explod
trigger1 = animelem = 10
anim = 1002
ID = 673
pos = 70,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 15
anim = 1002
ID = 673
pos = 80,-50
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 20
anim = 1003
ID = 673
pos = 110,-110
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 0, DestroySelf]
type = DestroySelf
trigger1 = animelem = 22
persistent = 0

[State 0, DestroySelf]
type = DestroySelf
trigger1 = animelem = 56
trigger2 = parent,stateno = 5000
trigger3 = parent,stateno = 5001
trigger4 = parent,stateno = 5070
trigger5 = parent,stateno = 5071
persistent = 0
;---------------------------------------------------------------------------
; S BLOOD RUSH
; CNS difficulty: medium
; Description: This is like a standard attack, but with some differences.
;   There are two HitDefs in this attack. One is triggered when the
;   opponent is near (using a p2bodydist trigger), and the other
;   when the opponent is farther away. The main differences between
;   the near and far versions of the HitDefs is that the near version
;   has a "fall" parameter set to 1, causing the opponent to be knocked
;   down. Other minor differences are the damage, and the velocity to
;   give the opponent.
;   The line "attr = S, SA" line means this is a Standing, Special Attack.
;   It is important you have the attr parameter set correctly for all
;   you HitDefs.
[Statedef 1002]
type    = S
movetype= I
physics = S
juggle  = 0
poweradd= 30
velset = 0,0
anim = 1000
ctrl = 0
sprpriority = 2

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 5
value = 1000, (0+(Random%8))

[State 0, VarAdd]
type = VarAdd
trigger1 = time = 1
v = 35    ;fv = 
value = var(35)+1
;ignorehitpause = 
;persistent = 

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 5
value = 6666,10

[State 0, Helper]
type = Helper
trigger1 = animelem = 11
name = "S BLOOD BUG"
ID = 1003
stateno = 1003
pos = 0,0
postype = p1    ;p2,front,back,left,right
ownpal = 0



[State 1010, 8]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; S BLOOD BUG
; CNS difficulty: medium
; Description: This is like a standard attack, but with some differences.
;   There are two HitDefs in this attack. One is triggered when the
;   opponent is near (using a p2bodydist trigger), and the other
;   when the opponent is farther away. The main differences between
;   the near and far versions of the HitDefs is that the near version
;   has a "fall" parameter set to 1, causing the opponent to be knocked
;   down. Other minor differences are the damage, and the velocity to
;   give the opponent.
;   The line "attr = S, SA" line means this is a Standing, Special Attack.
;   It is important you have the attr parameter set correctly for all
;   you HitDefs.
[Statedef 1003]
type    = A
movetype= A
physics = N
juggle  = 0
poweradd= 0
velset = 1,0
anim = 1001
sprpriority = -1

[State 1200, Shake Screen]
type = EnvShake
trigger1 = animelem = 10
trigger2 = animelem = 15
trigger3 = animelem = 20
time = 3     ;Time to shake screen
ampl = 2     ;Amount to shake
freq = 130   ;A frequency of 180 shakes the screen rapidly

[State 1003, VarAdd]
type = ParentVarAdd
trigger1 = MoveHit = 1
fvar(13) = 1


[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 7
trigger2 = animelem = 12
trigger3 = animelem = 17
value = 1001,0


[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 10
value = 1001,1
[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 15
value = 1001,2
[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 20
value = 1001,3

[State 210, 2]
type = HitDef
trigger1 = animelem = 10
attr = S, SA
hitflag = MAFD
getpower = 10
animtype  = hard
damage    = ceil(ifElse(root,fvar(11) * 30 < 7, 7, root,fvar(11) *30)),10
guardflag = L
pausetime = 5,5
guard.pausetime = 6,1
guard.slidetime = 1
sparkno = 1
sparkxy = -10,-70
hitsound   = 5,0
guardsound = 6,0
ground.type = low
ground.slidetime = 12
ground.hittime  = 16
ground.velocity = -2.3
air.velocity = -2.3,-5
ground.cornerpush.veloff = -11
fall.recover = 0
p2facing =1


[State 210, 2]
type = HitDef
trigger1 = animelem = 15
attr = S, SA
hitflag = MAFD
getpower = 20
animtype  = up
damage    = ceil(ifElse(root,fvar(11) * 30 < 7, 7, root,fvar(11) *30)),5
guardflag = MA
pausetime = 5,5
guard.pausetime = 6,1
guard.slidetime = 1
envshake.time=10
envshake.freq=10
envshake.ampl=3
sparkxy = 0,-110
sparkno = 1
hitsound   = 5,1
guardsound = 6,1
ground.type = Low
ground.slidetime = 15
ground.hittime  = 20
ground.velocity = -0.9,-9.5
guard.velocity = -6
air.velocity = -1.9,-9
airguard.velocity = -4,-4.5
p2facing = 1
fall = 1                   ;Make p2 fall down
fall.recovertime = 0      ;40 ticks before p2 can recover from fall
yaccel = .4                ;p2 will accelerate down at .4 pixels/sec^2 when falling
fall.recover = 0
[State 210, 2]
type = HitDef
trigger1 = animelem = 20
attr = S, SA
hitflag = MAFD
getpower = 20
animtype  = hard
damage    = ceil(ifElse(root,fvar(11) * 30 < 7, 7, root,fvar(11) *30)),0
guardflag = MA
pausetime = 5,5
guard.pausetime = 6,1
guard.slidetime = 1
sparkno = 2
sparkxy = -5,-140
hitsound   = 5,2
guardsound = 6,2
ground.type = High
ground.slidetime = 12
ground.hittime  = 16
ground.velocity = 0.5,-4
air.velocity = 0.5,-5.7
fall = 1
fall.recover = 0
p2facing =1
[State 0, Explod]
type = Explod
trigger1 = animelem = 10
anim = 1002
ID = 673
pos = 70,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 15
anim = 1002
ID = 673
pos = 80,-50
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 20
anim = 1003
ID = 673
pos = 110,-110
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 0, DestroySelf]
type = DestroySelf
trigger1 = animelem = 21
persistent = 0

[State 0, DestroySelf]
type = DestroySelf
trigger1 = animelem = 56
trigger2 = parent,stateno = 5000
trigger3 = parent,stateno = 5001
trigger4 = parent,stateno = 5070
trigger5 = parent,stateno = 5071
persistent = 0
;---------------------------------------------------------------------------
; EX BLOOD RUSH
; CNS difficulty: medium
; Description: This is like a standard attack, but with some differences.
;   There are two HitDefs in this attack. One is triggered when the
;   opponent is near (using a p2bodydist trigger), and the other
;   when the opponent is farther away. The main differences between
;   the near and far versions of the HitDefs is that the near version
;   has a "fall" parameter set to 1, causing the opponent to be knocked
;   down. Other minor differences are the damage, and the velocity to
;   give the opponent.
;   The line "attr = S, SA" line means this is a Standing, Special Attack.
;   It is important you have the attr parameter set correctly for all
;   you HitDefs.
[Statedef 1004]
type    = S
movetype= I
physics = S
juggle  = 0
poweradd= 0
velset = 0,0
ctrl = 0
sprpriority = 2

;Armor
[State 0, ChangeAnim]
type = ChangeAnim
trigger1 = time = 0 && anim!=10255 ;Animation of this state
value = 10255
elem = 1
[State 0, PowerAdd]
type = PowerAdd
trigger1 = animelem = 1  && prevstateno!= 666999;Uses 1 Bar of meter on the first frame to prevent losing 1 bar of meter each time they get hit
value = -1000
[State 0, VarSet]
type = VarSet
trigger1 = time = 0
fv = 6  ;fv = 10
value = 1004 ;State of this attack
;ignorehitpause = 
;persistent = 

[State 0, HitOverride]
type = HitOverride
trigger1 = var(45)<=1 ;Time is how many ticks the Armor lasts
attr = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
slot = 0
stateno = 666999 
time = 1
forceair = 0
[State 0, VarSet]
type = VarSet
trigger1 = prevstateno!=(666999)
v = 45    ;fv = 10
value = 0
;ignorehitpause = 
;persistent = 
;-----


[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 5
value = 666, (0+(Random%2))


[State 0, VarAdd]
type = VarAdd
trigger1 = time = 1
v = 32     ;fv = 
value = var(32)+1
;ignorehitpause = 
;persistent = 

[State 220, Sound]
type = PlaySnd
trigger1 = animelem = 1
value = 896,0
[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 6920
ID = 673
pos = -3,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 4
anim = 2663
ID = 673
pos = 50,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.5,0.5
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 2662
ID = 673
pos = 50,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.5,0.5
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 1070, Afterimage]
type = AfterImage
trigger1 = Time = 0
length = 13
PalBright   =  30, 30,  0
PalContrast =  70, 70, 20
PalAdd      = -10,-10,-10
PalMul      = .85,.85,.50
TimeGap  = 1
FrameGap = 2
Trans = Add
time = 2

[State 1070, Afterimage]
type = AfterImageTime
trigger1 = 1
time = 2

[State 1070, Blink Yellow]
type = PalFX
trigger1 = Time = 0
time = 20
add = 32,16,0
sinadd = 64,32,5,3



[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 5
value = 1002,0




[State 0, Helper]
type = Helper
trigger1 = animelem = 5
name = "EX BLOOD BUG"
ID = 1005
stateno = 1005
pos = pos y >=0
scale = 0.5,0.5
postype = p2    ;p2,front,back,left,right
ownpal = 0



[State 1010, 8]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; EX BLOOD BUG
; CNS difficulty: medium
; Description: This is like a standard attack, but with some differences.
;   There are two HitDefs in this attack. One is triggered when the
;   opponent is near (using a p2bodydist trigger), and the other
;   when the opponent is farther away. The main differences between
;   the near and far versions of the HitDefs is that the near version
;   has a "fall" parameter set to 1, causing the opponent to be knocked
;   down. Other minor differences are the damage, and the velocity to
;   give the opponent.
;   The line "attr = S, SA" line means this is a Standing, Special Attack.
;   It is important you have the attr parameter set correctly for all
;   you HitDefs.
[Statedef 1005]
type    = A
movetype= A
physics = N
juggle  = 0
poweradd= 0
velset = 0,0
anim = 1026
sprpriority = -1

[State 0, PosSet]
type = PosSet
trigger1 = time = 0
y = enemy ,pos y >=0

[State 1200, Shake Screen]
type = EnvShake
trigger1 = animelem = 23
time = 13     ;Time to shake screen
ampl = 10     ;Amount to shake
freq = 130   ;A frequency of 180 shakes the screen rapidly

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 23
value = 1002,1

[State 0, VarAdd]
type = VarAdd
trigger1 = time = 1 
v =  31   ;fv = 
value = var(31)+1
;ignorehitpause = 
;persistent = 


[State 210, 2]
type = HitDef
trigger1 = animelem = 23
attr = CS, SA
hitflag = MAFD
getpower = 0
animtype  = hard
damage    = ceil(ifElse(root,fvar(11) * 100 < 60, 60, root,fvar(11) *100)),30
guardflag = MA
pausetime = 10,10
sparkno = 3
sparkxy = -10,-70
hitsound   = 5,3
guardsound = 6,2
ground.type = High
ground.slidetime = 12
ground.hittime  = 16
ground.velocity = 8,-7
air.velocity = 0,-9
fall = 1

[State 0, Explod]
type = Explod
trigger1 = animelem = 23
anim = 10277
ID = 673
pos = -5,55
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.5,0.5
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 0, Explod]
type = Explod
trigger1 = animelem = 23
anim = 1002
ID = 673
pos = 10,-20
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0


[State 0, DestroySelf]
type = DestroySelf
trigger1 = animelem = 24
persistent = 0

;---------------------------------------------------------------------------
; HA BLOOD BUG
; CNS difficulty: medium
; Description: This is like a standard attack, but with some differences.
;   There are two HitDefs in this attack. One is triggered when the
;   opponent is near (using a p2bodydist trigger), and the other
;   when the opponent is farther away. The main differences between
;   the near and far versions of the HitDefs is that the near version
;   has a "fall" parameter set to 1, causing the opponent to be knocked
;   down. Other minor differences are the damage, and the velocity to
;   give the opponent.
;   The line "attr = S, SA" line means this is a Standing, Special Attack.
;   It is important you have the attr parameter set correctly for all
;   you HitDefs.
[Statedef 1006]
type    = A
movetype= A
physics = N
juggle  = 4
poweradd= 0
velset = 0,0
anim = 1030
sprpriority = -1

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = nomusic
flag2 = timerfreeze

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = unguardable

[State 1200, Shake Screen]
type = EnvShake
trigger1 = animelem = 23
time = 13     ;Time to shake screen
ampl = 10     ;Amount to shake
freq = 130   ;A frequency of 180 shakes the screen rapidly

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 1002,0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 23
value = 1002,1



[State 210, 2]
type = HitDef
trigger1 = animelem = 23
attr = S, NA
getpower = 0
animtype  = hard
damage    = 30,5
guardflag = MA
pausetime = 1,1
sparkno = 3
sparkxy = -10,-70
hitsound   = 5,0
guardsound = 6,2
ground.type = High
ground.slidetime = 12
ground.hittime  = 16
ground.velocity = 8,-2
air.velocity = 9,-2
fall = 1
guard.dist = 0

[State 0, Explod]
type = Explod
trigger1 = animelem = 23
anim = 1027
ID = 673
pos = 10,29
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.5,0.5
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 0, Explod]
type = Explod
trigger1 = animelem = 23
anim = 1002
ID = 673
pos = 10,-20
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0


[State 0, DestroySelf]
type = DestroySelf
trigger1 = animelem = 24
persistent = 0

;---------------------------------------------------------------------------
; Strong Kung Fu Palm
; CNS difficulty: medium
[Statedef 1010]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 60
velset = 0,0
anim = 1010
ctrl = 0
sprpriority = 2

[State 1010, 1]
type = PlaySnd
trigger1 = Time = 9
value = 0, 3



[State 1010, 6] ;Opponent near
type = HitDef
trigger1 = AnimElem = 3
trigger2 = animelem = 7
attr = S, SA
animtype  = Hard
damage    = 90, 4
priority  = 5
guardflag = MA
pausetime = 3,3
sparkxy = -10,-60
hitsound   = 5,0
guardsound = 6,0
ground.type = high
ground.slidetime = 12
ground.hittime  = 17
ground.velocity = -1,0
air.velocity = -4,-3
fall = 0

[State 1010, 6] ;Opponent near
type = HitDef
trigger1 = AnimElem = 11
attr = S, SA
animtype  = Hard
damage    = 90, 4
priority  = 5
guardflag = MA
pausetime = 6,6
sparkxy = -10,-60
hitsound   = 5,4
guardsound = 6,0
ground.type = Low
ground.slidetime = 12
ground.hittime  = 17
ground.velocity = -1,0
air.velocity = -4,-3
fall = 0

[State 1010, 6] ;Opponent near
type = HitDef
trigger1 = AnimElem = 14
attr = S, SA
animtype  = Hard
damage    = 90, 4
priority  = 5
guardflag = MA
pausetime = 15,15
sparkxy = -10,-60
hitsound   = 5,3
guardsound = 6,0
ground.type = high
ground.slidetime = 12
ground.hittime  = 17
ground.velocity = -6,-3.5
air.velocity = -4,-3
fall = 1

[State 1010, 8]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; L FRANTIC RUSH
; CNS difficulty: advanced
; Description: This is a complicated attack move. If you're a beginner,
;     you should skip looking at this for now and check it later when
;     you are more comfortable with the cns.
;     This move puts the other player in a custom get-hit state.
;     The line "p2stateno = 1025" in the HitDef does this. KFM has some
;     palette effects as well as after-image effects.
[Statedef 1020]
type    = S
movetype= A
physics = N
juggle  = 6
poweradd= 10
velset = 0,0
anim = 1020
ctrl = 0
sprpriority = 2

[State 1020, 1]
type = PlaySnd
trigger1 = Time = 2
value = 0, 3




[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 2
trigger2 = animelem = 3
trigger3 = animelem = 4
trigger4 = animelem = 5
trigger5 = animelem = 6
x = 9



[State 1020, 6]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage    = 95, 5
getpower  = 0
priority  = 4
guardflag = MA
pausetime = 11,11
sparkxy = -10,-60
hitsound   = 5,4
guardsound = 6,0
ground.type = Low
ground.slidetime = 20
ground.hittime  = 22
ground.velocity = -5,-3
guard.velocity = -7
air.velocity = -5,-3
airguard.velocity = -5, -4
fall = 1


[State 1020, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 1025
ctrl = 1

;---------------------------------------------------------------------------
; S FRANTIC RUSH
; CNS difficulty: advanced
; Description: This is a complicated attack move. If you're a beginner,
;     you should skip looking at this for now and check it later when
;     you are more comfortable with the cns.
;     This move puts the other player in a custom get-hit state.
;     The line "p2stateno = 1025" in the HitDef does this. KFM has some
;     palette effects as well as after-image effects.
[Statedef 1021]
type    = S
movetype= A
physics = N
juggle  = 2
poweradd= 30
velset = 0,0
anim = 1040
ctrl = 0
sprpriority = 2

[State 1020, 1]
type = PlaySnd
trigger1 = Time = 2
value = 0, 3

[State 4000, NotHitBy]
type = NotHitBy
trigger1 = !time &&  prevstateno=5120 
value = SCA
time = 11

[State 0, VelSet]
type = VelSet
trigger1 = (AnimElemTime (3) >= 0) && (AnimElemTime (7) < 0)
x = 5

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 3
x = 11

;[State 0, PosAdd]
;type = PosAdd
;trigger1 = animelem = 3
;trigger2 = animelem = 4
;trigger3 = animelem = 5
;x = 19

;;[State 0, PosAdd]
;type = PosAdd
;trigger1 = animelem = 6
;trigger2 = animelem = 7
;trigger3 = animelem = 8
;x = 8
;y = 0



[State 220, Sound]
type = PlaySnd
trigger1 = animelem = 1
value = 6666,17

[State 1020, 6]
type = HitDef
trigger1 = animelem = 6
attr = S, SA
getpower = 50
animtype  = Hard
damage    = ceil(ifElse(fvar(11) * 55 < 7, 7, fvar(11) * 55)), 10
getpower  = 0
priority  = 4
guardflag = MA
pausetime = 12,12
guard.pausetime = 17,17
sparkxy = -10,-60
hitsound   = 5,2
guardsound = 6,2
ground.type = Low
ground.slidetime = 10
ground.hittime  = 29
ground.velocity = -6
guard.velocity = -8
guard.slidetime = 23
air.hittime = 40
air.velocity = -3,-2
airguard.velocity = -5, -4
ground.cornerpush.veloff = -10
p2facing =1
forcenofall = 1

[State 0, Explod]
type = Explod
trigger1 = animelem = 3
anim = 6441
pos = -5,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.5,0.5
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 0
removeongethit = 0
;ignorehitpause =
;trans = 
;persistent =
;supermove = 0
;pausemove = 0


;[State 0, PosAdd]
;type = PosAdd
;trigger1 = animelem = 9
;x = 6

[State 1020, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 10233
ctrl = 1

;---------------------------------------------------------------------------
; EX FRANTIC RUSH
; CNS difficulty: advanced
; Description: This is a complicated attack move. If you're a beginner,
;     you should skip looking at this for now and check it later when
;     you are more comfortable with the cns.
;     This move puts the other player in a custom get-hit state.
;     The line "p2stateno = 1025" in the HitDef does this. KFM has some
;     palette effects as well as after-image effects.
[Statedef 1023]
type    = S
movetype= A
physics = N
juggle  = 0
poweradd= 0
velset = 0,0
anim = 1020
ctrl = 0
sprpriority = 2

[State 4000, NotHitBy]
type = NotHitBy
trigger1 = !time &&  prevstateno=5120 
value = SCA
time = 19
[State 220, Sound]
type = PlaySnd
trigger1 = animelem = 1
value = 896,0
[State 0, VarAdd]
type = VarAdd
trigger1 = time = 1
v = 33    ;fv = 
value = var(33)+1
;ignorehitpause = 
;persistent = 


[State 220, Sound]
type = PlaySnd
trigger1 = animelem = 1
value = 6666,16

;Armor
[State 0, ChangeAnim]
type = ChangeAnim
trigger1 = time = 0 && anim!=1020 ;Animation of this state
value = 1020
elem = 1
[State 0, PowerAdd]
type = PowerAdd
trigger1 = animelem = 1  && prevstateno!= 666999;Uses 1 Bar of meter on the first frame to prevent losing 1 bar of meter each time they get hit
value = -1000
[State 0, VarSet]
type = VarSet
trigger1 = time = 0
fv = 6  ;fv = 10
value = 1023 ;State of this attack
;ignorehitpause = 
;persistent = 
[State 0, HitOverride]
type = HitOverride
trigger1 = var(45)<=1 ;Time is how many ticks the Armor lasts
attr = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
slot = 0
stateno = 666999 
time = 1
forceair = 0
[State 0, VarSet]
type = VarSet
trigger1 = prevstateno!=(666999)
v = 45    ;fv = 10
value = 0
;ignorehitpause = 
;persistent = 
;-----


;[State 4000, NotHitBy]
;type = NotHitBy
;trigger1 = time = 0
;value = SCA
;time = 19

[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 6920
ID = 673
pos = -3,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 4
anim = 2663
ID = 673
pos = 50,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.5,0.5
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 2662
ID = 673
pos = 50,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.5,0.5
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 1070, Afterimage]
type = AfterImage
trigger1 = Time = 0
length = 13
PalBright   =  30, 30,  0
PalContrast =  70, 70, 20
PalAdd      = -10,-10,-10
PalMul      = .85,.85,.50
TimeGap  = 1
FrameGap = 2
Trans = Add
time = 2

[State 1070, Afterimage]
type = AfterImageTime
trigger1 = 1
time = 2

[State 1070, Blink Yellow]
type = PalFX
trigger1 = Time = 0
time = 20
add = 32,16,0
sinadd = 64,32,5,3

[State 1020, 1]
type = PlaySnd
trigger1 = Time = 2
value = 0, 3

;[State 0, PosAdd]
;type = PosAdd
;trigger1 = animelem = 2
;trigger2 = animelem = 3
;trigger3 = animelem = 4
;trigger4 = animelem = 5
;trigger5 = animelem = 6
;x = 16

[State 0, VelSet]
type = VelSet
trigger1 = (AnimElemTime (1) >= 0) && (AnimElemTime (6) < 0)
x = 5
y = 0

[State 800, 1]
type = HitDef
triggerall = P2Movetype = H
triggerall = EnemyNear, Stateno != [120,156]
trigger1 = movecontact = 0
attr = S, SA
hitflag = MAFD
getpower = 0
animtype  = Hard
damage    = 0, 0
getpower  = 0
priority  = 4
p1stateno = 9876      ;On success, KFM changes to state 810
pausetime = 6,6
sparkxy = 0,-70
sparkno = -1
hitsound   = 0,0
pausetime = 0,50
guardsound = 6,2
ground.type = high
ground.slidetime = 0
ground.hittime  = 999
air.hittime = 999
ground.velocity = 0,0
guard.velocity = -7
air.velocity = 0,0
airguard.velocity = 0, 0
fall = 0
p2stateno = 1080
forcenofall = 1
snap = 50,0 && !moveguarded

[State 800, 1]
type = HitDef
triggerall = P2Movetype != H
trigger1 = movecontact = 0
attr = S, SA
hitflag = M-
getpower = 0
animtype  = Hard
damage    = 0, 0
getpower  = 0
priority  = 4
p1stateno = 9876      ;On success, KFM changes to state 810
pausetime = 6,6
sparkxy = 0,-70
sparkno = -1
hitsound   = 0,0
pausetime = 0,50
guardsound = 6,2
ground.type = high
ground.slidetime = 0
ground.hittime  = 999
air.hittime = 999
ground.velocity = 0,0
guard.velocity = -7
air.velocity = 0,0
airguard.velocity = 0, 0
fall = 0
p2stateno = 1080
forcenofall = 1
snap = 50,0 && !moveguarded

[State 1020, 6]
type = HitDef
trigger1 = p2statetype = A
trigger1 = time = 0
attr = S, SA
getpower = 0
animtype  = Hard
damage    = 0, 0
getpower  = 0
priority  = 4
guardflag = MA
p1stateno = 9876      
pausetime = 6,6
guard.pausetime = 15,15
sparkxy = 0,-70
sparkno = -1
hitsound   = 0,0
pausetime = 0,50
guardsound = 6,2
ground.type = high
ground.slidetime = 20
ground.hittime  = 99
air.hittime = 99
ground.velocity = 0,0
guard.velocity = -7
air.velocity = 0,0
airguard.velocity = 0, 0
fall = 0
p2stateno = 1080
forcenofall = 1
maxdist = 50,0

[State 1020, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 10233
ctrl = 1
;----------------------------------------------
;EX Rush Land
[Statedef 10233]
type    = S
movetype= I
physics = S
juggle  = 0
velset = 3,0
anim = 1021
ctrl = 0
sprpriority = 2

[State 210, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
;EX Frantic Rush (Hit)
; Description: In this state, KFM throws the opponent by binding him to
;     various offsets based on his current frame of animation. For
;     example, [State 810, Bind 1] binds the opponent to an offset of
;     28 pixels in front of KFM. That puts him around where KFM's hand
;     is at. Is is important to keep the opponent bound using a
;     TargetBind controller at all times, until you let him go. This
;     is especially important if your player has a Clsn2 box that
;     allows him to get hit while throwing someone. Each time a player
;     gets hit, all his bound targets will be set to a fall state. If
;     the opponent is not bound, then he may get stuck in his thrown
;     state when his attacker is knocked out of the throw halfway.
; Notes: There is a TargetLifeAdd controller to decrease the opponent's
;     life, and a TargetState controller to change his state to a
;     falling state when KFM lets go of him.
[Statedef 9876]
type    = S
movetype= A
physics = N
anim = 9876
poweradd = 0
velset = 0,0
juggle = 0
[State 1070, Afterimage]
type = AfterImage
trigger1 = Time = 0
length = 13
PalBright   =  30, 30,  0
PalContrast =  70, 70, 20
PalAdd      = -10,-10,-10
PalMul      = .85,.85,.50
TimeGap  = 1
FrameGap = 2
Trans = Add
time = 2

[State 1070, Afterimage]
type = AfterImageTime
trigger1 = 1
time = 2

[State 1070, Blink Yellow]
type = PalFX
trigger1 = Time = 0
time = 20
add = 32,16,0
sinadd = 64,32,5,3

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 4
trigger2 = animelem = 20
value = 6666,1

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 9
value = 6666,2

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 15
value = 6666,0

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 58
value = 6666,19

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 3
trigger2 = animelem = 8
value = 0,0

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 14
value = 0,1

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 19
trigger2 = animelem = 27
value = 0,2

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 31
trigger2 = animelem = 36
value = 0,1

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 42
trigger2 = animelem = 47
value = 0,0

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 51
value = 0,2

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 57
value = 0,3

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 18
trigger2 = animelem = 19
trigger3 = animelem = 20
x = 6

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 21
x = 3

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 24
trigger2 = animelem = 25
trigger3 = animelem = 26
x = 6


[State 200, 1]
type = HitDef
trigger1 = time = 0
attr = S, SA                     ;Attribute: Standing, Normal Attack
getpower = 0
damage = ceil(ifElse(fvar(11) * 150 < 14, 14, fvar(11) * 150)), 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 18,18                 ;Time attacker pauses, time opponent shakes
sparkno = 3                      ;Spark anim no (Def: set above)
sparkxy = -10, -70               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 3                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 999   
air.hittime = 999          ;Time opponent is in hit state
ground.velocity = -1,22             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1, 22           ;X-velocity at which opponent is pushed,
fall.yvelocity = -14
;Y-velocity at which opponent is pushed
air.hittime = 30 
fall = 1 
envshake.time = 18
envshake.freq = 70
envshake.ampl = 3
p2stateno = 43211

[State 200, 2]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 400, 3]
type = CtrlSet
trigger1 = Time = 120
value = 1

[State 200, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------
;throw invincibility (bounce) 
[statedef 1031]
type = L
movetype = H
physics = N

[State 1031, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 1

[State 5101, 1] ;Coming hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim != [5101,5109]
trigger2 = !SelfAnimExist(5160 + (anim % 10))
value = 5160

[State 5101, 2] ;Coming hit ground anim (for hit up)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim = [5101,5109]
trigger1 = SelfAnimExist(5160 + (anim % 10))
value = 5160 + (anim % 10)

[State 5101, 3]
type = HitFallVel
trigger1 = Time = 0

[State 5101, 4]
type = PosSet
trigger1 = Time = 0
y = Const(movement.down.bounce.offset.y)

[State 5101, 5]
type = PosAdd
trigger1 = Time = 0
x = Const(movement.down.bounce.offset.x)

[State 5101, 6] ;Acceleration
type = VelAdd
trigger1 = 1
y = Const(movement.down.bounce.yaccel)

[State 1042, 7] ;Hit ground
trigger1 = Vel Y > 0
trigger1 = Pos Y >= Const(movement.down.bounce.groundlevel)
type = changestate
value = 1032

;--------------------------------------------------------------------------
;throw invincibility (lie down)
[statedef 1032]
type = L
movetype = H
physics = N

[State 5110, EnvShake]
type = FallEnvShake
trigger1 = Time = 0

[State 1000, 0]
type = NotHitBy
trigger1 = 1
value = SCA, NP, SP
time = 10

[State 5110, 1] ;For hit up/up-diag type (from state 5081)
type = ChangeAnim
persistent = 0
trigger1 = SelfAnimExist(5110 + (anim % 10))
trigger1 = anim = [5081,5089]
value = 5110 + (anim % 10)

[State 5110, 2] ;Hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
triggerall = anim != [5110,5119] ;Not already changed anim
trigger1 = anim != [5161,5169]
trigger2 = !SelfAnimExist(5170 + (anim % 10))
value = 5170

[State 5110, 3] ;Hit ground anim (for hit up)
type = ChangeAnim
triggerall = time = 0
triggerall = anim != [5110,5119] ;Not already changed anim
trigger1 = anim = [5161,5169]
trigger1 = SelfAnimExist(5170 + (anim % 10))
value = 5170 + (anim % 10)

[State 5110, 4]
type = HitFallDamage
trigger1 = Time = 0

[State 5110, 5]
type = PosSet
trigger1 = Time = 0
y = 0

[State 5110, Var] ;Get fall velocity
type = VarSet
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) != 0
sysvar(1) = floor(vel y)

[State 5110, 6]
type = PlaySnd
trigger1 = Time = 0
trigger1 = !SysVar(0)
value = F7, (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56))

[State 5110, 7]
type = Explod
trigger1 = Time = 0
trigger1 = !SysVar(0)
anim = F(60 + (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56)))
pos = 0, 0
sprpriority = ifelse (sysvar(1) <= Const720p(56), -10, 10)

[State 5110, 8]
type = VelSet
trigger1 = Time = 0
y = 0

[State 5110, 9] ;For hit up type
type = ChangeAnim
persistent = 0
triggerall = anim = [5171,5179]
triggerall = SelfAnimExist(5110 + (anim % 10))
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground anim
value = 5110 + (anim % 10)

[State 5110, 10] ;For normal
type = ChangeAnim
persistent = 0
triggerall = Anim != [5111,5119]
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground frame
value = 5110

[State 5110, 11] ;If just died
type = ChangeState
triggerall = !alive
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground frame
trigger3 = Anim = [5110,5119]
value = 5150

[State 5110, 12]
type = VarSet
trigger1 = SysVar(0)
trigger1 = Time = 0
sysvar(0) = 0

[State 5110, 13] ;Friction
type = VelMul
trigger1 = 1
x = 0.85

[State 5110, 14] ;Friction
type = VelSet
trigger1 = abs(Vel x) < Const(movement.down.friction.threshold)
persistent = 0
x = 0

[State 5110, 15]
type = ForceFeedback
trigger1 = alive
trigger1 = Time = 0
time = 8
ampl = 240
waveform = sine

[State 5110, 16]
type = ForceFeedback
trigger1 = !alive
trigger1 = Time = 0
ampl = 200, 7, -.467
time = 30
waveform = sine

[State 1032, SelfState]
type = SelfState
trigger1 = time = 60
value = 5120


;--------------------------------------------
;hit by ex rush (pause)
[statedef 1080]
type    = S
movetype= H
physics = N
velset = 0,0

[State 0, PosSet]
type = PosSet
trigger1 = time = 0
y = enemy ,pos y >=0


[State 5000, 1] ;Anim for HIT_LIGHT to HIT_HARD
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) != [3,5]
value = ifelse((GetHitVar(groundtype) = 1),5000,5010) + GetHitVar(animtype)

[State 5000, 2] ;Anim for HIT_BACK
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) = [3,5]
value = 5030

[State 5000, 3] ;Anim for HIT_UP/HIT_DIAGUP (only if it exists)
type = ChangeAnim
trigger1 = Time = 0
trigger1 = (GetHitVar(animtype) = [4,5]) && (SelfAnimExist(5047 + GetHitVar(animtype)))
value = 5047 + GetHitVar(animtype) ;5051 - 4 + type

[State 5000, 4] ;Freeze anim
type = ChangeAnim
trigger1 = Time > 0
value = anim

[State 5000, 5] ;State type gets set to aerial if getting hit up
type = StateTypeSet
trigger1 = Time = 0
trigger1 = GetHitVar(yvel) != 0 || GetHitVar(fall)
trigger2 = Pos Y != 0
statetype = a

[State 5000, FFB Light]
type = ForceFeedback
trigger1 = anim = 5000
trigger2 = anim = 5010
persistent = 0
time = 6
waveform = square

[State 5000, FFB Medium]
type = ForceFeedback
trigger1 = anim = 5001
trigger2 = anim = 5011
persistent = 0
time = 8
waveform = sinesquare
ampl = 110,-1,-.3

[State 5000, FFB Hard]
type = ForceFeedback
trigger1 = anim = 5012
trigger2 = anim = 5002
trigger3 = anim = 5030
persistent = 0
time = 15
waveform = sinesquare
ampl = 140

[State 5000, 6]
type = ChangeState
trigger1 = HitShakeOver
trigger1 = GetHitVar(yvel) = 0 && !GetHitVar(fall)
value = 1081 ;Stand get-hit (knocked back)

[State 5000, 7]
type = ChangeState
trigger1 = HitShakeOver
value = 5030
;--------------------------------------
;hit by ex rush 
[statedef 1081]
type    = S
movetype= H
physics = S

[State 5001, 1]
type = HitVelSet
trigger1 = Time = 0
x = 1

[State 5001, 2]
type = ChangeAnim
trigger1 = AnimTime = 0
value = 5005 + GetHitVar(animtype) + (GetHitVar(groundtype)=2)*10

[State 5001, 3] ;Stop sliding back
type = VelMul
trigger1 = Time >= GetHitVar(slidetime)
x = .6

[State 5001, 4]
type = VelSet
trigger1 = HitOver
x = 0

[State 5001, 5]
type = DefenceMulSet
trigger1 = HitOver
value = 1

[State 5001, 6]
type = ChangeState
trigger1 = HitOver
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;Thrown by Kung Fu Throw
; (a custom gethit state)
; Description: This is the state that the opponent changes to after being
;     hit by KFM's throw HitDef. The important thing here is to use a
;     ChangeAnim2 controller. The difference between ChangeAnim2 and
;     ChangeAnim is that ChangeAnim2 changes the player's animation to
;     an action in the AIR file of the attacker (in this case, kfm.air),
;     whereas ChangeAnim always changes the player to an action in his
;     own AIR file. Look at Action 820 in kfm.air for some extra
;     comments.
[Statedef 820]
type    = A
movetype= H
physics = N
velset = 0,0

[State 20, 1]
type = ChangeAnim2
trigger1 = Time = 0
value = 1005

;In case attacker loses binding on player for any reason, this controller
;guarantees that the player will never get stuck in this thrown state.
[State 820, 2]
type = SelfState
trigger1 = !gethitvar(isbound)
value = 5050

;---------------------------------------------------------------------------
;Thrown by Kung Fu Throw - thrown into the air
; (a custom gethit state)
; Description: This state has the opponent flying through the air and
;     falling down onto the ground. The SelfState controller sets the
;     opponent back using to his own state file when he his the ground.
;     Controllers 821,2 and 821,3 allow the opponent to recover by
;     hitting his recovery command when he is falling.
[Statedef 821]
type    = A
movetype= H
physics = N
velset = 0,0
poweradd = 40

[State 21, 1] ;Gravity
type = VelAdd
trigger1 = 1
y = 50

[State 21, 2] ; Recover near ground (use ChangeState)
type = ChangeState
triggerall = Vel Y > 0
triggerall = Pos Y >= -20
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5200 ;HITFALL_RECOVER

[State 21, 3] ; Recover in mid air (use SelfState)
type = SelfState
triggerall = Vel Y > 0
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5210 ;HITFALL_AIRRECOVER

[State 21, 4] ;Hit ground
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5100 ;Hit ground

[State 1020, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;------------------
; Hit by Fast Kung Fu Palm - shaking from the hit
; (a custom gethit state)
; See State 1020 for details
[Statedef 1025]
type    = A
movetype= H
physics = N
velset = 0,0

[State 1025, Anim] 
type = ChangeAnim
trigger1 = 1
value = 1025

[State 1025, State]
type = ChangeState
trigger1 = HitShakeOver = 1
value = 1026
;---------------------------------------------------------------------------
; Kung Fu Blocking High
; CNS difficulty: medium
; Notes: This move uses a ReversalDef controller to counter attacks. Any
;        attacks not caught by the ReversalDef are handled by the HitOverride.
;        The movetype is Idle because this is not an attack.
[Statedef 1300]
type    = S
movetype= I
physics = S
velset = 0,0
anim = 1300
ctrl = 0
sprpriority = 1

[State 1300, Width]
type = Width
trigger1 = AnimElemTime(3) < 0
value = 15,0

[State 1300, 1]
type = PlaySnd
trigger1 = Time = 0
value = 0, 1


[State 1300, 2]
type = ReversalDef
trigger1 = time > 0
trigger1 = time < 11
reversal.attr = SA, AA
pausetime = 0,0
sparkno = 3
sparkxy = 35,-15
hitsound = 1300,0
p1stateno = 1310
p1sprpriority = 2 ;Set P1's sprite in front of P2's
p2sprpriority = 1




[State 1300, 3] ;Stop ReversalDef
type = ReversalDef
trigger1 = Time = 1
trigger1 = Time = command = "holddown"
trigger2 = Time = 20
reversal.attr =

[State 1300, 4]
type = HitOverride
trigger1 = Time = 1
attr = SA, AP
stateno = 1310
time = 20

[State 1300, 5]
type = HitOverride
trigger1 = Time = 1
trigger1 = Time = command = "holddown"
attr =
time = 20

[State 1300, 6]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Kung Fu Blocking High (blocked)
; Notes: This state uses a Pause controller to freeze the action dramatically.
[Statedef 1310]
type    = S
movetype= I
physics = S
velset = 0,0
anim = 1310
ctrl = 0
sprpriority = 2

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 7000,1
[State 3000, ’´•KŽE‹Z”­“®‚ÌŽžŠÔ’âŽ~]
type = SuperPause
trigger1 = time = 0
anim = -1
poweradd = 250
time = 23
p2defmul = 1.0


[State 0, Explod]
type = Explod
trigger1 = time = 0
anim = 1303
ID = 673
pos = 30,-100
postype = p1  ;p2,front,back,left,right
facing = ifelse(facing=-1, -1, 1)
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 1
scale = 0.3,0.3
sprpriority = 2
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
ignorehitpause = 1
persistent = 0
[State 0, Explod]
type = Explod
trigger1 = time = 0
anim = 1301
ID = 673
pos = 30,-100
postype = p1  ;p2,front,back,left,right
facing = ifelse(facing=-1, -1, 1)
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 1
scale = 0.3,0.3
sprpriority = 2
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
ignorehitpause = 1
persistent = 0
[State 0, Explod]
type = Explod
trigger1 = time = 0
anim = 1302
ID = 673
pos = 30,-100
postype = p1  ;p2,front,back,left,right
facing = ifelse(facing=-1, -1, 1)
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 1
scale = 0.3,0.3
sprpriority = 2
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
ignorehitpause = 1
persistent = 0



[State 1070, Blink Yellow]
type = PalFX
trigger1 = Time = 0
time = 10
add = 100,100,100
mul = 256,256,256
sinadd = -80,-80,-80,900
invertall = 0
color = 0




[State 1310, 2]    ;Go to guarding
type = ChangeState
trigger1 = Time = 1
trigger1 = command = "holdback"
value = 130
ctrl = 1

[State 1310, 3]
type = NotHitBy
trigger1 = Time = 0
value = SCA
time = 1

[State 1310, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Kung Fu Blocking Low
[Statedef 1320]
type    = C
movetype= I
physics = C
velset = 0,0
anim = 1320
ctrl = 0
sprpriority = 1

[State 1320, Width]
type = Width
trigger1 = AnimElemTime(3) < 0
value = 10,0

[State 1320, 1]
type = PlaySnd
trigger1 = Time = 0
value = 0, 1

[State 1320, 2]
type = ReversalDef
trigger1 = time > 0
trigger1 = time < 11
reversal.attr = C,AA
pausetime = 0,0
sparkno = 3
sparkxy = 35,-15
hitsound = 1300,0
p1stateno = 1330
p1sprpriority = 2
p2sprpriority = 1

[State 1340, 3] ;Stop
type = ReversalDef
trigger1 = Time = 20
reversal.attr =

[State 1320, 4]
type = HitOverride
trigger1 = Time < 5
attr = C, AP
stateno = 1330

[State 1320, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Kung Fu Blocking Low (blocked)
[Statedef 1330]
type    = C
movetype= I
physics = C
velset = 0,0
anim = 1330
ctrl = 0
sprpriority = 2


[State 3000, ’´•KŽE‹Z”­“®‚ÌŽžŠÔ’âŽ~]
type = SuperPause
trigger1 = time = 0
anim = -1
poweradd = 250
time = 23
p2defmul = 1.0

[State 0, Explod]
type = Explod
trigger1 = time = 0
anim = 1303
ID = 673
pos = 30,-100
postype = p1  ;p2,front,back,left,right
facing = ifelse(facing=-1, -1, 1)
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 1
scale = 0.3,0.3
sprpriority = 2
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
ignorehitpause = 1
persistent = 0
[State 0, Explod]
type = Explod
trigger1 = time = 0
anim = 1301
ID = 673
pos = 30,-100
postype = p1  ;p2,front,back,left,right
facing = ifelse(facing=-1, -1, 1)
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 1
scale = 0.3,0.3
sprpriority = 2
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
ignorehitpause = 1
persistent = 0
[State 0, Explod]
type = Explod
trigger1 = time = 0
anim = 1302
ID = 673
pos = 30,-100
postype = p1  ;p2,front,back,left,right
facing = ifelse(facing=-1, -1, 1)
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 1
scale = 0.3,0.3
sprpriority = 2
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
ignorehitpause = 1
persistent = 0





[State 1330, 2]
type = ChangeState
trigger1 = Time = 1
trigger1 = command = "holdback"
value = 131
ctrl = 1

[State 1330, 3]
type = NotHitBy
trigger1 = Time = 0
value = SCA
time = 1

[State 1330, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Kung Fu Blocking Air
[Statedef 1340]
type    = A
movetype= I
physics = N
anim = 1340
ctrl = 0
sprpriority = 1

[State 1340, Width]
type = Width
trigger1 = AnimElemTime(3) < 0
value = 10,0

[State 1340, 1]
type = PlaySnd
trigger1 = Time = 0
value = 0, 1

[State 1340, 2]
type = ReversalDef
trigger1 = Time = 2
reversal.attr = SA, AA
pausetime = 0,0
sparkno = 3
sparkxy = 35,-15
hitsound = 1300,0
p1stateno = 1350
p1sprpriority = 2
p2sprpriority = 1

[State 1340, 3] ;Stop
type = ReversalDef
trigger1 = Time = 20
reversal.attr =

[State 1340, 4]
type = HitOverride
trigger1 = Time < 5
attr = SA, AP
stateno = 1350

[State 1340, 5]
type = CtrlSet
trigger1 = AnimElem = 4
value = 1

[State 1340, 6] ;Gravity
type = VelAdd
trigger1 = 1
y = Const(movement.yaccel)

[State 1340, 6] ;Land from jump
type = ChangeState
trigger1 = (Pos Y >= 0) && (Vel Y > 0)
value = 1351

;---------------------------------------------------------------------------
; Kung Fu Blocking Air (blocked)
[Statedef 1350]
type    = A
movetype= I
physics = N
anim = 1350
ctrl = 0
sprpriority = 2

[State 3000, ’´•KŽE‹Z”­“®‚ÌŽžŠÔ’âŽ~]
type = SuperPause
trigger1 = time = 0
anim = -1
poweradd = 250
time = 23
p2defmul = 1.0

[State 0, Explod]
type = Explod
trigger1 = time = 0
anim = 1303
ID = 673
pos = 30,-100
postype = p1  ;p2,front,back,left,right
facing = ifelse(facing=-1, -1, 1)
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 1
scale = 0.3,0.3
sprpriority = 2
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
ignorehitpause = 1
persistent = 0
[State 0, Explod]
type = Explod
trigger1 = time = 0
anim = 1301
ID = 673
pos = 30,-100
postype = p1  ;p2,front,back,left,right
facing = ifelse(facing=-1, -1, 1)
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 1
scale = 0.3,0.3
sprpriority = 2
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
ignorehitpause = 1
persistent = 0
[State 0, Explod]
type = Explod
trigger1 = time = 0
anim = 1302
ID = 673
pos = 30,-100
postype = p1  ;p2,front,back,left,right
facing = ifelse(facing=-1, -1, 1)
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 1
scale = 0.3,0.3
sprpriority = 2
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
ignorehitpause = 1
persistent = 0




[State 1350, 2]
type = ChangeState
trigger1 = Time = 1
trigger1 = command = "holdback"
value = 132
ctrl = 1

[State 1350, 3]
type = NotHitBy
trigger1 = Time = 0
value = SCA
time = 1

[State 1350, 4] ;Stop KFM in the air
type = PosFreeze
trigger1 = AnimElemTime(3) < 0

[State 1350, 5]
type = CtrlSet
trigger1 = AnimElem = 3
value = 1

[State 1350, 6] ;Gravity
type = VelAdd
trigger1 = AnimElemTime(3) > 0
y = Const(movement.yaccel)

[State 1350, 7] ;Land from jump
type = ChangeState
trigger1 = (Pos Y >= 0) && (Vel Y > 0)
value = 1351

;---------------------------------------------------------------------------
; Kung Fu Blocking Air (land)
[Statedef 1351]
type    = S
physics = S
ctrl = 0
anim = 47

[State 1351, 1]
type = VelSet
trigger1 = Time = 0
y = 0

[State 1351, 2]
type = PosSet
trigger1 = Time = 0
y = 0

[State 1351, 3]
type = CtrlSet
trigger1 = Time = 3
value = 1

[State 1351, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[State 1351, 5] ;Go to high block
type = ChangeState
trigger1 = command = "blocking"
trigger1 = command != "holddown"
value = 1300

[State 1351, 6] ;Go to low block
type = ChangeState
trigger1 = command = "blocking"
value = 1320

;---------------------------------------------------------------------------
; Light Kung Fu Zankou
; CNS difficulty: easy
[Statedef 1400]
type    = S
movetype= A
physics = N
juggle  = 4
poweradd= 50
velset = 0,0
anim = 1400
ctrl = 0
sprpriority = 2

[State 1400, 1]
type = PlaySnd
trigger1 = AnimElem = 3
value = 0, 3

[State 1400, Friction]
type = VelMul
trigger1 = 1
x = 0.5

[State 1400, 2]
type = HitDef
trigger1 = Time = 0
attr = S, SA
animtype  = Hard
damage    = 100, 6
priority  = 4
guardflag = MA
pausetime = 12,12
sparkxy = 0,-65
hitsound   = 5,3
guardsound = 6,0
ground.type = Low
ground.slidetime = 12
ground.hittime  = 17
ground.velocity = -9
ground.cornerpush.veloff = -15 ;To push far away when p2 is in corner
guard.velocity = -9
air.velocity = -2,-5
airguard.velocity = -3.5,-4.5
air.fall = 1

[State 1400, 3]
type = PosAdd
trigger1 = AnimElem = 2
trigger2 = AnimElem = 3
trigger3 = AnimElem = 4
x = 10

[State 1400, 4]
type = VelSet
trigger1 = AnimElem = 4
x = 2

[State 1400, 5]
type = PosAdd
trigger1 = AnimElem = 8
x = 10

[State 1400, 6]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Strong Kung Fu Zankou
; CNS difficulty: easy
[Statedef 1410]
type    = S
movetype= A
physics = N
juggle  = 4
poweradd= 50
velset = 0,0
anim = 1410
ctrl = 0
sprpriority = 2

[State 1410, 1]
type = PlaySnd
trigger1 = AnimElem = 3
value = 0, 3

[State 1410, Friction]
type = VelMul
trigger1 = 1
x = 0.65

[State 1410, 2]
type = HitDef
trigger1 = Time = 0
attr = S, SA
animtype  = Hard
damage    = 100, 6
priority  = 4
guardflag = MA
pausetime = 12,12
sparkxy = 0,-65
hitsound   = 5,3
guardsound = 6,0
ground.type = Low
ground.slidetime = 12
ground.hittime  = 17
ground.velocity = -9
ground.cornerpush.veloff = -15 ;To push far away when p2 is in corner
guard.velocity = -9
air.velocity = -2,-5
airguard.velocity = -3.5,-4.5
air.fall = 1

[State 1410, 3]
type = PosAdd
trigger1 = AnimElem = 2
trigger2 = AnimElem = 3
trigger3 = AnimElem = 4
x = 10

[State 1410, 4]
type = VelSet
trigger1 = AnimElem = 3
x = 8

[State 1410, 5]
type = PosAdd
trigger1 = AnimElem = 9
x = 10

[State 1410, 6]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Far Kung Fu Zankou
; CNS difficulty: easy
[Statedef 1420]
type    = S
movetype= A
physics = N
juggle  = 6
poweradd= -330
velset = 0,0
anim = 1420
ctrl = 0
sprpriority = 2
[State 220, Sound]
type = PlaySnd
trigger1 = animelem = 1
value = 896,0
[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 6920
ID = 673
pos = -3,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 4
anim = 2663
ID = 673
pos = 50,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.5,0.5
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 2662
ID = 673
pos = 50,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.5,0.5
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 1420, Afterimage]
type = AfterImage
trigger1 = Time = 0
length = 13
PalBright   =  30, 30,  0
PalContrast =  70, 70, 20
PalAdd      = -10,-10,-10
PalMul      = .85,.85,.50
TimeGap  = 1
FrameGap = 2
Trans = Add
time = 2

[State 1420, Afterimage]
type = AfterImageTime
trigger1 = AnimElemTime(8) < 0
time = 2

[State 1420, Blink Yellow]
type = PalFX
trigger1 = Time = 0
time = 20
add = 32,16,0
sinadd = 64,32,5,3

[State 1420, 1]
type = PlaySnd
trigger1 = AnimElem = 3
value = 0, 3

[State 1420, Friction]
type = VelMul
trigger1 = 1
x = 0.7

[State 1420, 2]
type = HitDef
trigger1 = AnimElemTime(4) = -2
attr = S, SA
animtype  = Hard
damage    = 25, 2
getpower  = 0
priority  = 4
guardflag = MA
pausetime = 9,9
sparkxy = -15,-45
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 22
ground.hittime  = 24
ground.velocity = -7
ground.cornerpush.veloff = -8 ;To push far away when p2 is in corner
guard.velocity = -9
air.velocity = -5,-4
airguard.velocity = -3.5,-4.5

[State 1420, 2]
type = HitDef
trigger1 = AnimElem = 4
attr = S, SA
animtype  = Hard
damage    = 100, 8
getpower  = 0
priority  = 5
guardflag = MA
pausetime = 12,12
sparkxy = 0,-65
hitsound   = 5,3
guardsound = 6,0
ground.type = Low
ground.slidetime = 22
ground.hittime  = 24
ground.velocity = -5,-4
ground.cornerpush.veloff = -15 ;To push far away when p2 is in corner
guard.velocity = -9
air.velocity = -5,-4
airguard.velocity = -3.5,-4.5
fall = 1

[State 1420, 3]
type = PosAdd
trigger1 = AnimElem = 2
trigger2 = AnimElem = 3
trigger3 = AnimElem = 4
x = 10

[State 1420, 4]
type = VelSet
trigger1 = AnimElemTime(3) = [1,2]
x = 20

[State 1420, 5]
type = PosAdd
trigger1 = AnimElem = 10
x = 10

[State 1420, 6]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Triple Kung Fu Palm (hyper)
; CNS difficulty: medium
; Notes: Notice that the HitDefs in supers have "getpower = 0". This makes
;        sure KFM doesn't recharge his super guage as he hits.
;        Also, the attributes for the HitDefs is "HA" for "hyper attack",
;        ie. "attr = S, HA".
;        Notice how the first HitDef is reused twice by allowing it to
;        trigger on two animation elements.
[Statedef 3000]
type    = S
movetype= A
physics = S
juggle  = 4
velset = 0,0
anim = 3000
ctrl = 0
sprpriority = 2

[State 3000, Width]
type = Width
trigger1 = AnimElem = 2, >= 0
value = 15,0

[State 3000, Super A]
type = SuperPause
trigger1 = AnimElem = 2, 1
pos = 25, -57
anim = 100
sound = 20, 0
poweradd = -1000

[State 3000, Super B]
type = AfterImage
trigger1 = AnimElem = 2, 1
time = 2

[State 3000, Super C]
type = AfterImageTime
trigger1 = AnimElemTime(2) >= 1 && Time < 60
time = 2

[State 3000, Super D]
type = NotHitBy
trigger1 = AnimElem = 2
value = , NA, SA, AT
time = 11

[State 3000, Super E]
type = NotHitBy
trigger1 = AnimElemTime(2) >= 0 && AnimElemTime(14) < 0
value2 = C, NA
time = 1

[State 3000, 1]
type = PlaySnd
trigger1 = AnimElem = 4
trigger2 = AnimElem = 12
trigger3 = AnimElem = 20
value = 0, 3

[State 3000, 2]
type = PosAdd
trigger1 = AnimElem = 2
x = 20

[State 3000, 3]
type = PosAdd
trigger1 = AnimElem = 3
trigger2 = AnimElem = 11
trigger3 = AnimElem = 13
trigger4 = AnimElem = 19
trigger5 = AnimElem = 21
trigger4 = AnimElem = 31
x = 10

[State 3000, 4]
type = VelSet
trigger1 = AnimElem = 5
trigger2 = AnimElem = 13
trigger3 = AnimElem = 21
x = 6

[State 3000, 4]
type = PosAdd
trigger1 = AnimElem = 5
x = 5

[State 3000, 5]
type = HitDef
trigger1 = AnimElem = 5
trigger2 = AnimElem = 13
attr = S, HA
animtype  = Hard
damage    = 72,4
getpower  = 0
priority  = 6
guardflag = MA
pausetime = 15,15
sparkxy = -10,-60
hitsound   = 5,4
guardsound = 6,0
ground.type = Low
ground.slidetime = 30
ground.hittime  = 32
ground.velocity = -6
air.velocity = -3,-2.8
air.fall = 1
fall.animtype = Hard
fall.recover = 0

[State 3000, 6]
type = HitDef
trigger1 = AnimElem = 21
attr = S, HA
animtype  = Hard
damage    = 75,4
getpower  = 0
priority  = 5
guardflag = MA
pausetime = 15,15
sparkxy = -10,-60
hitsound   = 5,4
guardsound = 6,0
ground.type = Low
ground.slidetime = 30
ground.hittime  = 32
ground.velocity = -5, -4
guard.velocity = -12
air.velocity = -5,-4
airguard.velocity = -3,-3
fall.animtype = Hard
fall = 1
fall.recover = 0

[State 3000, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Smash Kung Fu Upper (hyper)
; CNS difficulty: medium
; Description: This is very similar to KFM's Strong and Light Kung Fu Uppers.
;     There is just one HitDef, for a screen-shaking hit. The envshake
;     parameters are used to make this effect. You can find out more about
;     each parameter in the CNS documentation.
;     The fall.recover parameter is set at 0, meaning that p2 cannot recover
;     from the fall by entering his recovery command (for KFM, that is x+y).
;     This gives the attacking KFM a chance to follow up with another attack,
;     such as the Fast Kung Fu Palm.
;     Note that there is a ChangeState controller used to make KFM change to
;     a success state if he hits. The success state has KFM hold his arm
;     up longer for a dramatic effect.
[Statedef 3050]
type    = S
movetype= A
physics = S
juggle  = 4
velset = 0,0
anim = 3050
ctrl = 0
sprpriority = 2

[State 3050, Width]
type = Width
trigger1 = AnimElemTime(4) >= 0 && AnimElemTime(16) < 0
value = 5,0

[State 3050, Super A]
type = SuperPause
trigger1 = AnimElem = 2
pos = -5, -55
anim = 100
sound = 20, 0
poweradd = -3000

[State 3050, Super B]
type = AfterImage
trigger1 = AnimElem = 2
time = 2

[State 3050, Super C]
type = AfterImageTime
trigger1 = AnimElemTime(2) >= 0
time = 2

[State 3050, Super D]
type = NotHitBy
trigger1 = AnimElem = 2
value = , NA, SA, AT
time = 6

[State 3050, 1]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0, 2


[State 0, Helper]
type = Helper
trigger1 = animelem = 5
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = 200,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 6
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = 170,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 7
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = 150,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 8
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = 130,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 9
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = 100,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 10
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = 70,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 11
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = 50,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 12
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = 30,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 13
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = 0,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 14
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = -30,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 15
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = -50,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 16
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = -70,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 17
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = -100,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 18
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = -130,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 19
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = -150,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 20
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = -180,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 0, Helper]
type = Helper
trigger1 = animelem = 21
name = "EX BLOOD BUG1"
ID = 1006
stateno = 1006
pos = -200,0
scale = 0.5,0.5
postype = p1    ;p2,front,back,left,right
ownpal = 0
[State 3050, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;------------------
; Smash Kung Fu Upper (success)
; Description: This is the state that KFM changes to if he successfully hits
;     with Smash Kung Fu Upper. KFM holds his arm high for a short while
;     longer, then changes back to his idle stand state.
[Statedef 3051]
type    = S
movetype= A
physics = S
anim = 3051

[State 3051, 1]
type = AfterImageTime
trigger1 = AnimTime < -2
time = 2

[State 3051, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;H Teleport
[Statedef 666]
type = S
movetype = I
physics = N
anim = 1017
velset = 0,0
ctrl = 0

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 9
value = 777, (0+(Random%5))
[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 13 
value = 999,0
[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 11
value = 888, (0+(Random%5))


[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 10
x = 200

[State 0, Explod]
type = Explod
trigger1 = animelem = 9
anim = 1016
ID = 673
pos = 160,03
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.30,0.30
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, VarAdd]
type = VarAdd
trigger1 = time = 1
v = 30     
value = var(30)+2

[State 0, CtrlSet]
type = CtrlSet
trigger1 = animelem = 17
value = 1
;ignorehitpause = 
;persistent = 

[State 100, changestate]
type = changestate
trigger1 = animtime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------
;L Teleport
[Statedef 668]
type = S
movetype = I
physics = N
anim = 1010
velset = 0,0
ctrl = 0
[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 9
value = 777, (0+(Random%5))
[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 13 
value = 999,0
[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 11
value = 888, (0+(Random%5))

[State 0, Explod]
type = Explod
trigger1 = animelem = 17
anim = 1018
ID = 673
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.30,0.30
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 9
anim = 1016
ID = 673
pos = 0,03
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.30,0.30
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0


[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 10
x = -200

[State 0, CtrlSet]
type = CtrlSet
trigger1 = animelem = 17
value = 1
;ignorehitpause = 
;persistent = 
[State 100, changestate]
type = changestate
trigger1 = animtime = 0
value = 0
ctrl = 1
;------------------------------------------------------------------
;Allahu Akbar
[Statedef 669]
type = S
movetype = A
physics = S
anim = 1029
poweradd = -1000
velset = 0,0
ctrl = 0
juggle = 0

[State 0, LifeAdd]
type = LifeAdd
trigger1 = time = 1
value = -50
kill = 1

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 1
value = 7000,1

[State 200, 1]
type = HitDef
trigger1 = animelem = 3
attr = CS, SA                     ;Attribute: Standing, Normal Attack
getpower = 0
damage = ceil(ifElse(fvar(11) * 130 < 80, 80, fvar(11) * 130)), 30                 ;Damage that move inflicts, guard damage
animtype = hard                ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 20,20                 ;Time attacker pauses, time opponent shakes
guard.pausetime = 25,25
sparkno = 3                    ;Spark anim no (Def: set above)
sparkxy = -30, -50            ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = -1                  ;Sound to play on hit
guardsound = 6, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 10             ;Time that the opponent slides back
guard.slidetime = 45
ground.hittime  = 25             ;Time opponent is in hit state
ground.velocity = -15,-5.5           ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -15,-5.5        ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 15                 ;Time before opponent regains control in air
fall = 1
envshake.time = 16
envshake.freq = 110
envshake.ampl = 4
p2facing =1
palfx.add = -0,-200,-0
;palfx.mul = 120,20,124
palfx.sinadd = 40,80,40,10
palfx.color = 0
palfx.invertall = 1
palfx.time = 72
p2stateno = 1025


[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 1002
ID = 673
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.6,0.6
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 6920
ID = 673
pos = -3,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.7,0.7
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 900,10

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 900,11

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 900,12

[State 1200, Shake Screen]
type = EnvShake
trigger1 = time = 1
time = 14     ;Time to shake screen
ampl = 8     ;Amount to shake
freq = 190   ;A frequency of 180 shakes the screen rapidly

[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 1028
ID = 673
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 666, Turn]
type = Turn
trigger1 = time = 99

[State 666, PosAdd]
type = PosSet
triggerall = facing = 1
trigger1 = time = 98
x = enemy,pos x + enemy, const(size.ground.back) + 50

[State 666, PosAdd]
type = PosSet
triggerall = facing = -1
trigger1 = time = 98
x = enemy,pos x - enemy, const(size.ground.back) - 50

[State 100, changestate]
type = changestate
trigger1 = animtime = 0
value = 0
ctrl = 1
;------------------------------------------------------------------
;Allahu Akbar HA
[Statedef 670]
type = S
movetype = A
physics = S
anim = 1029
poweradd = -1000
velset = 0,0
ctrl = 0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 1
value = 7000,1

[State 200, 1]
type = HitDef
trigger1 = animelem = 3
attr = S, NA                     ;Attribute: Standing, Normal Attack
getpower = 0
damage = 140,35                 ;Damage that move inflicts, guard damage
animtype = hard                ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 20,20                 ;Time attacker pauses, time opponent shakes
guard.pausetime = 25,25
sparkno = -1                    ;Spark anim no (Def: set above)
sparkxy = -50, -80            ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = -1                  ;Sound to play on hit
guardsound = 6, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 10             ;Time that the opponent slides back
guard.slidetime = 45
ground.hittime  = 25             ;Time opponent is in hit state
ground.velocity = -10,-11.6           ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -10,-9        ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 15                 ;Time before opponent regains control in air
fall = 1
envshake.time = 16
envshake.freq = 110
envshake.ampl = 4
p2stateno = 2025
palfx.add = -0,-200,-0
;palfx.mul = 120,20,124
palfx.sinadd = 40,80,40,10
palfx.color = 0
palfx.invertall = 1
palfx.time = 72

[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 1002
ID = 673
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.6,0.6
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 6920
ID = 673
pos = -3,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.7,0.7
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 900,10

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 900,11

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 900,12

[State 1200, Shake Screen]
type = EnvShake
trigger1 = time = 1
time = 14     ;Time to shake screen
ampl = 8     ;Amount to shake
freq = 190   ;A frequency of 180 shakes the screen rapidly

[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 1028
ID = 673
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 666, Turn]
type = Turn
trigger1 = time = 99

[State 666, PosAdd]
type = PosSet
triggerall = facing = 1
trigger1 = time = 98
x = enemy,pos x + enemy, const(size.ground.back) + 50

[State 666, PosAdd]
type = PosSet
triggerall = facing = -1
trigger1 = time = 98
x = enemy,pos x - enemy, const(size.ground.back) - 50

[State 100, changestate]
type = changestate
trigger1 = animtime = 0
value = 0
ctrl = 1
;======================================
;------------------------------------------------------------------
[Statedef 6690]
type    = A
movetype= A
physics = A
anim = 1029
poweradd = -1000
velset = 0,0
ctrl = 0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 7000,1

[State 200, 1]
type = HitDef
trigger1 = time = 0
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 30, 0                   ;Damage that move inflicts, guard damage
animtype = hard                ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0,0                 ;Time attacker pauses, time opponent shakes
sparkno = -1                    ;Spark anim no (Def: set above)
sparkxy = -50, -80            ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = -1                  ;Sound to play on hit
guardsound = 6, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 11             ;Time opponent is in hit state
ground.velocity = -4,0            ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -4,-4       ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 15                 ;Time before opponent regains control in air
fall = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 1002
ID = 673
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.6,0.6
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 6920
ID = 673
pos = -3,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.7,0.7
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 900,10

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 900,11

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 900,12

[State 1200, Shake Screen]
type = EnvShake
trigger1 = time = 1
time = 14     ;Time to shake screen
ampl = 8     ;Amount to shake
freq = 190   ;A frequency of 180 shakes the screen rapidly

[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 1028
ID = 673
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 666, Turn]
type = Turn
trigger1 = time = 99

[State 666, PosAdd]
type = PosSet
triggerall = facing = 1
trigger1 = time = 98
x = enemy,pos x + enemy, const(size.ground.back) + 50

[State 666, PosAdd]
type = PosSet
triggerall = facing = -1
trigger1 = time = 98
x = enemy,pos x - enemy, const(size.ground.back) - 50

[State 100, changestate]
type = changestate
trigger1 = animtime = 0
value = 0
ctrl = 1

;-----------------------------------------------------------------------------
;HYPER ART
[Statedef 4000]
type    = S
movetype= A
physics = N
juggle  = 0
velset = 0,0
poweradd = -2000
anim = 100
ctrl = 0

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = time = 1
value = 6666, (11+(Random%15))
[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 6720
ID = 673
pos = 160,120
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 0
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 1,1
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 1
value = 7000,0
[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = 6920
ID = 673
pos = -3,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.3,0.3
sprpriority = 0
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 4000, Super A]
type = SuperPause
trigger1 = Time = 1
pos = 10, -80
time = 30
anim = 102
sound = 20, 0
poweradd = -1000


[State 4000, Super B]
type = AfterImage
trigger1 = Time = 0
time = 2

[State 4000, Super C]
type = AfterImageTime
trigger1 = 1
time = 2

[State 4000, 1]
type = PosAdd
trigger1 = AnimElem = 2
x = 15

[State 4000, 2]
type = VelSet
trigger1 = AnimElem = 2
x = 10


[State 4000, 3]
type = VelAdd
trigger1 = AnimElem = 2, > 0


[State 4000, 4]
type = HitDef
trigger1 = AnimElem = 1
attr = S, HA
damage = 0, 30
animtype = Light
guardflag = MA
priority = 3, Hit
pausetime = 5, 5
guard.pausetime = 19,19
sparkno = -1
sparkxy = -10, -60
hitsound = S1,1
guardsound = S6,0
ground.type = High
ground.slidetime = 5
ground.hittime  = 99
ground.velocity = 0,-5
air.type = High
air.velocity = 0,-5
air.hittime = 99
forcenofall = 1
air.fall = 0
numhits = 0
kill = 0
p2stateno = 3061
p2facing =1

[State 0]
type = TargetBind
trigger1 = movehit
time = 5
pos = 20,-35

[State 0, PosSet]
type = PosSet
trigger1 = movehit
x = 0
y = 0

[State 4000, 4]
type = ChangeAnim
trigger1 = MoveHit
value = 4002

[State 4000, 5]
type = ChangeState
trigger1 = MoveHit
value = 4001

[State 4000, 5]
type = ChangeState
triggerall = Time >= 20
trigger1 = Vel Y >= 0
trigger1 = Pos Y >= 0
value = 9002

;---------------------------------------------------------------------------
;HYPER ART CONFIRM
[Statedef 4001]
type    = S
movetype= A
physics = N
juggle  = 0
velset = 0,0
ctrl = 0

[State 0, EnvColor]
type = EnvColor
trigger1 = time = 3 
value = 75,50,60
time = 4
under = 1
;ignorehitpause = 
;persistent = 

[State 0, EnvColor]
type = EnvColor
trigger1 = time = 7 
value = 65,45,55
time = 4
under = 1
;ignorehitpause = 
;persistent = 


[State 0, EnvColor]
type = EnvColor
trigger1 = time = 11
value = 55,35,45
time = 4
under = 1
;ignorehitpause = 
;persistent = 

[State 0, EnvColor]
type = EnvColor
trigger1 = time = 15
value = 30,10,10
time = 136
under = 1
;ignorehitpause = 
;persistent = 

[State 4000, 4]
type = HitDef
trigger1 = AnimElem = 7
attr = S, HA
damage = 75
animtype = up
guardflag = MA
priority = 3, Hit
pausetime = 5,15
getpower = 0
guard.pausetime = 19,19
sparkno = -1
sparkxy = -10, -60
hitsound = 5, 3
ground.type = High
ground.slidetime = 5
ground.hittime  = 99
ground.velocity = -3,-5
air.type = High
air.velocity = -3,-5
air.hittime = 99
fall = 1
air.fall = 1
kill = 0

[State 4000, 4]
type = HitDef
trigger1 = AnimElem = 36
attr = S, HA
damage = 125
animtype = Light
guardflag = MA
priority = 3, Hit
getpower = 0
pausetime = 5, 5
guard.pausetime = 19,19
sparkno = -1
sparkxy = -10, -60
hitsound = 5, 3
ground.type = High
ground.slidetime = 5
ground.hittime  = 99
ground.velocity = -10,1
air.type = High
air.velocity = -10,1
air.hittime = 99
fall = 1
air.fall = 1
kill = 1

[State 0, Helper]
type = Helper
trigger1 = time = 35
name = "BLUD1"
ID = 4003
stateno = 4003
pos = -100,0
scale = 4,4
postype = p2
ownpal = 0

[State 0, Helper]
type = Helper
trigger1 = time = 55
name = "BLUD1"
ID = 4003
stateno = 4003
pos = -100,0
scale = 4,4
postype = p2
ownpal = 0

[State 0, Helper]
type = Helper
trigger1 = time = 75
name = "BLUD1"
ID = 4003
stateno = 4003
pos = -100,0
scale = 4,4
postype = p2
ownpal = 0

[State 0, Helper]
type = Helper
trigger1 = time = 95
name = "BLUD1"
ID = 4003
stateno = 4003
pos = -100,0
scale = 4,4
postype = p2
ownpal = 0

[State 0, Helper]
type = Helper
trigger1 = time = 70
name = "BLUD3"
ID = 4005
stateno = 4005
pos = -30,-40
scale = 4,4
postype = p2
ownpal = 0

[State 0]
type = ChangeState
trigger1 = animtime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------
;BLUD1
[Statedef 4003]
type    = S
movetype= A
physics = S
poweradd= 0
velset = 0,0
anim = 4003
ctrl = 0
sprpriority = 2

[State 1200, Shake Screen]
type = EnvShake
trigger1 = animelem = 4
time = 5     ;Time to shake screen
ampl = 5     ;Amount to shake
freq = 100   ;A frequency of 180 shakes the screen rapidly

[State 200, 1]
type = HitDef
trigger1 = animelem = 7
attr = S, SP                     ;Attribute: Standing, Normal Attack
getpower = 0
damage = 48
animtype = hard                               
hitflag = MAF                    
priority = 3, Hit                
pausetime = 3, 3                 
sparkno = 0                      
sparkxy = -20, -50              
hitsound = 5, 0                                     
airguard.velocity = -1.9,-.8     
air.type = High                  
air.velocity = -3,-5         
air.hittime = 99              
p2facing =1
kill = 0

[State 1001, VarAdd]
type = ParentVarAdd
trigger1 = MoveHit = 1
fvar(13) = 1

[State 0, DestroySelf]
type = DestroySelf
trigger1 = animelem = 16
persistent = 0
;---------------------------------------------------------------
;BLUD3
[Statedef 4005]
type    = S
movetype= A
physics = S
poweradd= 0
velset = 0,0
anim = 4005
ctrl = 0
sprpriority = 2

[State 1200, Shake Screen]
type = EnvShake
trigger1 = animelem = 4
time = 5     ;Time to shake screen
ampl = 5     ;Amount to shake
freq = 100   ;A frequency of 180 shakes the screen rapidly

[State 200, 1]
type = HitDef
trigger1 = animelem = 9
attr = S, SP                     ;Attribute: Standing, Normal Attack
getpower = 0
damage = 85
animtype = hard                               
hitflag = MAF                    
priority = 3, Hit                
pausetime = 3, 3                 
sparkno = 0                      
sparkxy = -20, -50              
hitsound = 5, 0                                     
airguard.velocity = -1.9,-.8     
air.type = High                  
air.velocity = -1,5         
air.hittime = 99              
p2facing =1
kill = 0

[State 1001, VarAdd]
type = ParentVarAdd
trigger1 = MoveHit = 1
fvar(13) = 1

[State 0, DestroySelf]
type = DestroySelf
trigger1 = animelem = 14
persistent = 0
;-----------------------------------------------------
;hit by ha (pause) 
[Statedef 3061]
type    = A
movetype= H
physics = N
velset = 0,0

[State 0, PosSet]
type = PosSet
trigger1 = time = 0
y = enemy ,pos y >=0

[State 5020, 1] ;Anim for HIT_LIGHT to HIT_HARD
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) != [3,5]
value = ifelse((GetHitVar(airtype) = 1),5000,5010) + GetHitVar(animtype)

[State 5020, 2] ;Anim for HIT_BACK
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) = [3,5]
value = 5030

[State 5020, 3] ;Anim for HIT_UP/HIT_DIAGUP (only if it exists)
type = ChangeAnim
trigger1 = Time = 0
trigger1 = (GetHitVar(animtype) = [4,5]) && (SelfAnimExist(5047 + GetHitVar(animtype)))
value = 5047 + GetHitVar(animtype) ;5051 - 4 + type

[State 5020, 4] ;Freeze anim
type = ChangeAnim
trigger1 = Time > 0
value = anim

[State 5020, 5]
type = ChangeState
trigger1 = HitShakeOver
value = 3062

[State 5020, FFB Light]
type = ForceFeedback
trigger1 = anim = 5000
trigger2 = anim = 5010
persistent = 0
time = 6
waveform = square

[State 5020, FFB Medium]
type = ForceFeedback
trigger1 = anim = 5001
trigger2 = anim = 5011
persistent = 0
time = 8
waveform = sinesquare
ampl = 110,-1,-.3

[State 5020, FFB Hard]
type = ForceFeedback
trigger1 = anim = 5012
trigger2 = anim = 5002
trigger3 = anim = 5030
trigger4 = anim = [5051,5059]
persistent = 0
time = 15
waveform = sinesquare
ampl = 140

; hit by hyper art (3rd part)
[Statedef 3062]
type    = A
movetype= H
physics = N
ctrl = 0

[State 5030, 1]
type = ChangeAnim
trigger1 = Anim != [5000, 5199]
trigger1 = SelfAnimExist(5030)
value = 5030

[State 5030, 2]
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)

[State 5030, 3]
type = HitVelSet
trigger1 = Time = 0
x = 1
y = 1

[State 5030, 4]
type = ChangeState
triggerall = !HitFall
trigger1 = HitOver
trigger2 = Vel Y > 0    ;Hit ground
trigger2 = Pos Y >= Const(movement.air.gethit.groundlevel)
value = 5040 ;HITA_RECOV

[State 5030, 5]
type = ChangeState
triggerall = HitFall
trigger1 = HitOver
trigger2 = Vel Y > 0    ;Hit ground
trigger2 = Pos Y >= Const(movement.air.gethit.groundlevel)
value = 3063 ;HITA_FALL

[State 5030, 6]
type = changestate
trigger1 = AnimTime = 0
value = 3063 ;Air get-hit (transition)

[State 1042, 7] ;Hit ground
trigger1 = Vel Y > 0
trigger1 = Pos Y >= Const(movement.down.bounce.groundlevel)
type = Selfstate
value = 5110

;hit by ha (falling)
[statedef 3063]
type    = A
movetype= H
physics = N

[State 5050, 1] ;Change anim when done with transition
type = ChangeAnim
trigger1 = AnimTime = 0
trigger1 = Anim = 5035
trigger2 = Time = 0     ;If no transition anim
trigger2 = Anim != 5035
trigger2 = (Anim != [5051, 5059]) && (Anim != [5061, 5069])
trigger2 = Anim != 5090 ;Not if hit off ground anim
value = 5050

[State 5050, 2] ;Coming down anim
type = ChangeAnim
trigger1 = anim = [5050,5059]
trigger1 = Vel Y >= ifelse(anim = 5050, Const720p(4), Const720p(-8))
trigger1 = SelfAnimExist(anim+10)
value = anim+10
persistent = 0

[State 5050, 3] ;Gravity
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)



[State 5050, 6]
type = selfstate
trigger1 = Vel Y > 0
trigger1 = Pos Y >= ifelse((anim = [5051,5059]) || (anim = [5061,5069]), 0, Const(movement.air.gethit.groundlevel))
value = 5100 ;Downed get-hit (hit ground from fall)

;-----------------------------------------------------------------------------
; BOUNCE CUSTOM STATE (shaking)
[Statedef 43211]
type    = A
movetype= H
physics = N
velset = 0,0
ctrl = 0
[State 5020, 1] ;Anim for HIT_LIGHT to HIT_HARD
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) != [3,5]
value = ifelse((GetHitVar(airtype) = 1),5000,5010) + GetHitVar(animtype)

[State 5020, 2] ;Anim for HIT_BACK
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) = [3,5]
value = 5030

[State 5020, 3] ;Anim for HIT_UP/HIT_DIAGUP (only if it exists)
type = ChangeAnim
trigger1 = Time = 0
trigger1 = (GetHitVar(animtype) = [4,5]) && (SelfAnimExist(5047 + GetHitVar(animtype)))
value = 5047 + GetHitVar(animtype) ;5051 - 4 + type

[State 5020, 4] ;Freeze anim
type = ChangeAnim
trigger1 = Time > 0
value = anim

[State 5020, 5]
type = ChangeState
trigger1 = HitShakeOver
value = 43222

[State 5020, FFB Light]
type = ForceFeedback
trigger1 = anim = 5000
trigger2 = anim = 5010
persistent = 0
time = 6
waveform = square

[State 5020, FFB Medium]
type = ForceFeedback
trigger1 = anim = 5001
trigger2 = anim = 5011
persistent = 0
time = 8
waveform = sinesquare
ampl = 110,-1,-.3

[State 5020, FFB Hard]
type = ForceFeedback
trigger1 = anim = 5012
trigger2 = anim = 5002
trigger3 = anim = 5030
trigger4 = anim = [5051,5059]
persistent = 0
time = 15
waveform = sinesquare
ampl = 140

;BOUNCE CUSTOM STATE (knocked back)
[Statedef 43222]
type    = A
movetype= H
physics = N
ctrl = 0

[State 5030, 1]
type = ChangeAnim
trigger1 = Anim != [5000, 5199]
trigger1 = SelfAnimExist(5030)
value = 5030

[State 5030, 2]
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)

[State 5030, 3]
type = HitVelSet
trigger1 = Time = 0
x = 1
y = 1

[State 5030, 4]
type = selfState
triggerall = !HitFall
trigger1 = HitOver
trigger2 = Vel Y > 0    ;Hit ground
trigger2 = Pos Y >= Const(movement.air.gethit.groundlevel)
value = 5040 ;HITA_RECOV

[State 5030, 5]
type = ChangeState
triggerall = HitFall
trigger1 = HitOver
trigger2 = Vel Y > 0    ;Hit ground
trigger2 = Pos Y >= Const(movement.air.gethit.groundlevel)
value = 43333 ;HITA_FALL

[State 5030, 6]
type = selfState
trigger1 = AnimTime = 0
value = 5035 ;Air get-hit (transition)

;BOUNCE CUSTOM STATE (falling)
[Statedef 43333]
type    = A
movetype= H
physics = N
ctrl = 0
[State 5050, 1] ;Change anim when done with transition
type = ChangeAnim
trigger1 = AnimTime = 0
trigger1 = Anim = 5035
trigger2 = Time = 0     ;If no transition anim
trigger2 = Anim != 5035
trigger2 = (Anim != [5051, 5059]) && (Anim != [5061, 5069])
trigger2 = Anim != 5090 ;Not if hit off ground anim
value = 5050

[State 5050, 2] ;Coming down anim
type = ChangeAnim
trigger1 = anim = [5050,5059]
trigger1 = Vel Y >= ifelse(anim = 5050, Const720p(4), Const720p(-8))
trigger1 = SelfAnimExist(anim+10)
value = anim+10
persistent = 0

[State 5050, 3] ;Gravity
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)



[State 5050, 6]
type = changestate
trigger1 = Vel Y > 0
trigger1 = Pos Y >= ifelse((anim = [5051,5059]) || (anim = [5061,5069]), 0, Const(movement.air.gethit.groundlevel))
value = 54321;Downed get-hit (hit ground from fall)

;--------------------------------------------------------------------------------------
; BOUNCE CUSTOM STATE (hit ground from fall)
[Statedef 54321]
type    = L
movetype= H
physics = N

[State 5100, 2004.04.14 behavior]
type = null;VelSet
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) = 0
trigger1 = vel x < -1
x = -1

[State 5100, EnvShake]
type = FallEnvShake
trigger1 = Time = 0

[State 5100, Var] ;Save fall velocity
type = VarSet
trigger1 = Time = 0
sysvar(1) = floor(vel y)

[State 5100, 2] ;Hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = (anim != [5051,5059]) && (anim != [5061,5069])
trigger2 = !SelfAnimExist(5100 + (anim % 10))
value = 5100

[State 5100, 3] ;Hit ground anim (for hit up)
type = ChangeAnim
trigger1 = time = 0
trigger1 = (anim = [5051,5059]) || (anim = [5061,5069])
trigger1 = SelfAnimExist(5100 + (anim % 10))
value = 5100 + (anim % 10)

[State 5100, 4]
type = PosSet
trigger1 = Time = 0
y = 0

[State 5100, 5]
type = VelSet
trigger1 = Time = 0
y = 0

[State 5100, 6] ;Reduce speed
type = VelMul
trigger1 = Time = 0
x = 0.75

[State 5100, 7]
type = ChangeState
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) = 0
value = 5110 ;Downed get-hit (lying down)

[State 5100, 8]
type = Explod
trigger1 = Time = 1
anim = F(60 + (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56)))
pos = 0, 0
sprpriority = ifelse (sysvar(1) <= Const720p(56), -10, 10)

[State 5100, 9]
type = HitFallDamage
trigger1 = Time = 3

[State 5100, 10]
type = PlaySnd
trigger1 = Time = 1
value = F7, (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56))

[State 5100, 11]
type = PosFreeze
trigger1 = 1

[State 5100, 12]
type = ChangeState
trigger1 = AnimTime = 0
value = 54322 ;Downed get-hit (bounce off ground)

[State 5100, 13]
type = ForceFeedback
trigger1 = Time = 0
waveform = sinesquare
ampl = 128,-3,-.2,.005
time = 20

;---------------------------------------------------------------------------
; Downed get-hit (bounce off ground)
[Statedef 54322]
type    = L
movetype= H
physics = N

[State 5101, 1] ;Coming hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim != [5101,5109]
trigger2 = !SelfAnimExist(5160 + (anim % 10))
value = 5160

[State 5101, 2] ;Coming hit ground anim (for hit up)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim = [5101,5109]
trigger1 = SelfAnimExist(5160 + (anim % 10))
value = 5160 + (anim % 10)

[State 5101, 3]
type = HitFallVel
trigger1 = Time = 0

[State 5101, 4]
type = PosSet
trigger1 = Time = 0
y = Const(movement.down.bounce.offset.y)

[State 5101, 5]
type = PosAdd
trigger1 = Time = 0
x = Const(movement.down.bounce.offset.x)

[State 5101, 6] ;Acceleration
type = VelAdd
trigger1 = 1
y = Const(movement.down.bounce.yaccel)

[State 5101, 7] ;Hit ground
trigger1 = Vel Y > 0
trigger1 = Pos Y >= Const(movement.down.bounce.groundlevel)
type = selfState
value = 5110



;---------------------------------------------------------------------------
; Override common states (use same number to override) :
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; States that are always executed (use statedef -2)
;---------------------------------------------------------------------------
[STATEDEF -2]

;--------------------------------------------------------
;Fr char specific
[State 0, Explod]
type = Explod
trigger1 = 1
anim = 2020
ID = 2020
pos = cond(teamside = 1, 0, 173), 210
postype = Left
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
supermovetime = 0
pausemovetime = 0
scale = 1,1
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
ignorehitpause = 1

[State 0, Explod]
type = Explod
trigger1 = 1
anim = 2021
ID = 2020
pos = cond(teamside = 1, 4, 177),210
postype = Left
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
supermovetime = 0
pausemovetime = 0
scale = 0.001 * abs(var(5)), 1
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
ignorehitpause = 1

[State 0, VarAdd]
type = VarAdd
trigger1 = var(5) > 0
trigger1 = NumHelper(2000)
trigger1 = helper(2000), stateno != 2090
v = 5
value = -1

[State 0, VarAdd]
type = VarAdd
trigger1 = var(5) < 1000
trigger1 = !NumHelper(2000)
v = 5
value = 5

[State 0, VarSet]
type = VarSet
trigger1 = var(5) < 0
v = 5
value = 0
[State 0, VarSet]
type = VarSet
trigger1 = var(5) > 1000
v = 5
value = 1000

[State 0, RemoveExplod]
type = RemoveExplod
trigger1 = helper(2000), stateno = 2090
id = 2000

[State 0, RemoveExplod]
type = RemoveExplod
trigger1 = helper(2000), stateno = 2089
id = 1999

;--------------------------------------------------------
[State -2, Training stuff, it won't effect the gameplay]
;also I'm tired of pressing the spacebar. :P
type = AssertSpecial
trigger1 = Enemy, Name = "Training"
flag = timerfreeze
ignorehitpause = 1

[State 0, VarSet]
type = VarSet
trigger1 = P2MoveType != H
var(18) = 0


;===============================================================================
; COUNTER HIT (Taken from Vans, who based his on Sander's Method)
;===============================================================================

[State -2, VarSet];Checks if opponent is in attack state
type = VarSet
triggerall = numenemy
trigger1 = enemy, movetype = A
var(56) = 1
ignorehitpause = 1

[State -2, VarSet];This resets the condition if counter not succesful and succesful
type = VarSet
triggerall = numenemy
trigger1 = enemy, movetype = I || var(57) >= 1  ;Enemy is Idle | Counter was Succesful
trigger2 = var(57) > 10 && enemy, movetype = H  ;10 ticks passed & enemy is on gethit state
var(56) = 0
ignorehitpause = 1

[State -2, VarSet];Counter Hit Succesful
type = VarSet
trigger1 = var(56) = 1 && movehit ;Counter Check Ok, Move Hit Succesfully.
trigger1 = stateno != [190,199] ;Does not activate during intros.
trigger1 = stateno != [800,820] ;Does not activate during throws.
trigger1 = stateno != [950,951] ;Don't activate during throws.
trigger2 = var(56) = 1 && projhit = 1  ;Counter Check Ok, Projectile Hit Succesfully.
var(57) = 1
ignorehitpause = 1

[State -2, VarAdd];Counter Hit Timer
type = VarAdd
trigger1 = var(57) >= 1 ;Counter was succesful
var(57) = 1
ignorehitpause = 1

[State -2, VarSet];Counter Hit Reset
type = VarSet
trigger1 = var(57) >= 22 && movehit ;Reset if 22 ticks passed and move hit
trigger2 = p2movetype != H ;Reset if P2 is no longer in gethit state
trigger3 = movetype = H ;Reset if P1 is getting hit
trigger4 = var(57) >= 22 && projhit = 1 ;Reset if 22 ticks passed and projectile hit
var(57) = 0
ignorehitpause = 1

[State -2, AssertSpecial];This will award free juggles for Counter Hit.
type = AssertSpecial
trigger1 = var(57) > 0
flag = nojugglecheck


[State -2, counterhit damage change]
type=attackmulset
trigger1 = var(57) >= 1
value = 1.0;only for test;1.1;1.8;2;0.7
ignorehitpause=0

[State -2, EnvColor];This will produce a flash a la KOF2K2
type = EnvColor
triggerall = numenemy
triggerall = stateno != [190,199] ;Does not activate during intros.
triggerall = stateno != [800,820] ;Does not activate during throws.
triggerall = stateno != [950,951] ;Don't activate during throws.
triggerall = enemy, movetype = h ;Enemy was indeed HIT, otherwise this'd be retarded.
trigger1 = var(56) = 1 && movehit  ;Move hit, Ok
trigger2 = var(56) = 1 && projhit = 1 ;Projectile hit, Ok
value = 255,255,255
time = 1
under = 1
ignorehitpause = 1
persistent = 0

[State -2, Explod];Counter Explod for P1 Side.
type = Explod
triggerall = numenemy
triggerall = var(56) = 1 && numexplod(13000) = 0 && teamside = 1 ;Counter Ok, Explod has not played, P1 Side
triggerall = enemy, movetype = h ;Enemy was indeed HIT, otherwise this'd be retarded.
triggerall = stateno != [800,820] ;Does not activate during throws.
triggerall = stateno != [950,951] ;Don't activate during throws.
trigger1 = movehit ;Move hits
trigger2 = projhit = 1 ;Projectile Hits
anim = 13000
pos = 30,210
postype = left  ;p2,front,back,left,right
removetime = -2
supermove = 1
scale = 0.5,0.5
sprpriority = 0
id = 13000
bindtime = -1
ontop = 1
ownpal = 1
ignorehitpause = 1
pausemovetime = -1

[State -2, Explod];Counter Explod for P2 Side.
type = Explod
triggerall = numenemy
triggerall = var(56) = 1 && numexplod(13000) = 0 && teamside = 2 ;Counter Ok, Explod has not played, P2 Side
triggerall = enemy, movetype = h ;Enemy was indeed HIT, otherwise this'd be retarded.
triggerall = stateno != [800,820] ;Does not activate during throws.
triggerall = stateno != [950,951] ;Don't activate during throws.
trigger1 = movehit ;Move hits
trigger2 = projhit = 1 ;Projectile Hits
anim = 13001
pos = -30,210
postype = right  ;p2,front,back,left,right
removetime = -2
supermove = 1
scale = 0.5,0.5
sprpriority = 0
id = 13000
bindtime = -1
ontop = 1
ownpal = 1
ignorehitpause = 1
pausemovetime = -1
;----------------------------------------------------------------------------------
[State -2, Reset var when opponent recovers]
type = varset
triggerall = var(30)!=0
trigger1 = numenemy
trigger1 =(enemynear,movetype!=H)
trigger2 =!numenemy
var(30)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(30) != 0
trigger1= p2stateno = 5110
var(30)=0



[State -2, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = NoAirGuard


[State -2, Landing Sound]
type = PlaySnd
trigger1 = animelem = 10
trigger2 = animelem = 17
triggerall = stateno = 20 ;Jump land
triggerall = anim = 20
value = 41, 0

[State -2, Landing Sound]
type = PlaySnd
trigger1 = animelem = 7
trigger2 = animelem = 14
triggerall = stateno = 20 ;Jump land
triggerall = anim = 21
value = 41, 1

[State -2, Landing Sound]
type = PlaySnd
trigger1 = animelem = 9
trigger2 = animelem = 14
triggerall = stateno = 100 ;Jump land
triggerall = anim = 100
value = 41, 2

;j.SK Limiter
[State 0, RemoveExplod]
type = RemoveExplod
trigger1 = !numtarget
id = 44021

 [State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(34) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(34)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(34) != 0
trigger1= p2stateno = 5110
var(34)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(31) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(31)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(31) != 0
trigger1= p2stateno = 5110
var(31)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(32) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(32)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(32) != 0
trigger1= p2stateno = 5110
var(32)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(35) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(35)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(35) != 0
trigger1= p2stateno = 5110
var(35)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(33) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(33)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(33) != 0
trigger1= p2stateno = 5110
var(33)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(6) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(6)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(6) != 0
trigger1= p2stateno = 5110
var(6)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(7) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(7)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(7) != 0
trigger1= p2stateno = 5110
var(7)=0

;===============================================================================
; ------- Damage Dampener --------
;===============================================================================
[State -2, Counter Flag] 
type = VarSet
trigger1 = NumEnemy
fvar(8) = (EnemyNear, MoveType = A)
ignoreHitPause = 1
 
;Damage Dampener Variable (by POTS)
[State -2, Hit Count] 
type = VarAdd 
trigger1 = !IsHelper
trigger1 = MoveHit = 1 
trigger1 = !HitPauseTime  
fvar(13) = 1 
 
[State -2, Hit Count Reset] 
type = VarSet 
trigger1 = NumEnemy && fvar(13) 
trigger1 = (EnemyNear, MoveType != H) && (EnemyNear, StateNo != 5300) 
fvar(13) = 0 
ignoreHitPause = 1
 
[State -2, Dampener] 
type = VarSet 
trigger1 = 1 
fvar(10) = ifElse(fvar(13) < 1, 14, ifElse(fvar(13) >= 23, 1, 14 - fvar(13))) / 14.0 
ignoreHitPause = 1 
 
[State -2, Dampener Limit] 
type = VarSet 
trigger1 = fvar(10) < 0 
fvar(10) = 0 
ignoreHitPause = 1 
 
[State -2, Root Dampener] 
type = VarSet 
trigger1 = 1 
fvar(11) = fvar(10) * ifElse(fvar(8), 1.2, 1) 
ignoreHitPause = 1

;---------------------------------------------------------------------------
; States that are executed when in self's state file (use statedef -3)
;---------------------------------------------------------------------------

[Statedef -3]

;This controller plays a sound everytime KFM lands from a jump, or
;from his back-dash.
[State -3, Landing Sound]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 52 ;Jump land
trigger2 = stateno = 106 ;Run-back land
value = 40, 0
