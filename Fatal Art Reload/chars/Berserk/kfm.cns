;â˜… Zerker's constants and state file
;All Fatal Art characters were created out of a base of KFM
;There are comments scattered throughout these files
;Enjoy!

[Data]
;Amount of life to start with
life = 1125
;attack power (more is stronger)
attack = 100
;defensive power (more is stronger)
defence = 100
;Percentage to increase defense everytime player is knocked down
fall.defence_up = 0
;Time which player lies down for, before getting up
liedown.time = 5
;Default hit spark number for HitDefs
sparkno = 2
;Default guard spark number
guard.sparkno = 40
;1 to enable echo on KO
KO.echo = 1
;Volume offset (negative for softer)
volume = 0
;Variables with this index and above will not have their values
;reset to 0 between rounds or matches. There are 60 int variables,
;indexed from 0 to 59, and 40 float variables, indexed from 0 to 39.
;If omitted, then it defaults to 60 and 40 for integer and float
;variables repectively, meaning that none are persistent, i.e. all
;are reset. If you want your variables to persist between matches,
;you need to override state 5900 from common1.cns.
IntPersistIndex = 0
FloatPersistIndex = 0

[Size]
xscale = 0.31           ;Horizontal scaling factor.
yscale = 0.31        ;Vertical scaling factor.
ground.back = 15     ;Player width (back, ground)
ground.front = 15   ;Player width (front, ground)
air.back = 15        ;Player width (back, air)
air.front = 15      ;Player width (front, air)
height = 60           ;Height of player (for opponent to jump over)
attack.dist = 110    ;Default attack distance
proj.attack.dist = 90 ;Default attack distance for projectiles
proj.doscale = 0     ;Set to 1 to scale projectiles too
head.pos = 5, -110   ;Approximate position of head
mid.pos = -0, -75    ;Approximate position of midsection
shadowoffset = 0     ;Number of pixels to vertically offset the shadow
draw.offset = 0,0    ;Player drawing offset in pixels (x, y). Recommended 0,0

[Velocity]
walk.fwd  = 2      ;Walk forward
walk.back = -2    ;Walk backward
run.fwd  = 4.5, 0    ;Run forward (x, y)
run.back = -4.5,-5 ;Hop backward (x, y)
jump.neu = 0,-8    ;Neutral jumping velocity (x, y)
jump.back = -2.55    ;Jump back Speed (x, y)
jump.fwd = 2.5       ;Jump forward Speed (x, y)
runjump.back = -2.55,-8.1 ;Running jump speeds (opt)
runjump.fwd = 3,-7.5      ;.
airjump.neu = 0,-8.1      ;.
airjump.back = -2.55      ;Air jump speeds (opt)
airjump.fwd = 4.5         ;.
air.gethit.groundrecover = -.15,-3.5  ;Velocity for ground recovery state (x, y) **MUGEN 1.0**
air.gethit.airrecover.mul = .5,.2     ;Multiplier for air recovery velocity (x, y) **MUGEN 1.0**
air.gethit.airrecover.add = 0,-4.5    ;Velocity offset for air recovery (x, y) **MUGEN 1.0**
air.gethit.airrecover.back = -1       ;Extra x-velocity for holding back during air recovery **MUGEN 1.0**
air.gethit.airrecover.fwd = 0         ;Extra x-velocity for holding forward during air recovery **MUGEN 1.0**
air.gethit.airrecover.up = -2         ;Extra y-velocity for holding up during air recovery **MUGEN 1.0**
air.gethit.airrecover.down = 1.5      ;Extra y-velocity for holding down during air recovery **MUGEN 1.0**

[Movement]
airjump.num = 0       ;Number of air jumps allowed (opt)
airjump.height = 35   ;Minimum distance from ground before you can air jump (opt)
yaccel = .44          ;Vertical acceleration
stand.friction = .85  ;Friction coefficient when standing
crouch.friction = .82 ;Friction coefficient when crouching
stand.friction.threshold = 2          ;If player's speed drops below this threshold while standing, stop his movement **MUGEN 1.0**
crouch.friction.threshold = .05       ;If player's speed drops below this threshold while crouching, stop his movement **MUGEN 1.0**
air.gethit.groundlevel = 25           ;Y-position at which a falling player is considered to hit the ground **MUGEN 1.0**
air.gethit.groundrecover.ground.threshold = -20 ;Y-position below which falling player can use the recovery command **MUGEN 1.0**
air.gethit.groundrecover.groundlevel = 10   ;Y-position at which player in the ground recovery state touches the ground **MUGEN 1.0**
air.gethit.airrecover.threshold = -1  ;Y-velocity above which player may use the air recovery command **MUGEN 1.0**
air.gethit.airrecover.yaccel = .35    ;Vertical acceleration for player in the air recovery state **MUGEN 1.0**
air.gethit.trip.groundlevel = 15      ;Y-position at which player in the tripped state touches the ground **MUGEN 1.0**
down.bounce.offset = 0, 20            ;Offset for player bouncing off the ground (x, y) **MUGEN 1.0**
down.bounce.yaccel = .4               ;Vertical acceleration for player bouncing off the ground **MUGEN 1.0**
down.bounce.groundlevel = 12          ;Y-position at which player bouncing off the ground touches the ground again **MUGEN 1.0**
down.friction.threshold = .05         ;If the player's speed drops below this threshold while lying down, stop his movement **MUGEN 1.0**

;Default language victory quotes (optional).  **MUGEN 1.0**
;If this section is included, the default language victory quotes must be in English.
[Quotes]
; Up to 100 victory quotes can be specified per language (victory0 - victory99)
victory1 = "RAAHHGHGHG"
victory2 = "WHY DID YOU CHOOSE TO FIGHT ME?"
victory3 = "DISGRACE"
victory4 = "YOU ARE UGLY"
victory5 = "I WANT TO GO HOME"
victory6 = "I BROKE YOU"

;---------------------------------------------------------------------------
; Variable usage:
; This is a record of the variables that KFM uses. Keeping a record of your
; variable usage helps you avoid careless mistakes later.
; var(1)  - Used in kfm.cmd for combo condition (updated every tick)
; var(2)  - Used in Kung Fu Throw (state 800) to remember if fwd was being
;           held (remembered from state 800 through state 810).


;---------------------------------------------------------------------------
; Lose by Time Over
; CNS difficulty: basic
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 4
trigger2 = animelem = 12
trigger3 = animelem = 20
value = 170,0
volumescale = 100000000
freqmul = .75

[State 0, EnvShake]
type = EnvShake
trigger1 = animelem = 4
trigger2 = animelem = 12
trigger3 = animelem = 20
time = 5
freq = 60
ampl = -4
phase = 90

[State 0, Explod]
type = Explod
trigger1 = animelem = 4
trigger2 = animelem = 12
trigger3 = animelem = 20
anim = 17200
ID = 673
pos = 0,0
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.6,0.4
sprpriority = -3
ontop = 0
shadow = 0,0,0
ownpal = 1
removeongethit = 0

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win state decider
; CNS difficulty: basic
[Statedef 180]
type = S

[State 180, 1]
type = ChangeState
trigger1 = Time = 0
value = 181

;---------------------------------------------------------------------------
; Win pose 1 - Bow
; CNS difficulty: basic
[Statedef 181]
type = S
ctrl = 0
anim = 181
velset = 0,0

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 2
value = 5000,2
[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 7
value = 4000,0
[State -2, Explod];P1 Side.
type = Explod
trigger1 = time = 1 
anim = 57622
pos = 160,80
postype = left  ;p2,front,back,left,right
removetime = -2
supermove = 1
scale = 0.5,0.5
sprpriority = 0
id = 13100
bindtime = -1
ontop = 1
ownpal = 1
ignorehitpause = 1
pausemovetime = -1
persistent = 0
[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = time = 4
value = 5762,0

;---------------------------------------------------------------------------
; Introduction
; CNS difficulty: basic
[Statedef 191]
type = S
ctrl = 0
anim = 191
velset = 0,0

[State 0, ChangeState]
type = ChangeState
trigger1 = EnemyNear,Name = "Aryr"
value = 192
ctrl = 0

[State 191, 1] ;Freeze animation until PreIntro is over
type = ChangeAnim
trigger1 = RoundState = 0
value = 191

[State 191, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = animelem = 11
value = 5000, (0+(Random%3))

[State -3, Win Voices] ;Win
type = PlaySnd
trigger1 = ANIMELEM = 20
value = 4000, (0+(Random%4))

[State 200, 2]
type = PlaySnd
trigger1 = animelem = 3
value = 0, 1

[State 191, 3] ;Change to stand state when done
type = ChangeState
trigger1 = AnimTime = 0
value = 0
;---------------------------------------------------------------------------
;VS Aryr
[Statedef 192]
type = S
ctrl = 0
anim = 192
velset = 0,0

[State 0, PalFXWiz]
type = PalFX
trigger1 = time = 0 
time = 70
add = 100,100,0
mul = 256,256,256
sinadd = 100,100,0,3
invertall = 0
color = 256

[State 0, PalFXWiz]
type = PalFX
trigger1 = time = 107
time = 5
add = 100,100,0
mul = 256,256,256
sinadd = 100,100,0,3
invertall = 0
color = 256

[State 0, EnvShake]
type = EnvShake
triggerall = time < 70
trigger1 = time%3 = 0
time = 1
freq = 60
ampl = -4
phase = 30

[State 0, EnvShake]
type = EnvShake
trigger1 = time = 107
time = 10
freq = 90
ampl = -9
phase = 530

[State 0, PlaySnd]
type = PlaySnd
triggerall = time < 75
trigger1 = time%4 = 0
value = S666,999
channel = 5

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time =  107
value = S666,999
channel = 5

[State 191, 1] ;Freeze animation until PreIntro is over
type = ChangeAnim
trigger1 = RoundState = 0
value = 192

[State 191, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

[State 191, 3] ;Change to stand state when done
type = ChangeState
trigger1 = AnimTime = 0
value = 0
;---------------------------------------------------------------------------
; Taunt
; CNS difficulty: easy
[Statedef 195]
type = S
ctrl = 0
anim = 195
velset = 0,0
movetype = I
physics = S
sprpriority = 2

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 3
trigger2 = animelem = 6
value = 8000,1

[State 0, LifeAdd]
type = LifeAdd
trigger1 = animelem = 4
trigger2 = animelem = 7
value = -10

[State 0, EnvShake]
type = EnvShake
trigger1 = animelem = 3
trigger2 = animelem = 6
time = 8
freq = 60
ampl = 4
phase = 70


[State 0, Grab multiplier]
type = MapAdd
trigger1 = animelem = 23
map = "GrabDmg"
value = .25

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 11
value = 4000,2

[State 195, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;----------------------------------------------------------------------------
[Statedef 9000]
type    = S
movetype= I
physics = S
juggle  = 0
poweradd= 0
ctrl = 0
velset = 0,0
anim = 100
sprpriority = 2

[State 0, PlaySnd]
type = PlaySnd
trigger1 = animelem = 4
value = S0,0


[State 0, VelSet]
type = VelSet
trigger1 = animelem = 4
x = 13




[State 240, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


; Breaker 
[Statedef 300]
type    = A
movetype= A
physics = A
ctrl = 0
velset = 0,-5
anim = 300
juggle = 0
poweradd = -2000

[State 0, Helper]
type = Helper
trigger1 = time = 0
name = "BREAKER HITBOX"
stateno = 301
pos = 0,0
postype = p2    ;p2,front,back,left,right
ownpal = 0
 
[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA

 [State 1200, Shake Screen]
type = EnvShake
trigger1 = animelem = 2
time = 45     ;Time to shake screen
ampl = 5     ;Amount to shake
freq = 100   ;A frequency of 180 shakes the screen rapidly

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = unguardable
flag2 = nomusic
flag3 = timerfreeze
[State 0, Pause]
type = Pause
trigger1 = time = 1
time = 10
movetime = 1
;endcmdbuftime = 0
pausebg = 1
;ignorehitpause = 
;persistent = 
movetime = 10
[State 210, 1]
type = PlaySnd
trigger1 = animelem = 2
value = 9174,0
[State 210, 1]
type = PlaySnd
trigger1 = time = 0
value = 9174,1
[State 0, Explod]
type = Explod
trigger1 = animelem = 1
anim = F300
ID = 300
pos = 0,-50
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
scale = 1,1
sprpriority = -2
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
trans = add
pausemovetime = 999
supermovetime = 999

[State 210, 1]
type = PlaySnd
trigger1 = time = 0
value = 6345, 0

[State 210, 1]
type = PlaySnd
trigger1 = time = 5
value = 6345, 1
 
 
[State 210, 50]
type = ctrlset
trigger1 = AnimTime = 0
value = 1

;Breaker Hitbox
[Statedef 301]
type    = U
movetype= A
physics = N
ctrl = 0
velset = 0,0
anim = 301
juggle = 0
poweradd = 0

[State -2, Explod];P1 Side.
type = Explod
trigger1 = time = 1 && numexplod(13002)=0 && teamside = 1
anim = 13002
pos = 50,ifelse(numexplod(13002),200,200)
postype = left  ;p2,front,back,left,right
removetime = -2
supermove = 1
scale = 0.5,0.5
sprpriority = 0
id = 13002
bindtime = -1
ontop = 1
ownpal = 1
ignorehitpause = 1
pausemovetime = -1
persistent = 0
[State -2, Explod];P2 Side.
type = Explod
trigger1 =  time = 1 && numexplod(13003)=0 && teamside = 2
anim = 13003
pos = -50,ifelse(numexplod(13003),200,200)
postype = right  ;p2,front,back,left,right
removetime = -2
supermove = 1
scale = 0.5,0.5
sprpriority = 0
id = 13003
bindtime = -1
ontop = 1
ownpal = 1
ignorehitpause = 1
pausemovetime = -1
persistent = 0
[State 210, 0]
type = HitDef
trigger1 = time = 0
attr = S, SA
animtype  = Hard
damage    = 0, 0
guardflag = MAF
pausetime = 12, 12
priority = 7, Hit
sparkno = 3
sparkxy = 0,-50
guard.sparkno = 2
hitsound   = S1, 3
guardsound = 5,2
ground.type = High
ground.slidetime = 12
ground.hittime  = 12
ground.velocity = 9, -4
air.type = High
air.velocity = 9, -4
fall = 1
fall.recover = 0
getpower = 0, 0
givepower = 0, 0
envshake.time = 30
envshake.freq = 80
envshake.ampl = -4
ID = 300
p2stateno = 1040

[State 0, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = unguardable
flag2 = nomusic
flag3 = timerfreeze


[State 0, DestroySelf]
type = DestroySelf
trigger1 = animelem = 2
persistent = 0

;Guard Rush B
[Statedef 360]
type    = S
movetype= I
physics = S
ctrl = 0
velset = -12,0
anim = 360
poweradd = -500

[State 0, ChangeState]
type = ChangeState
triggerall = enemy,statetype != A
trigger1 = time = 0
value = 380
ctrl = 0
ignorehitpause = 1
redirectID = enemy,ID

[State 360-370, Rushing]
type = SuperPause
trigger1 = time = 0
pos = 0, -50
time = 10
anim = -1

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 0
value = F360,0
channel = 360
persistent = 0
volumescale = 99999999999

[State 0, Explod]
type = Explod
trigger1 = time = 0
anim = 380
ID = 380
pos = -20,-20
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
removetime = -2
pausemovetime = 0
scale = .5,.5
sprpriority = 7
ownpal = 1
supermovetime = 12

[State 0, Explod]
type = Explod
trigger1 = time = 0
anim = 381
ID = 381
pos = -20,-30
postype = p1  ;p2,front,back,left,right
facing = cond(enemy,facing=1,-1,1)
vfacing = 1
bindtime = 1
removetime = -2
pausemovetime = 0
scale = .3,.3
sprpriority = 7
ownpal = 1

[State 1040, NotHitBy]
type = NotHitBy
trigger1 = time = 0
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 15

[State 0, PalFX]
type = PalFX
trigger1 = time = 0
time = 15
add = 100,50,80
mul = 190,150,170
invertall = 0
color = 100

[State 210, 50]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;Guard Rush F
[Statedef 370]
type    = S
movetype= I
physics = S
ctrl = 0
velset = 17.5,0
anim = 370
poweradd = -500

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 0
value = F360,0
channel = 360
persistent = 0
volumescale = 99999999999

[State 0, ChangeState]
type = ChangeState
triggerall = enemy,statetype != A
trigger1 = time = 0
value = 380
ctrl = 0
ignorehitpause = 1
redirectID = enemy,ID

[State 360-370, Rushing]
type = SuperPause
trigger1 = time = 0
pos = 0, -50
time = 10
anim = -1

[State 0, Explod]
type = Explod
trigger1 = time = 0
anim = 380
ID = 380
pos = 20,-20
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
removetime = -2
pausemovetime = 0
scale = .5,.5
sprpriority = 7
ownpal = 1
supermovetime = 10
[State 0, Explod]
type = Explod
trigger1 = time = 0
anim = 381
ID = 381
pos = 20,-30
postype = p1  ;p2,front,back,left,right
facing = cond(enemy,facing=1,-1,1)
vfacing = 1
bindtime = 1
removetime = -2
pausemovetime = 0
scale = .3,.3
sprpriority = 7
ownpal = 1

[State 1040, NotHitBy]
type = NotHitBy
trigger1 = time = 0
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 15

[State 0, PlayerPush]
type = PlayerPush
trigger1 = 1
value = 0

[State 0, Width]
type = Width
trigger1 = 1
edge = 0,0
player = 0,0
value = 0,0

[State 0, PalFX]
type = PalFX
trigger1 = time = 0
time = 15
add = 100,50,80
mul = 190,150,170
invertall = 0
color = 100

[State 210, 50]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;----------------------------------------------------------
;hit by breaker (pause)
[statedef 1040]
type    = A
movetype= H
physics = N

[State 1040, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 1

[State 1040, Anim] ;Custom animation
type = ChangeAnim2
trigger1 = 1
value = 1040

[State 1040, State]
type = ChangeState
trigger1 = HitShakeOver = 1
value = 1041

;----------------------------------------------------------
;hit by breaker (fall)
[statedef 1041]
type    = A
movetype= H
physics = N

[State 1041, VelSet]
type = VelSet
trigger1 = time = 0
x = -6
y = 4
[State 1041, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 1
[State 1041, 1] ;Change anim when done with transition
type = ChangeAnim
trigger1 = AnimTime = 0
trigger1 = Anim = 5035
trigger2 = Time = 0     ;If no transition anim
trigger2 = Anim != 5035
trigger2 = (Anim != [5051, 5059]) && (Anim != [5061, 5069])
trigger2 = Anim != 5090 ;Not if hit off ground anim
value = 5050

[State 1041, 2] ;Coming down anim
type = ChangeAnim
trigger1 = anim = [5050,5059]
trigger1 = Vel Y >= ifelse(anim = 5050, Const720p(4), Const720p(-8))
trigger1 = SelfAnimExist(anim+10)
value = anim+10
persistent = 0

[State 1041, 3] ;Gravity
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)


[State 1041, 6]
type = ChangeState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= ifelse((anim = [5051,5059]) || (anim = [5061,5069]), 0, Const(movement.air.gethit.groundlevel))
value = 1042 ;Downed get-hit (hit ground from fall)
;--------------------------------
;hit by breaker (bounce)
[statedef 1042]
type    = L
movetype= H
physics = N

[State 1042, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 1

[State 1042, Anim 5160] ;Coming hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim != [5101,5109]
trigger2 = !SelfAnimExist(5160 + (anim % 10))
value = 5160

[State 1042, Anim 5160] ;Coming hit ground anim (for hit up)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim = [5101,5109]
trigger1 = SelfAnimExist(5160 + (anim % 10))
value = 5160 + (anim % 10)

[State 1042, 3]
type = HitFallVel
trigger1 = Time = 0

[State 1042, 4]
type = PosSet
trigger1 = Time = 0
y = Const(movement.down.bounce.offset.y)

[State 1042, 5]
type = PosAdd
trigger1 = Time = 0
x = Const(movement.down.bounce.offset.x)

[State 1042, 6] ;Acceleration
type = VelAdd
trigger1 = 1
y = Const(movement.down.bounce.yaccel)

[State 1042, 7] ;Hit ground
trigger1 = Vel Y > 0
trigger1 = Pos Y >= Const(movement.down.bounce.groundlevel)
type = Selfstate
value = 5110

;---------------------------------------------------------------------------
; Air Grab Land
; CNS difficulty: easy
[Statedef 2004]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 0                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 2004                       ;Change animation (Def: no change)
poweradd = 0                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 5
trigger2 = animelem = 6
trigger3 = animelem = 7
x = -9

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 8
x = -16

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 9
x = -32

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 10
x = -20

[State 0, PosAdd]
type = PosAdd
trigger1 = animelem = 11
x = -17 

[State 200, 1]
type = HitDef
trigger1 = time = 0
attr = S, SA                     ;Attribute: Standing, Normal Attack
damage = 0                   ;Damage that move inflicts, guard damage
animtype = hard                ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAFD                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 0, 13                 ;Time attacker pauses, time opponent shakes
sparkno = -1                      ;Spark anim no (Def: set above)
sparkxy = -10, -96              ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = S9000, 0                  ;Sound to play on hit
guardsound = 6, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 20             ;Time opponent is in hit state
ground.velocity = 0             ;Velocity at which opponent is pushed
p2stateno = 10333
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = 0,0           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 15                 ;Time before opponent regains control in air
fall = 1


[State 200, 2]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 200, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
;S Thrown by Kung Fu Throw
; (a custom gethit state)
; Description: This is the state that the opponent changes to after being
;     hit by KFM's throw HitDef. The important thing here is to use a
;     ChangeAnim2 controller. The difference between ChangeAnim2 and
;     ChangeAnim is that ChangeAnim2 changes the player's animation to
;     an action in the AIR file of the attacker (in this case, kfm.air),
;     whereas ChangeAnim always changes the player to an action in his
;     own AIR file. Look at Action 820 in kfm.air for some extra
;     comments.
[Statedef 2002]
type = A
movetype = H
physics = N
velset = 0,0
ctrl = 0

[State 20, 1]
type = ChangeAnim2
trigger1 = Time = 0
value = 2002

[State 21, 4] ;Hit ground
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5100 ;Hit ground
;---------------------------------------------------------------------------
;S Thrown by Kung Fu Throw - thrown into the air
; (a custom gethit state)
; Description: This state has the opponent flying through the air and
;     falling down onto the ground. The SelfState controller sets the
;     opponent back using to his own state file when he his the ground.
;     Controllers 821,2 and 821,3 allow the opponent to recover by
;     hitting his recovery command when he is falling.
[Statedef 2003]
type    = A
movetype= H
physics = N
velset = 0,0


[State 21, 1] ;Gravity
type = VelAdd
trigger1 = 1
y = 50
x = 0



[State 1200, Shake Screen]
type = EnvShake
trigger1 = time = 0
time = 8     ;Time to shake screen
ampl = 5     ;Amount to shake
freq = 200   ;A frequency of 180 shakes the screen rapidly\

[State 21, 4] ;Hit ground
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5100 ;Hit ground

;---------------------------------------------------------------------------
; Air Grab Land
; CNS difficulty: easy
;[Statedef 2004]
;type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
;movetype= I                     ;Move-type: A-attack, I-idle, H-gethit
;physics = S                      ;Physics: S-stand, C-crouch, A-air                      ;Number of air juggle points move takes
;Commonly-used controllers:
;velset = 0,0                     ;Set velocity (x,y) (Def: no change)
;ctrl = 0                         ;Set ctrl (Def: no change)
;anim = 2004                       ;Change animation (Def: no change)
;poweradd = 0                    ;Power to add (Def: 0)
;sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

;[State 61, Bind 5]
;type = posset
;trigger1 = time = 1
;x=-10
;y=0

;[State 610, 3]
;type = HitDef
;trigger1 = time = 0
;attr = A, SA
;getpower = 50
;animtype = light
;guardflag = MA
;hitflag = MAFD
;priority  = 5
;pausetime = 15,15
;envshake.time=10
;envshake.freq=10
;envshake.ampl=3
;sparkxy = 0,0
;sparkno = 3
;hitsound   = 5,3
;guardsound = 6,2
;ground.type = Low
;air.velocity = 0,3
;ground.velocity = 0,3
;p2facing = 1
;fall = 1                   ;Make p2 fall down
;fall.recovertime = 40      ;40 ticks before p2 can recover from fall
;yaccel = .3                ;p2 will accelerate down at .4 pixels/sec^2 when falling
;fall.recover = 0

;[State 0, PosAdd]
;type = PosAdd
;trigger1 = animelem = 1
;trigger2 = animelem = 2
;trigger3 = animelem = 3
;trigger4 = animelem = 4
;x = -4

;[State 0, PosAdd]
;type = PosAdd
;trigger1 = animelem = 5
;trigger2 = animelem = 6
;trigger3 = animelem = 7
;trigger4 = animelem = 8
;x = -25

;[State 0, PosAdd]
;type = PosAdd
;trigger1 = animelem = 9
;trigger2 = animelem = 10
;x = -6

;[State 200, 2]
;type = PlaySnd
;trigger1 = Time = 1
;value = 0, 0

;[State 200, 3]
;type = ChangeState
;trigger1 = AnimTime = 0
;value = 0
;ctrl = 1

;---------------------------------------------------------------------------
;S JUMP GRAPPLE
; CNS difficulty: easy
[Statedef 3000]
type    = A
movetype= A
physics = A
juggle  = 0
poweradd= 5
ctrl = 0
anim = 3000
sprpriority = 0
velset = 4,-5
[State 220, Sound]
type = PlaySnd
trigger1 = time = 1
value = 0,2
[State 0, Explod]
type = Explod
trigger1 = time = 1
anim = 6400
ID = 673
pos = 0,-40
postype = p1  ;p2,front,back,left,right
facing = 1
vfacing = 1
bindtime = 1
vel = 0,0
accel = 0,0
random = 0,0
removetime = -2
pausemovetime = 0
scale = 0.7,0.7
sprpriority = 0
ontop = 1
shadow = 0,0,0
ownpal = 1
removeongethit = 0
[State 0, VelSet]
type = VelSet
trigger1 = animelem = 10
x = 2
y = 5
;ignorehitpause = 
;persistent = 

[State 200, 1]
type = HitDef
trigger1 = time = 0
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 30, 0                   ;Damage that move inflicts, guard damage
animtype = hard                ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAFD                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 12, 7                 ;Time attacker pauses, time opponent shakes
sparkno = 3                      ;Spark anim no (Def: set above)
sparkxy = -10, -96              ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 2                  ;Sound to play on hit
guardsound = 6, 2                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 20             ;Time opponent is in hit state
ground.velocity = -4             ;Velocity at which opponent is pushed
p1stateno = 3001
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -4,4           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 15                 ;Time before opponent regains control in air
fall = 1



;----------------------------------------------------

[Statedef 3001]
type = S
movetype= A
physics = S
anim = 3001
poweradd = 60
velset = 10,0

[State 1013,Posadd]
type = Posadd
trigger1 = time = 0
x = 0
y=0


[State 210, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;-------------------------------------------------
;---------------------------------------------------------------------------
;S Thrown by Kung Fu Throw
[Statedef 3002]
type = A
movetype = H
physics = N
velset = 0,0

[State 20, 1]
type = ChangeAnim2
trigger1 = Time = 0
value = 3002


;In case attacker loses binding on player for any reason, this controller
;guarantees that the player will never get stuck in this thrown state.
[State 820, 2]
type = SelfState
trigger1 = !gethitvar(isbound)
value = 5050

;---------------------------------------------------------------------------
;S Thrown by Kung Fu Throw - thrown into the air
; (a custom gethit state)
; Description: This state has the opponent flying through the air and
;     falling down onto the ground. The SelfState controller sets the
;     opponent back using to his own state file when he his the ground.
;     Controllers 821,2 and 821,3 allow the opponent to recover by
;     hitting his recovery command when he is falling.
[Statedef 3003]
type    = A
movetype= H
physics = N
velset = 0,0
poweradd = 40

[State 21, 1] ;Gravity
type = VelAdd
trigger1 = 1
y = 80
x = 0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 0
value = S9000,0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 0
value = S8000,0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 0
value = S8000,1

[State 1200, Shake Screen]
type = EnvShake
trigger1 = time = 0
time = 8     ;Time to shake screen
ampl = 5     ;Amount to shake
freq = 200   ;A frequency of 180 shakes the screen rapidly\

[State 21, 4] ;Hit ground
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5100 ;Hit ground
;---------------------------------------------------------------------------
;S Thrown by Kung Fu Throw
; (a custom gethit state)
; Description: This is the state that the opponent changes to after being
;     hit by KFM's throw HitDef. The important thing here is to use a
;     ChangeAnim2 controller. The difference between ChangeAnim2 and
;     ChangeAnim is that ChangeAnim2 changes the player's animation to
;     an action in the AIR file of the attacker (in this case, kfm.air),
;     whereas ChangeAnim always changes the player to an action in his
;     own AIR file. Look at Action 820 in kfm.air for some extra
;     comments.
[Statedef 822]
type = A
movetype = H
physics = N
ctrl = 0

[State 20, 1]
type = ChangeAnim2
trigger1 = Time = 0
value = 804


;--------------------------------------------------------------------------
;throw invincibilty custom state (pause)
[statedef 1030] 
type = L
movetype = H
physics = N
velset = -3,-5
[State 1030, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 1

[State 5100, 2004.04.14 behavior]
type = null;VelSet
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) = 0
trigger1 = vel x < -1
x = -1

[State 5100, EnvShake]
type = FallEnvShake
trigger1 = Time = 0

[State 5100, Var] ;Save fall velocity
type = VarSet
trigger1 = Time = 0
sysvar(1) = floor(vel y)

[State 5100, 2] ;Hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = (anim != [5051,5059]) && (anim != [5061,5069])
trigger2 = !SelfAnimExist(5100 + (anim % 10))
value = 5100

[State 5100, 3] ;Hit ground anim (for hit up)
type = ChangeAnim
trigger1 = time = 0
trigger1 = (anim = [5051,5059]) || (anim = [5061,5069])
trigger1 = SelfAnimExist(5100 + (anim % 10))
value = 5100 + (anim % 10)

[State 5100, 4]
type = PosSet
trigger1 = Time = 0
y = 0

[State 5100, 5]
type = VelSet
trigger1 = Time = 0
y = 0

[State 5100, 6] ;Reduce speed
type = VelMul
trigger1 = Time = 0
x = 0.75


[State 5100, 8]
type = Explod
trigger1 = Time = 1
anim = F(60 + (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56)))
pos = 0, 0
sprpriority = ifelse (sysvar(1) <= Const720p(56), -10, 10)

[State 5100, 9]
type = HitFallDamage
trigger1 = Time = 3

[State 5100, 10]
type = PlaySnd
trigger1 = Time = 1
value = F7, (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56))

[State 5100, 11]
type = PosFreeze
trigger1 = 1

[State 5100, 13]
type = ForceFeedback
trigger1 = Time = 0
waveform = sinesquare
ampl = 128,-3,-.2,.005
time = 20

[State 0, EnvShake]
type = EnvShake
trigger1 = time = 0
time = 8
freq = 70
ampl = -5

[State 1040, State]
type = ChangeState
trigger1 = HitShakeOver = 1
value = 1031


;throw invincibilty custom state (pause)
[statedef 10300] 
type = L
movetype = H
physics = N
velset = 0,0
[State 1030, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 1

[State 5100, 2004.04.14 behavior]
type = null;VelSet
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) = 0
trigger1 = vel x < -1
x = -1

[State 5100, EnvShake]
type = FallEnvShake
trigger1 = Time = 0

[State 5100, Var] ;Save fall velocity
type = VarSet
trigger1 = Time = 0
sysvar(1) = floor(vel y)

[State 5100, 2] ;Hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = (anim != [5051,5059]) && (anim != [5061,5069])
trigger2 = !SelfAnimExist(5100 + (anim % 10))
value = 5100

[State 5100, 3] ;Hit ground anim (for hit up)
type = ChangeAnim
trigger1 = time = 0
trigger1 = (anim = [5051,5059]) || (anim = [5061,5069])
trigger1 = SelfAnimExist(5100 + (anim % 10))
value = 5100 + (anim % 10)

[State 5100, 4]
type = PosSet
trigger1 = Time = 0
y = 0

[State 5100, 5]
type = VelSet
trigger1 = Time = 0
y = 0

[State 5100, 6] ;Reduce speed
type = VelMul
trigger1 = Time = 0
x = 0.75


[State 5100, 8]
type = Explod
trigger1 = Time = 1
anim = F(60 + (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56)))
pos = 0, 0
sprpriority = ifelse (sysvar(1) <= Const720p(56), -10, 10)

[State 5100, 9]
type = HitFallDamage
trigger1 = Time = 3

[State 5100, 10]
type = PlaySnd
trigger1 = Time = 1
value = F7, (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56))

[State 5100, 11]
type = PosFreeze
trigger1 = 1

[State 5100, 13]
type = ForceFeedback
trigger1 = Time = 0
waveform = sinesquare
ampl = 128,-3,-.2,.005
time = 20

[State 1040, State]
type = ChangeState
trigger1 = HitShakeOver = 1
value = 1031
;-------------------------------------------------------------------------
;throw invincibility (bounce) 
[statedef 1031]
type = L
movetype = H
physics = N

[State 1031, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 1

[State 5101, 1] ;Coming hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim != [5101,5109]
trigger2 = !SelfAnimExist(5160 + (anim % 10))
value = 5160

[State 5101, 2] ;Coming hit ground anim (for hit up)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim = [5101,5109]
trigger1 = SelfAnimExist(5160 + (anim % 10))
value = 5160 + (anim % 10)

[State 5101, 3]
type = HitFallVel
trigger1 = Time = 0

[State 5101, 4]
type = PosSet
trigger1 = Time = 0
y = Const(movement.down.bounce.offset.y)

[State 5101, 5]
type = PosAdd
trigger1 = Time = 0
x = Const(movement.down.bounce.offset.x)

[State 5101, 6] ;Acceleration
type = VelAdd
trigger1 = 1
y = Const(movement.down.bounce.yaccel)

[State 1042, 7] ;Hit ground
trigger1 = Vel Y > 0
trigger1 = Pos Y >= Const(movement.down.bounce.groundlevel)
type = changestate
value = 1032

;-------------------------------------------------------------------------
;throw invincibility (bounce) 
[statedef 10311]
type = L
movetype = H
physics = N

[State 1031, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 1

[State 5101, 1] ;Coming hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim != [5101,5109]
trigger2 = !SelfAnimExist(5160 + (anim % 10))
value = 5160

[State 5101, 2] ;Coming hit ground anim (for hit up)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim = [5101,5109]
trigger1 = SelfAnimExist(5160 + (anim % 10))
value = 5160 + (anim % 10)

[State 5101, 3]
type = HitFallVel
trigger1 = Time = 0

[State 5101, 4]
type = PosSet
trigger1 = Time = 0
y = Const(movement.down.bounce.offset.y)

[State 5101, 5]
type = PosAdd
trigger1 = Time = 0
x = Const(movement.down.bounce.offset.x)

[State 5101, 6] ;Acceleration
type = VelAdd
trigger1 = 1
y = Const(movement.down.bounce.yaccel)

[State 1042, 7] ;Hit ground
trigger1 = Vel Y > 0
trigger1 = Pos Y >= Const(movement.down.bounce.groundlevel)
type = changestate
value = 10322
;--------------------------------------------------------------------------
;throw invincibility (lie down)
[statedef 1032]
type = L
movetype = H
physics = N

[State 5110, EnvShake]
type = FallEnvShake
trigger1 = Time = 0

[State 1000, 0]
type = NotHitBy
trigger1 = 1
value = SCA, NP, SP
time = 10

[State 5110, 1] ;For hit up/up-diag type (from state 5081)
type = ChangeAnim
persistent = 0
trigger1 = SelfAnimExist(5110 + (anim % 10))
trigger1 = anim = [5081,5089]
value = 5110 + (anim % 10)

[State 5110, 2] ;Hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
triggerall = anim != [5110,5119] ;Not already changed anim
trigger1 = anim != [5161,5169]
trigger2 = !SelfAnimExist(5170 + (anim % 10))
value = 5170

[State 5110, 3] ;Hit ground anim (for hit up)
type = ChangeAnim
triggerall = time = 0
triggerall = anim != [5110,5119] ;Not already changed anim
trigger1 = anim = [5161,5169]
trigger1 = SelfAnimExist(5170 + (anim % 10))
value = 5170 + (anim % 10)

[State 5110, 4]
type = HitFallDamage
trigger1 = Time = 0

[State 5110, 5]
type = PosSet
trigger1 = Time = 0
y = 0

[State 5110, Var] ;Get fall velocity
type = VarSet
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) != 0
sysvar(1) = floor(vel y)

[State 5110, 6]
type = PlaySnd
trigger1 = Time = 0
trigger1 = !SysVar(0)
value = F7, (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56))

[State 5110, 7]
type = Explod
trigger1 = Time = 0
trigger1 = !SysVar(0)
anim = F(60 + (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56)))
pos = 0, 0
sprpriority = ifelse (sysvar(1) <= Const720p(56), -10, 10)

[State 5110, 8]
type = VelSet
trigger1 = Time = 0
y = 0

[State 5110, 9] ;For hit up type
type = ChangeAnim
persistent = 0
triggerall = anim = [5171,5179]
triggerall = SelfAnimExist(5110 + (anim % 10))
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground anim
value = 5110 + (anim % 10)

[State 5110, 10] ;For normal
type = ChangeAnim
persistent = 0
triggerall = Anim != [5111,5119]
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground frame
value = 5110

[State 5110, 11] ;If just died
type = ChangeState
triggerall = !alive
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground frame
trigger3 = Anim = [5110,5119]
value = 5150

[State 5110, 12]
type = VarSet
trigger1 = SysVar(0)
trigger1 = Time = 0
sysvar(0) = 0

[State 5110, 13] ;Friction
type = VelMul
trigger1 = 1
x = 0.85

[State 5110, 14] ;Friction
type = VelSet
trigger1 = abs(Vel x) < Const(movement.down.friction.threshold)
persistent = 0
x = 0

[State 5110, 15]
type = ForceFeedback
trigger1 = alive
trigger1 = Time = 0
time = 8
ampl = 240
waveform = sine

[State 5110, 16]
type = ForceFeedback
trigger1 = !alive
trigger1 = Time = 0
ampl = 200, 7, -.467
time = 30
waveform = sine

[State 1032, SelfState]
type = SelfState
trigger1 = time = 30
value = 5120
;--------------------------------------------------------------------------
;throw invincibility (lie down)
[statedef 10322]
type = L
movetype = H
physics = N

[State 5110, EnvShake]
type = FallEnvShake
trigger1 = Time = 0

[State 1000, 0]
type = NotHitBy
trigger1 = 1
value = SCA, NP, SP
time = 10

[State 5110, 1] ;For hit up/up-diag type (from state 5081)
type = ChangeAnim
persistent = 0
trigger1 = SelfAnimExist(5110 + (anim % 10))
trigger1 = anim = [5081,5089]
value = 5110 + (anim % 10)

[State 5110, 2] ;Hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
triggerall = anim != [5110,5119] ;Not already changed anim
trigger1 = anim != [5161,5169]
trigger2 = !SelfAnimExist(5170 + (anim % 10))
value = 5170

[State 5110, 3] ;Hit ground anim (for hit up)
type = ChangeAnim
triggerall = time = 0
triggerall = anim != [5110,5119] ;Not already changed anim
trigger1 = anim = [5161,5169]
trigger1 = SelfAnimExist(5170 + (anim % 10))
value = 5170 + (anim % 10)

[State 5110, 4]
type = HitFallDamage
trigger1 = Time = 0

[State 5110, 5]
type = PosSet
trigger1 = Time = 0
y = 0

[State 5110, Var] ;Get fall velocity
type = VarSet
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) != 0
sysvar(1) = floor(vel y)

[State 5110, 6]
type = PlaySnd
trigger1 = Time = 0
trigger1 = !SysVar(0)
value = F7, (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56))

[State 5110, 7]
type = Explod
trigger1 = Time = 0
trigger1 = !SysVar(0)
anim = F(60 + (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56)))
pos = 0, 0
sprpriority = ifelse (sysvar(1) <= Const720p(56), -10, 10)

[State 5110, 8]
type = VelSet
trigger1 = Time = 0
y = 0

[State 5110, 9] ;For hit up type
type = ChangeAnim
persistent = 0
triggerall = anim = [5171,5179]
triggerall = SelfAnimExist(5110 + (anim % 10))
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground anim
value = 5110 + (anim % 10)

[State 5110, 10] ;For normal
type = ChangeAnim
persistent = 0
triggerall = Anim != [5111,5119]
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground frame
value = 5110

[State 5110, 11] ;If just died
type = ChangeState
triggerall = !alive
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground frame
trigger3 = Anim = [5110,5119]
value = 5150

[State 5110, 12]
type = VarSet
trigger1 = SysVar(0)
trigger1 = Time = 0
sysvar(0) = 0

[State 5110, 13] ;Friction
type = VelMul
trigger1 = 1
x = 0.85

[State 5110, 14] ;Friction
type = VelSet
trigger1 = abs(Vel x) < Const(movement.down.friction.threshold)
persistent = 0
x = 0

[State 5110, 15]
type = ForceFeedback
trigger1 = alive
trigger1 = Time = 0
time = 8
ampl = 240
waveform = sine

[State 5110, 16]
type = ForceFeedback
trigger1 = !alive
trigger1 = Time = 0
ampl = 200, 7, -.467
time = 30
waveform = sine

[State 1032, SelfState]
type = SelfState
trigger1 = time = 20
value = 5120

;---------------------------------------------------------------------------
;throw invincibilty custom state (pause)
[statedef 1033] 
type = L
movetype = H
physics = N
velset = 3,-5
[State 1030, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 1

[State 5100, 2004.04.14 behavior]
type = null;VelSet
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) = 0
trigger1 = vel x < -1
x = -1

[State 5100, EnvShake]
type = FallEnvShake
trigger1 = Time = 0

[State 5100, Var] ;Save fall velocity
type = VarSet
trigger1 = Time = 0
sysvar(1) = floor(vel y)

[State 5100, 2] ;Hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = (anim != [5051,5059]) && (anim != [5061,5069])
trigger2 = !SelfAnimExist(5100 + (anim % 10))
value = 5100

[State 5100, 3] ;Hit ground anim (for hit up)
type = ChangeAnim
trigger1 = time = 0
trigger1 = (anim = [5051,5059]) || (anim = [5061,5069])
trigger1 = SelfAnimExist(5100 + (anim % 10))
value = 5100 + (anim % 10)

[State 5100, 4]
type = PosSet
trigger1 = Time = 0
y = 0

[State 5100, 5]
type = VelSet
trigger1 = Time = 0
y = 0

[State 5100, 6] ;Reduce speed
type = VelMul
trigger1 = Time = 0
x = 0.75


[State 5100, 8]
type = Explod
trigger1 = Time = 1
anim = F(60 + (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56)))
pos = 0, 0
sprpriority = ifelse (sysvar(1) <= Const720p(56), -10, 10)

[State 5100, 9]
type = HitFallDamage
trigger1 = Time = 3

[State 5100, 10]
type = PlaySnd
trigger1 = Time = 1
value = F7, (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56))

[State 5100, 11]
type = PosFreeze
trigger1 = 1

[State 5100, 13]
type = ForceFeedback
trigger1 = Time = 0
waveform = sinesquare
ampl = 128,-3,-.2,.005
time = 20

[State 0, EnvShake]
type = EnvShake
trigger1 = time = 0
time = 8
freq = 70
ampl = -5

[State 1040, State]
type = ChangeState
trigger1 = HitShakeOver = 1
value = 1031
;---------------------------------------------
;throw invincibilty custom state (pause)
[statedef 10333] 
type = L
movetype = H
physics = N
velset = 0,0
[State 1030, NotHitBy]
type = NotHitBy
trigger1 = 1
value = SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
time = 1

[State 5100, 2004.04.14 behavior]
type = null;VelSet
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) = 0
trigger1 = vel x < -1
x = -1

[State 5100, EnvShake]
type = FallEnvShake
trigger1 = Time = 0

[State 5100, Var] ;Save fall velocity
type = VarSet
trigger1 = Time = 0
sysvar(1) = floor(vel y)

[State 5100, 2] ;Hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = (anim != [5051,5059]) && (anim != [5061,5069])
trigger2 = !SelfAnimExist(5100 + (anim % 10))
value = 5100

[State 5100, 3] ;Hit ground anim (for hit up)
type = ChangeAnim
trigger1 = time = 0
trigger1 = (anim = [5051,5059]) || (anim = [5061,5069])
trigger1 = SelfAnimExist(5100 + (anim % 10))
value = 5100 + (anim % 10)

[State 5100, 4]
type = PosSet
trigger1 = Time = 0
y = 0

[State 5100, 5]
type = VelSet
trigger1 = Time = 0
y = 0

[State 5100, 6] ;Reduce speed
type = VelMul
trigger1 = Time = 0
x = 0.75


[State 5100, 8]
type = Explod
trigger1 = Time = 1
anim = F(60 + (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56)))
pos = 0, 0
sprpriority = ifelse (sysvar(1) <= Const720p(56), -10, 10)

[State 5100, 9]
type = HitFallDamage
trigger1 = Time = 3

[State 5100, 10]
type = PlaySnd
trigger1 = Time = 1
value = F7, (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56))

[State 5100, 11]
type = PosFreeze
trigger1 = 1

[State 5100, 13]
type = ForceFeedback
trigger1 = Time = 0
waveform = sinesquare
ampl = 128,-3,-.2,.005
time = 20

[State 0, EnvShake]
type = EnvShake
trigger1 = time = 0
time = 8
freq = 70
ampl = -5

[State 1040, State]
type = ChangeState
trigger1 = HitShakeOver = 1
value = 10311

;-----------------------------------------------------------------------------
; BOUNCE CUSTOM STATE (shaking)
[Statedef 43211]
type    = A
movetype= H
physics = N
velset = 0,0
ctrl = 0
[State 5020, 1] ;Anim for HIT_LIGHT to HIT_HARD
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) != [3,5]
value = ifelse((GetHitVar(airtype) = 1),5000,5010) + GetHitVar(animtype)

[State 5020, 2] ;Anim for HIT_BACK
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) = [3,5]
value = 5030

[State 5020, 3] ;Anim for HIT_UP/HIT_DIAGUP (only if it exists)
type = ChangeAnim
trigger1 = Time = 0
trigger1 = (GetHitVar(animtype) = [4,5]) && (SelfAnimExist(5047 + GetHitVar(animtype)))
value = 5047 + GetHitVar(animtype) ;5051 - 4 + type

[State 5020, 4] ;Freeze anim
type = ChangeAnim
trigger1 = Time > 0
value = anim

[State 5020, 5]
type = ChangeState
trigger1 = HitShakeOver
value = 43222

[State 5020, FFB Light]
type = ForceFeedback
trigger1 = anim = 5000
trigger2 = anim = 5010
persistent = 0
time = 6
waveform = square

[State 5020, FFB Medium]
type = ForceFeedback
trigger1 = anim = 5001
trigger2 = anim = 5011
persistent = 0
time = 8
waveform = sinesquare
ampl = 110,-1,-.3

[State 5020, FFB Hard]
type = ForceFeedback
trigger1 = anim = 5012
trigger2 = anim = 5002
trigger3 = anim = 5030
trigger4 = anim = [5051,5059]
persistent = 0
time = 15
waveform = sinesquare
ampl = 140

;BOUNCE CUSTOM STATE (knocked back)
[Statedef 43222]
type    = A
movetype= H
physics = N
ctrl = 0

[State 5030, 1]
type = ChangeAnim
trigger1 = Anim != [5000, 5199]
trigger1 = SelfAnimExist(5030)
value = 5030

[State 5030, 2]
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)

[State 5030, 3]
type = HitVelSet
trigger1 = Time = 0
x = 1
y = 1

[State 5030, 4]
type = selfState
triggerall = !HitFall
trigger1 = HitOver
trigger2 = Vel Y > 0    ;Hit ground
trigger2 = Pos Y >= Const(movement.air.gethit.groundlevel)
value = 5040 ;HITA_RECOV

[State 5030, 5]
type = ChangeState
triggerall = HitFall
trigger1 = HitOver
trigger2 = Vel Y > 0    ;Hit ground
trigger2 = Pos Y >= Const(movement.air.gethit.groundlevel)
value = 43333 ;HITA_FALL

;BOUNCE CUSTOM STATE (falling)
[Statedef 43333]
type    = A
movetype= H
physics = N
ctrl = 0
[State 5050, 1] ;Change anim when done with transition
type = ChangeAnim
trigger1 = AnimTime = 0
trigger1 = Anim = 5035
trigger2 = Time = 0     ;If no transition anim
trigger2 = Anim != 5035
trigger2 = (Anim != [5051, 5059]) && (Anim != [5061, 5069])
trigger2 = Anim != 5090 ;Not if hit off ground anim
value = 5050

[State 5050, 2] ;Coming down anim
type = ChangeAnim
trigger1 = anim = [5050,5059]
trigger1 = Vel Y >= ifelse(anim = 5050, Const720p(4), Const720p(-8))
trigger1 = SelfAnimExist(anim+10)
value = anim+10
persistent = 0

[State 5050, 3] ;Gravity
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)



[State 5050, 6]
type = changestate
trigger1 = Vel Y > 0
trigger1 = Pos Y >= ifelse((anim = [5051,5059]) || (anim = [5061,5069]), 0, Const(movement.air.gethit.groundlevel))
value = 54321;Downed get-hit (hit ground from fall)

;--------------------------------------------------------------------------------------
; BOUNCE CUSTOM STATE (hit ground from fall)
[Statedef 54321]
type    = L
movetype= H
physics = N

[State 5100, 2004.04.14 behavior]
type = null;VelSet
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) = 0
trigger1 = vel x < -1
x = -1

[State 5100, EnvShake]
type = FallEnvShake
trigger1 = Time = 0

[State 5100, Var] ;Save fall velocity
type = VarSet
trigger1 = Time = 0
sysvar(1) = floor(vel y)

[State 5100, 2] ;Hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = (anim != [5051,5059]) && (anim != [5061,5069])
trigger2 = !SelfAnimExist(5100 + (anim % 10))
value = 5100

[State 5100, 3] ;Hit ground anim (for hit up)
type = ChangeAnim
trigger1 = time = 0
trigger1 = (anim = [5051,5059]) || (anim = [5061,5069])
trigger1 = SelfAnimExist(5100 + (anim % 10))
value = 5100 + (anim % 10)

[State 5100, 4]
type = PosSet
trigger1 = Time = 0
y = 0

[State 5100, 5]
type = VelSet
trigger1 = Time = 0
y = 0

[State 5100, 6] ;Reduce speed
type = VelMul
trigger1 = Time = 0
x = 0.75

[State 5100, 7]
type = ChangeState
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) = 0
value = 5110 ;Downed get-hit (lying down)

[State 5100, 8]
type = Explod
trigger1 = Time = 1
anim = F(60 + (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56)))
pos = 0, 0
sprpriority = ifelse (sysvar(1) <= Const720p(56), -10, 10)

[State 5100, 9]
type = HitFallDamage
trigger1 = Time = 3

[State 5100, 10]
type = PlaySnd
trigger1 = Time = 1
value = F7, (sysvar(1) > Const720p(20)) + (sysvar(1) > Const720p(56))

[State 5100, 11]
type = PosFreeze
trigger1 = 1

[State 5100, 12]
type = ChangeState
trigger1 = AnimTime = 0
value = 54322 ;Downed get-hit (bounce off ground)

[State 5100, 13]
type = ForceFeedback
trigger1 = Time = 0
waveform = sinesquare
ampl = 128,-3,-.2,.005
time = 20

;---------------------------------------------------------------------------
; Downed get-hit (bounce off ground)
[Statedef 54322]
type    = L
movetype= H
physics = N

[State 5101, 1] ;Coming hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim != [5101,5109]
trigger2 = !SelfAnimExist(5160 + (anim % 10))
value = 5160

[State 5101, 2] ;Coming hit ground anim (for hit up)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim = [5101,5109]
trigger1 = SelfAnimExist(5160 + (anim % 10))
value = 5160 + (anim % 10)

[State 5101, 3]
type = HitFallVel
trigger1 = Time = 0

[State 5101, 4]
type = PosSet
trigger1 = Time = 0
y = Const(movement.down.bounce.offset.y)

[State 5101, 5]
type = PosAdd
trigger1 = Time = 0
x = Const(movement.down.bounce.offset.x)

[State 5101, 6] ;Acceleration
type = VelAdd
trigger1 = 1
y = Const(movement.down.bounce.yaccel)

[State 5101, 7] ;Hit ground
trigger1 = Vel Y > 0
trigger1 = Pos Y >= Const(movement.down.bounce.groundlevel)
type = selfState
value = 5110

;---------------------------------------------------------------------------
;S Thrown by Kung Fu Throw - thrown into the air
; (a custom gethit state)
; Description: This state has the opponent flying through the air and
;     falling down onto the ground. The SelfState controller sets the
;     opponent back using to his own state file when he his the ground.
;     Controllers 821,2 and 821,3 allow the opponent to recover by
;     hitting his recovery command when he is falling.
[Statedef 823]
type    = A
movetype= H
physics = N
velset = 0,0
poweradd = 40


[State 21, 1] ;Gravity
type = VelAdd
trigger1 = 1
y = 1
x = 0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 0
value = S9000,0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 0
value = S8000,0

[State 0, PlaySnd]
type = PlaySnd
trigger1 = time = 0
value = S8000,1

[State 1000, 5] ;Opponent near
type = HitDef
triggerall = anim = 810
trigger1 = animelem = 8
pausetime = 12,12
sparkno = 3
hitsound   = 5,3
fall.recover = 0

[State 1200, Shake Screen]
type = EnvShake
trigger1 = time = 0
time = 8     ;Time to shake screen
ampl = 5     ;Amount to shake
freq = 200   ;A frequency of 180 shakes the screen rapidly\

[State 21, 4] ;Hit ground
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5100 ;Hit ground


;---------------------------------------------------------------------------
;EX Thrown by Kung Fu Throw
; (a custom gethit state)
; Description: This is the state that the opponent changes to after being
;     hit by KFM's throw HitDef. The important thing here is to use a
;     ChangeAnim2 controller. The difference between ChangeAnim2 and
;     ChangeAnim is that ChangeAnim2 changes the player's animation to
;     an action in the AIR file of the attacker (in this case, kfm.air),
;     whereas ChangeAnim always changes the player to an action in his
;     own AIR file. Look at Action 820 in kfm.air for some extra
;     comments.
[Statedef 824]
type = A
movetype = H
physics = N
velset = 0,0

[State 20, 1]
type = ChangeAnim2
trigger1 = Time = 0
value = 804


;---------------------------------------------------------------------------
;EX Thrown by Kung Fu Throw - thrown into the air
; (a custom gethit state)
; Description: This state has the opponent flying through the air and
;     falling down onto the ground. The SelfState controller sets the
;     opponent back using to his own state file when he his the ground.
;     Controllers 821,2 and 821,3 allow the opponent to recover by
;     hitting his recovery command when he is falling.
[Statedef 825]
type    = A
movetype= H
physics = N
velset = 0,0
poweradd = 40



[State 21, 1] ;Gravity
type = VelAdd
trigger1 = 1
y = 80
x = -1

[State 21, 4] ;Hit ground
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5050 ;Hit ground


;---------------------------------------------------------------------------
; States that are always executed (use statedef -2)
;---------------------------------------------------------------------------

[STATEDEF -2]

;XCOSTUME

;[state -2, No Clones]
;type = remappal
;triggerall=numenemy && (fvar(36)=[1,20]);fvar(36)=the number of pals available 
;trigger1=fvar(37)&&!numhelper(12345)&&matchno=1&&roundno=1
;trigger1=enemy,authorname="Bonehouse"&&enemy,name="Zerker"&&enemy,fvar(36)=fvar(36) 
;source = 1, 1
;dest = 1, Ifelse(teamside!=1 && enemynear,Numhelper(12345)=0,enemy,fvar(36)+teamside,fvar(36))
;ignorehitpause = 1

;[state -2, Palette]
;type = varset
;trigger1 = numhelper(12345)
;trigger1=helper(12345),fvar(36)=[1,20]
;fvar(36)= helper(12345),fvar(36)
;ignorehitpause = 1

;[state -2, Palette Selection]
;type = remappal
;trigger1 = numhelper(12345)
;trigger1=helper(12345),fvar(36)=[1,20]
;source = 1, 1
;dest = 1, fvar(36)
;ignorehitpause = 1

;[state -2, Continue Palette]
;type = remappal
;trigger1=fvar(37)&&!AILevel&&matchno>1
;source = 1, 1
;dest = 1, fvar(36)
;ignorehitpause = 1
;-----------------------------------------------------------
;ACID DAMAGE OVER TIME
[State 0, Var Acid Damage]
type = MapAdd
trigger1 = map(acid) >= 1
map = "acid"
value = -1
ignorehitpause = 1

[State 0, LifeAdd]
type = LifeAdd
triggerall = time%2 = 0
trigger1 = enemy, name = "Bog (ACB)" && enemy, map(acid) >= 1
value = -1
kill = 0

[State -2, Training stuff, it won't effect the gameplay]
;also I'm tired of pressing the spacebar. :P
type = AssertSpecial
trigger1 = Enemy, Name = "Training"
flag = timerfreeze
ignorehitpause = 1

[State -2, VarSet];Checks if opponent is in attack state
type = VarSet
triggerall = numenemy
trigger1 = enemy, movetype = A
var(56) = 1
ignorehitpause = 1

[State -2, VarSet];This resets the condition if counter not succesful and succesful
type = VarSet
triggerall = numenemy
trigger1 = enemy, movetype = I || var(57) >= 1  ;Enemy is Idle | Counter was Succesful
trigger2 = var(57) > 10 && enemy, movetype = H  ;10 ticks passed & enemy is on gethit state
var(56) = 0
ignorehitpause = 1

[State -2, VarSet];Counter Hit Succesful
type = VarSet
trigger1 = var(56) = 1 && movehit ;Counter Check Ok, Move Hit Succesfully.
trigger1 = stateno != [190,199] ;Does not activate during intros.
trigger1 = stateno != [800,820] ;Does not activate during throws.
trigger1 = stateno != [950,951] ;Don't activate during throws.
trigger2 = var(56) = 1 && projhit = 1  ;Counter Check Ok, Projectile Hit Succesfully.
var(57) = 1
ignorehitpause = 1

[State -2, VarAdd];Counter Hit Timer
type = VarAdd
trigger1 = var(57) >= 1 ;Counter was succesful
var(57) = 1
ignorehitpause = 1

[State -2, VarSet];Counter Hit Reset
type = VarSet
trigger1 = var(57) >= 22 && movehit ;Reset if 22 ticks passed and move hit
trigger2 = p2movetype != H ;Reset if P2 is no longer in gethit state
trigger3 = movetype = H ;Reset if P1 is getting hit
trigger4 = var(57) >= 22 && projhit = 1 ;Reset if 22 ticks passed and projectile hit
var(57) = 0
ignorehitpause = 1

[State -2, AssertSpecial];This will award free juggles for Counter Hit.
type = AssertSpecial
trigger1 = var(57) > 0
flag = nojugglecheck


[State -2, counterhit damage change]
type=attackmulset
trigger1 = var(57) >= 1
value = 1.0;only for test;1.1;1.8;2;0.7
ignorehitpause=0

[State -2, EnvColor];This will produce a flash a la KOF2K2
type = EnvColor
triggerall = numenemy
triggerall = stateno != [190,199] ;Does not activate during intros.
triggerall = stateno != [800,820] ;Does not activate during throws.
triggerall = stateno != [950,951] ;Don't activate during throws.
triggerall = enemy, movetype = h ;Enemy was indeed HIT, otherwise this'd be retarded.
trigger1 = var(56) = 1 && movehit  ;Move hit, Ok
trigger2 = var(56) = 1 && projhit = 1 ;Projectile hit, Ok
value = 255,255,255
time = 1
under = 1
ignorehitpause = 1
persistent = 0

[State -2, Explod];Counter Explod for P1 Side.
type = Explod
triggerall = numenemy
triggerall = var(56) = 1 && numexplod(13000) = 0 && teamside = 1 ;Counter Ok, Explod has not played, P1 Side
triggerall = enemy, movetype = h ;Enemy was indeed HIT, otherwise this'd be retarded.
triggerall = stateno != [800,820] ;Does not activate during throws.
triggerall = stateno != [950,951] ;Don't activate during throws.
trigger1 = movehit ;Move hits
trigger2 = projhit = 1 ;Projectile Hits
anim = 13000
pos = 30,210
postype = left  ;p2,front,back,left,right
removetime = -2
supermove = 1
scale = 0.5,0.5
sprpriority = 0
id = 13000
bindtime = -1
ontop = 1
ownpal = 1
ignorehitpause = 1
pausemovetime = -1

[State -2, Explod];Counter Explod for P2 Side.
type = Explod
triggerall = numenemy
triggerall = var(56) = 1 && numexplod(13000) = 0 && teamside = 2 ;Counter Ok, Explod has not played, P2 Side
triggerall = enemy, movetype = h ;Enemy was indeed HIT, otherwise this'd be retarded.
triggerall = stateno != [800,820] ;Does not activate during throws.
triggerall = stateno != [950,951] ;Don't activate during throws.
trigger1 = movehit ;Move hits
trigger2 = projhit = 1 ;Projectile Hits
anim = 13001
pos = -30,210
postype = right  ;p2,front,back,left,right
removetime = -2
supermove = 1
scale = 0.5,0.5
sprpriority = 0
id = 13000
bindtime = -1
ontop = 1
ownpal = 1
ignorehitpause = 1
pausemovetime = -1

;Corpse Raise Limiter
[State 0, RemoveExplod]
type = RemoveExplod
trigger1 = !numtarget
id = 44021

[State -2, Landing Sound]
type = PlaySnd
triggerall = anim = 20
trigger1 = animelem = 5
trigger2 = animelem = 7
triggerall = stateno = 20 ;Jump land
value = 1003,0

[State -2, Landing Sound]
type = PlaySnd
triggerall = anim = 100
trigger1 = animelem = 7
trigger2 = animelem = 12
triggerall = stateno = 100 ;Jump land
value = 1003,0

[State -2, Landing Sound]
type = PlaySnd
triggerall = anim = 21
trigger1 = animelem = 6
trigger2 = animelem = 8
triggerall = stateno = 20 ;Jump land
value = 1003,0

 [State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(59) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(59)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(59) != 0
trigger1= p2stateno = 5110
var(59)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(6) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(6)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(6) != 0
trigger1= p2stateno = 5110
var(6)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(7) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(7)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(7) != 0
trigger1= p2stateno = 5110
var(7)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(30) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(30)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(30) != 0
trigger1= p2stateno = 5110
var(30)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(31) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(31)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(31) != 0
trigger1= p2stateno = 5110
var(31)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(34) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(34)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(34) != 0
trigger1= p2stateno = 5110
var(34)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(35) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(35)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(35) != 0
trigger1= p2stateno = 5110
var(35)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(36) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(36)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(36) != 0
trigger1= p2stateno = 5110
var(36)=0

[State -2, Reset var when the opponent recovers]
    type=varset
    triggerall = var(37) != 0
    trigger1= numenemy
    trigger1= (enemynear,movetype!=H)
    trigger2= !numenemy    ;I think this may be what's messing things up.....
    var(37)=0

[State -2, reset var when dab meter burn cancel is used]
type=varset
triggerall = var(37) != 0
trigger1= p2stateno = 5110
var(37)=0

[State -2, AssertSpecial]
type = AssertSpecial
trigger1 = 1
flag = NoAirGuard

;===============================================================================
; ------- Damage Dampener --------
;===============================================================================
[State -2, Counter Flag] 
type = VarSet
trigger1 = NumEnemy
fvar(8) = (EnemyNear, MoveType = A)
ignoreHitPause = 1
 
;Damage Dampener Variable (by POTS)
[State -2, Hit Count] 
type = VarAdd 
trigger1 = !IsHelper
trigger1 = MoveHit = 1 
trigger1 = !HitPauseTime  
fvar(13) = 1 
 
[State -2, Hit Count Reset] 
type = VarSet 
trigger1 = NumEnemy && fvar(13) 
trigger1 = (EnemyNear, MoveType != H) && (EnemyNear, StateNo != 5300) 
fvar(13) = 0 
ignoreHitPause = 1
 
[State -2, Dampener] 
type = VarSet 
trigger1 = 1 
fvar(10) = ifElse(fvar(13) < 1, 15, ifElse(fvar(13) >= 15, 1, 15 - fvar(13))) / 15.0 
ignoreHitPause = 1 
 
[State -2, Dampener Limit] 
type = VarSet 
trigger1 = fvar(10) < 0 
fvar(10) = 0 
ignoreHitPause = 1 
 
[State -2, Root Dampener] 
type = VarSet 
trigger1 = 1 
fvar(11) = fvar(10) * ifElse(fvar(8), 1.2, 1) 
ignoreHitPause = 1
;---------------------------------------------------------------------------
; States that are executed when in self's state file (use statedef -3)
;---------------------------------------------------------------------------

[Statedef -3]

[State 0, DisplayToClipboard]
type = DisplayToClipboard
trigger1 = 1
text = "Map(GrabDmg) = %d"
params = Map(GrabDmg)

[State 0, Meter]
type = Powerset
triggerall = enemy,name != "Training"
triggerall = roundno = 1
trigger1 = roundstate = 0
value = 1000

[State Throw Tech]
type = mapset
trigger1 = ctrl
map = "CanTT"
value = 1

[State Throw Tech]
type = mapset
trigger1 = !ctrl
map = "CanTT"
value = 0

[State Timer]
type = mapset
trigger1 = enemy,movetype != H
map = "EXDP"
value = 0

[State Timer]
type = mapset
trigger1 = enemy,movetype != H
map = "EXTACK"
value = 0

[State Timer]
type = mapset
trigger1 = enemy,movetype != H
map = "EXELBOW"
value = 0

[State Limiter]
type = mapset
trigger1 = enemy,movetype != H
map = "f.SK"
value = 0

[State Limiter]
type = mapset
trigger1 = enemy,movetype != H
map = "ltackle"
value = 0

[State Limiter]
type = mapset
trigger1 = enemy,movetype != H
map = "stackle"
value = 0

[State Limiter]
type = mapset
trigger1 = enemy,movetype != H
map = "LP"
value = 0

[State Limiter]
type = mapset
trigger1 = enemy,movetype != H
map = "c.LP"
value = 0

[State Limiter]
type = mapset
trigger1 = enemy,movetype != H
map = "c.LK"
value = 0

[State Limiter]
type = mapset
trigger1 = enemy,movetype != H
map = "DPGrab"
value = 0


;This controller plays a sound everytime KFM lands from a jump, or
;from his back-dash.
[State -3, Landing Sound]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 52 ;Jump land
trigger2 = stateno = 106 ;Run-back land
value = 40, 0
